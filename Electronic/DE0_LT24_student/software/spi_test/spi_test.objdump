
spi_test.elf:     file format elf32-littlenios2
spi_test.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x020001bc

Program Header:
    LOAD off    0x00001000 vaddr 0x02000000 paddr 0x02000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x02000020 paddr 0x02000020 align 2**12
         filesz 0x0000f28c memsz 0x0000f28c flags r-x
    LOAD off    0x000102ac vaddr 0x0200f2ac paddr 0x02010d98 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00012884 vaddr 0x02012884 paddr 0x02012884 align 2**12
         filesz 0x00000000 memsz 0x0000015c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  02000000  02000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   0000019c  02000020  02000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000edd8  020001bc  020001bc  000011bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000318  0200ef94  0200ef94  0000ff94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0200f2ac  02010d98  000102ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000015c  02012884  02012884  00012884  2**2
                  ALLOC, SMALL_DATA
  6 .background_mem 00000000  00000000  00000000  00011d98  2**0
                  CONTENTS
  7 .SDRAM        00000000  020129e0  020129e0  00011d98  2**0
                  CONTENTS
  8 .pic_mem      00000000  04000000  04000000  00011d98  2**0
                  CONTENTS
  9 .comment      00000023  00000000  00000000  00011d98  2**0
                  CONTENTS, READONLY
 10 .debug_aranges 00000ee8  00000000  00000000  00011dc0  2**3
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_info   00023780  00000000  00000000  00012ca8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 0000908a  00000000  00000000  00036428  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000b1cc  00000000  00000000  0003f4b2  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000020a0  00000000  00000000  0004a680  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0000318c  00000000  00000000  0004c720  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_loc    00016ed8  00000000  00000000  0004f8ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_alt_sim_info 00000060  00000000  00000000  00066784  2**2
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_ranges 000017d8  00000000  00000000  000667e8  2**3
                  CONTENTS, READONLY, DEBUGGING
 19 .thread_model 00000003  00000000  00000000  0006b161  2**0
                  CONTENTS, READONLY
 20 .cpu          00000003  00000000  00000000  0006b164  2**0
                  CONTENTS, READONLY
 21 .qsys         00000001  00000000  00000000  0006b167  2**0
                  CONTENTS, READONLY
 22 .simulation_enabled 00000001  00000000  00000000  0006b168  2**0
                  CONTENTS, READONLY
 23 .stderr_dev   00000009  00000000  00000000  0006b169  2**0
                  CONTENTS, READONLY
 24 .stdin_dev    00000009  00000000  00000000  0006b172  2**0
                  CONTENTS, READONLY
 25 .stdout_dev   00000009  00000000  00000000  0006b17b  2**0
                  CONTENTS, READONLY
 26 .sopc_system_name 0000000d  00000000  00000000  0006b184  2**0
                  CONTENTS, READONLY
 27 .quartus_project_dir 00000032  00000000  00000000  0006b191  2**0
                  CONTENTS, READONLY
 28 .jdi          000042fc  00000000  00000000  0006b1c3  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     0008d8d1  00000000  00000000  0006f4bf  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
02000000 l    d  .entry	00000000 .entry
02000020 l    d  .exceptions	00000000 .exceptions
020001bc l    d  .text	00000000 .text
0200ef94 l    d  .rodata	00000000 .rodata
0200f2ac l    d  .rwdata	00000000 .rwdata
02012884 l    d  .bss	00000000 .bss
00000000 l    d  .background_mem	00000000 .background_mem
020129e0 l    d  .SDRAM	00000000 .SDRAM
04000000 l    d  .pic_mem	00000000 .pic_mem
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../spi_test_bsp//obj/HAL/src/crt0.o
02000204 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
02000094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0200effa l     O .rodata	00000010 zeroes.4255
020023a4 l     F .text	000000bc __sbprintf
0200f00a l     O .rodata	00000010 blanks.4254
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
020025b4 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
02004170 l     F .text	00000008 __fp_lock
02004178 l     F .text	00000008 __fp_unlock
0200418c l     F .text	0000019c __sinit.part.1
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0200f2ac l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0200f6f0 l     O .rwdata	00000020 lc_ctype_charset
0200f6d0 l     O .rwdata	00000020 lc_message_charset
0200f710 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0200f03c l     O .rodata	0000000c p05.2710
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
020075fc l     F .text	000000fc __sprint_r.part.0
0200f170 l     O .rodata	00000010 blanks.4199
0200f160 l     O .rodata	00000010 zeroes.4200
02008a04 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
02009f08 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0200c634 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0200c754 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0200c780 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0200c880 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0200c974 l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0200ca58 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0200cc34 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
02010d88 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0200cec0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0200d008 l     F .text	00000038 alt_dev_reg
0200fcf8 l     O .rwdata	00001060 JTAG_UART
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0200d2fc l     F .text	00000204 altera_avalon_jtag_uart_irq
0200d500 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0200db20 l     F .text	00000074 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0200def8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0200e3a4 l     F .text	000000c0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0200e4dc l     F .text	00000050 alt_get_errno
0200e52c l     F .text	000000cc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
02006c74 g     F .text	00000074 _mprec_log10
02006d60 g     F .text	0000008c __any_on
02008f70 g     F .text	00000054 _isatty_r
0200f048 g     O .rodata	00000028 __mprec_tinytens
0200cb7c g     F .text	00000078 alt_main
020002dc g     F .text	000000a8 _puts_r
020128e0 g     O .bss	00000100 alt_irq
02008fc4 g     F .text	0000005c _lseek_r
02010d98 g       *ABS*	00000000 __flash_rwdata_start
0200b19c g     F .text	00000084 .hidden __eqdf2
04000000 g       *ABS*	00000000 __alt_mem_pic_mem
020129e0 g       *ABS*	00000000 __alt_heap_start
020002a0 g     F .text	0000003c printf
020091d0 g     F .text	0000009c _wcrtomb_r
020074f4 g     F .text	0000005c __sseek
020044c0 g     F .text	00000010 __sinit
0200907c g     F .text	00000138 __swbuf_r
02004f6c g     F .text	0000007c _setlocale_r
02004328 g     F .text	00000068 __sfmoreglue
0200cc14 g     F .text	00000020 __malloc_unlock
02005bcc g     F .text	0000015c memmove
020044a8 g     F .text	00000018 _cleanup
02005e4c g     F .text	000000a8 _Balloc
0200b220 g     F .text	000000e0 .hidden __gtdf2
00000000  w      *UND*	00000000 __errno
02000000 g     F .entry	0000001c __reset
02000020 g       *ABS*	00000000 __flash_exceptions_start
02008f18 g     F .text	00000058 _fstat_r
0201289c g     O .bss	00000004 errno
02007470 g     F .text	00000008 __seofread
020128a4 g     O .bss	00000004 alt_argv
02018d58 g       *ABS*	00000000 _gp
0200ce90 g     F .text	00000030 usleep
0200fb78 g     O .rwdata	00000180 alt_fd_list
0200e90c g     F .text	00000090 alt_find_dev
02005a94 g     F .text	00000138 memcpy
02004180 g     F .text	0000000c _cleanup_r
0200c45c g     F .text	000000d0 .hidden __floatsidf
0200e464 g     F .text	00000078 alt_io_redirect
0200b300 g     F .text	000000e0 .hidden __ltdf2
0200ef94 g       *ABS*	00000000 __DTOR_END__
02000384 g     F .text	00000014 puts
02007354 g     F .text	00000074 __fpclassifyd
02006bd0 g     F .text	000000a4 __ratio
020089e0 g     F .text	00000024 __vfiprintf_internal
0200d6fc g     F .text	0000020c altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
02000274 g     F .text	0000002c _printf_r
0200a024 g     F .text	00000008 .hidden __udivsi3
0200c8d0 g     F .text	000000a4 isatty
0200f098 g     O .rodata	000000c8 __mprec_tens
02004fe8 g     F .text	0000000c __locale_charset
0200eb64 g     F .text	0000008c alt_icache_flush
02012898 g     O .bss	00000004 __malloc_top_pad
02010d60 g     O .rwdata	00000004 __mb_cur_max
02005018 g     F .text	0000000c _localeconv_r
02006258 g     F .text	0000003c __i2b
02004924 g     F .text	000004c0 __sfvwrite_r
020073c8 g     F .text	00000054 _sbrk_r
02009020 g     F .text	0000005c _read_r
02010d80 g     O .rwdata	00000004 alt_max_fd
02008c34 g     F .text	000000f0 _fclose_r
02004140 g     F .text	00000030 fflush
02012894 g     O .bss	00000004 __malloc_max_sbrked_mem
0200a034 g     F .text	0000089c .hidden __adddf3
02006978 g     F .text	0000011c __b2d
02009978 g     F .text	00000590 .hidden __umoddi3
0200caa8 g     F .text	000000d4 lseek
02010d58 g     O .rwdata	00000004 _global_impure_ptr
02006dec g     F .text	00000568 _realloc_r
020129e0 g       *ABS*	00000000 __bss_end
0200e2b4 g     F .text	000000f0 alt_iic_isr_register
0200e7e8 g     F .text	00000104 alt_tick
020093b8 g     F .text	000005c0 .hidden __udivdi3
02008d38 g     F .text	00000184 _fputwc_r
0200f070 g     O .rodata	00000028 __mprec_bigtens
0200603c g     F .text	00000104 __s2b
0200c52c g     F .text	000000a4 .hidden __floatunsidf
02006720 g     F .text	00000060 __mcmp
020044e0 g     F .text	00000018 __fp_lock_all
0200e268 g     F .text	0000004c alt_ic_irq_enabled
0200e750 g     F .text	00000098 alt_alarm_stop
020128ac g     O .bss	00000004 alt_irq_active
020000ec g     F .exceptions	000000d0 alt_irq_handler
0200fb50 g     O .rwdata	00000028 alt_dev_null
0200deb4 g     F .text	00000044 alt_dcache_flush_all
02006140 g     F .text	00000068 __hi0bits
0200c3d4 g     F .text	00000088 .hidden __fixdfsi
02010d98 g       *ABS*	00000000 __ram_rwdata_end
02010d78 g     O .rwdata	00000008 alt_dev_list
0200cf10 g     F .text	000000f8 write
0200f2ac g       *ABS*	00000000 __ram_rodata_end
0200c7d0 g     F .text	000000b0 fstat
02000000 g       *ABS*	00000000 __alt_mem_SDRAM
0200b300 g     F .text	000000e0 .hidden __ledf2
02006490 g     F .text	00000140 __pow5mult
02007710 g     F .text	000012d0 ___vfiprintf_internal_r
0201288c g     O .bss	00000004 __nlocale_changed
0200a02c g     F .text	00000008 .hidden __umodsi3
020129e0 g       *ABS*	00000000 end
0200d238 g     F .text	000000c4 altera_avalon_jtag_uart_init
0200ef94 g       *ABS*	00000000 __CTOR_LIST__
04000000 g       *ABS*	00000000 __alt_stack_pointer
0200db94 g     F .text	00000088 alt_avalon_timer_sc_init
0200c5d0 g     F .text	00000064 .hidden __clzsi2
0200d908 g     F .text	00000218 altera_avalon_jtag_uart_write
020044d0 g     F .text	00000004 __sfp_lock_acquire
020059ac g     F .text	000000e8 memchr
02000430 g     F .text	00001f50 ___vfprintf_internal_r
02004634 g     F .text	000002f0 _free_r
02004ff4 g     F .text	00000010 __locale_mb_cur_max
0200edcc g     F .text	00000194 __call_exitprocs
02012888 g     O .bss	00000004 __mlocale_changed
02010d64 g     O .rwdata	00000004 __malloc_sbrk_base
020001bc g     F .text	0000004c _start
00000000 g       *ABS*	00000000 __alt_mem_background_mem
020128b0 g     O .bss	00000004 _alt_tick_rate
020065d0 g     F .text	00000150 __lshift
020128b4 g     O .bss	00000004 _alt_nticks
0200cc84 g     F .text	000000fc read
0200d074 g     F .text	00000060 alt_sys_init
0200ecb8 g     F .text	00000114 __register_exitproc
02006294 g     F .text	000001fc __multiply
0200d5a8 g     F .text	00000068 altera_avalon_jtag_uart_close
0200f2ac g       *ABS*	00000000 __ram_rwdata_start
0200ef94 g       *ABS*	00000000 __ram_rodata_start
020128b8 g     O .bss	00000028 __malloc_current_mallinfo
02006a94 g     F .text	0000013c __d2b
0200d0d4 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0200eab0 g     F .text	000000b4 alt_get_fd
0200dd5c g     F .text	00000158 alt_busy_sleep
02008b1c g     F .text	00000054 _close_r
0200ec3c g     F .text	0000007c memcmp
0200d194 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
020129e0 g       *ABS*	00000000 __alt_stack_base
0200d1e4 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
02002460 g     F .text	00000154 __swsetup_r
0200a8d0 g     F .text	000008cc .hidden __divdf3
02004390 g     F .text	00000118 __sfp
02006ce8 g     F .text	00000078 __copybits
0200f748 g     O .rwdata	00000408 __malloc_av_
020044dc g     F .text	00000004 __sinit_lock_release
0200b3e0 g     F .text	00000724 .hidden __muldf3
0200741c g     F .text	00000054 __sread
0200e99c g     F .text	00000114 alt_find_file
0200df48 g     F .text	000000a4 alt_dev_llist_insert
0200cbf4 g     F .text	00000020 __malloc_lock
0200cde0 g     F .text	000000b0 sbrk
020040e4 g     F .text	0000005c _fflush_r
02008b70 g     F .text	000000c4 _calloc_r
02012884 g       *ABS*	00000000 __bss_start
02005d28 g     F .text	00000124 memset
02000208 g     F .text	0000006c main
020128a8 g     O .bss	00000004 alt_envp
02012890 g     O .bss	00000004 __malloc_max_total_mem
0200d134 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
020091b4 g     F .text	0000001c __swbuf
02007550 g     F .text	00000008 __sclose
04000000 g       *ABS*	00000000 __alt_heap_limit
02008d24 g     F .text	00000014 fclose
020027b4 g     F .text	00001728 _dtoa_r
02005204 g     F .text	000007a8 _malloc_r
0200932c g     F .text	00000030 __ascii_wctomb
02010d84 g     O .rwdata	00000004 alt_errno
02004de4 g     F .text	000000c4 _fwalk
02009f74 g     F .text	00000054 .hidden __divsi3
02004510 g     F .text	00000124 _malloc_trim_r
0200ef94 g       *ABS*	00000000 __CTOR_END__
02007558 g     F .text	000000a4 strcmp
0200ef94 g       *ABS*	00000000 __flash_rodata_start
0200ef94 g       *ABS*	00000000 __DTOR_LIST__
0200b19c g     F .text	00000084 .hidden __nedf2
0200d040 g     F .text	00000034 alt_irq_init
0200cd80 g     F .text	00000060 alt_release_fd
0200f180 g     O .rodata	00000100 .hidden __clz_tab
02012884 g     O .bss	00000004 _PathLocale
0200ebf0 g     F .text	00000014 atexit
02008ac0 g     F .text	0000005c _write_r
02005024 g     F .text	0000001c setlocale
02010d5c g     O .rwdata	00000004 _impure_ptr
020128a0 g     O .bss	00000004 alt_argc
02003edc g     F .text	00000208 __sflush_r
0200e048 g     F .text	0000005c _do_dtors
02005010 g     F .text	00000008 __locale_cjk_lang
02000020 g       .exceptions	00000000 alt_irq_entry
02006918 g     F .text	00000060 __ulp
020044f8 g     F .text	00000018 __fp_unlock_all
02010d70 g     O .rwdata	00000008 alt_fs_list
02000020 g       *ABS*	00000000 __ram_exceptions_start
02005040 g     F .text	0000000c localeconv
0200e0d4 g     F .text	00000050 alt_ic_isr_register
02010d98 g       *ABS*	00000000 _edata
020129e0 g       *ABS*	00000000 _end
020001bc g       *ABS*	00000000 __ram_exceptions_end
0200d610 g     F .text	000000ec altera_avalon_jtag_uart_ioctl
0200e1c4 g     F .text	000000a4 alt_ic_irq_disable
02007478 g     F .text	0000007c __swrite
02010d68 g     O .rwdata	00000004 __malloc_trim_threshold
0200e8ec g     F .text	00000020 altera_nios2_qsys_irq_init
02005004 g     F .text	0000000c __locale_msgcharset
0200ec04 g     F .text	00000038 exit
02004ea8 g     F .text	000000c4 _fwalk_reent
02006780 g     F .text	00000198 __mdiff
02009fc8 g     F .text	0000005c .hidden __modsi3
04000000 g       *ABS*	00000000 __alt_data_end
02000020 g     F .exceptions	00000000 alt_exception
020044d4 g     F .text	00000004 __sfp_lock_release
0200ef60 g     F .text	00000034 _exit
0200dc1c g     F .text	00000140 alt_alarm_start
0200504c g     F .text	000001b8 __smakebuf_r
02000398 g     F .text	00000098 strlen
0200e5f8 g     F .text	00000158 open
0200b220 g     F .text	000000e0 .hidden __gedf2
02010d6c g     O .rwdata	00000004 __wctomb
020076f8 g     F .text	00000018 __sprint_r
0200e0a4 g     F .text	00000030 alt_icache_flush_all
02010d8c g     O .rwdata	00000004 alt_priority_mask
0200e124 g     F .text	000000a0 alt_ic_irq_enable
02002380 g     F .text	00000024 __vfprintf_internal
0200935c g     F .text	0000005c _wctomb_r
0200bb04 g     F .text	000008d0 .hidden __subdf3
020061a8 g     F .text	000000b0 __lo0bits
02010d90 g     O .rwdata	00000008 alt_alarm_list
0200dfec g     F .text	0000005c _do_ctors
0200926c g     F .text	000000c0 wcrtomb
0200c684 g     F .text	000000d0 close
0200c9d8 g     F .text	00000080 alt_load
02008ebc g     F .text	0000005c fputwc
00000000  w      *UND*	00000000 free
020044d8 g     F .text	00000004 __sinit_lock_acquire
02005f1c g     F .text	00000120 __multadd
02005ef4 g     F .text	00000028 _Bfree



Disassembly of section .entry:

02000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 2000000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
 2000004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 2000008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 200000c:	00bffd16 	blt	zero,r2,2000004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 2000010:	00408034 	movhi	at,512
    ori r1, r1, %lo(_start)
 2000014:	08406f14 	ori	at,at,444
    jmp r1
 2000018:	0800683a 	jmp	at
 200001c:	00000000 	call	0 <__alt_mem_background_mem>

Disassembly of section .exceptions:

02000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 2000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 2000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 2000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 200002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 2000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 2000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 2000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 200003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 2000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 2000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 2000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 200004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 2000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 2000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 2000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 200005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 2000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 2000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 2000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 200006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 2000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 2000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 2000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 200007c:	10000326 	beq	r2,zero,200008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 2000080:	20000226 	beq	r4,zero,200008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 2000084:	20000ec0 	call	20000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 2000088:	00000306 	br	2000098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 200008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 2000090:	e8bfff17 	ldw	r2,-4(ea)

02000094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
 2000094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 2000098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 200009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 20000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 20000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 20000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 20000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 20000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 20000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 20000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 20000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 20000c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 20000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 20000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 20000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 20000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 20000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 20000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 20000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 20000e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 20000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 20000e8:	ef80083a 	eret

020000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 20000ec:	defff904 	addi	sp,sp,-28
 20000f0:	dfc00615 	stw	ra,24(sp)
 20000f4:	df000515 	stw	fp,20(sp)
 20000f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 20000fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 2000100:	0005313a 	rdctl	r2,ipending
 2000104:	e0bffe15 	stw	r2,-8(fp)

  return active;
 2000108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 200010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 2000110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 2000114:	00800044 	movi	r2,1
 2000118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 200011c:	e0fffb17 	ldw	r3,-20(fp)
 2000120:	e0bffc17 	ldw	r2,-16(fp)
 2000124:	1884703a 	and	r2,r3,r2
 2000128:	10001426 	beq	r2,zero,200017c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 200012c:	00808074 	movhi	r2,513
 2000130:	108a3804 	addi	r2,r2,10464
 2000134:	e0fffd17 	ldw	r3,-12(fp)
 2000138:	180690fa 	slli	r3,r3,3
 200013c:	10c5883a 	add	r2,r2,r3
 2000140:	10c00017 	ldw	r3,0(r2)
 2000144:	00808074 	movhi	r2,513
 2000148:	108a3804 	addi	r2,r2,10464
 200014c:	e13ffd17 	ldw	r4,-12(fp)
 2000150:	200890fa 	slli	r4,r4,3
 2000154:	21000104 	addi	r4,r4,4
 2000158:	1105883a 	add	r2,r2,r4
 200015c:	10800017 	ldw	r2,0(r2)
 2000160:	1009883a 	mov	r4,r2
 2000164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 2000168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 200016c:	0005313a 	rdctl	r2,ipending
 2000170:	e0bfff15 	stw	r2,-4(fp)

  return active;
 2000174:	e0bfff17 	ldw	r2,-4(fp)
 2000178:	00000706 	br	2000198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 200017c:	e0bffc17 	ldw	r2,-16(fp)
 2000180:	1085883a 	add	r2,r2,r2
 2000184:	e0bffc15 	stw	r2,-16(fp)
      i++;
 2000188:	e0bffd17 	ldw	r2,-12(fp)
 200018c:	10800044 	addi	r2,r2,1
 2000190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 2000194:	003fe106 	br	200011c <alt_irq_handler+0x30>

    active = alt_irq_pending ();
 2000198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 200019c:	e0bffb17 	ldw	r2,-20(fp)
 20001a0:	103fdb1e 	bne	r2,zero,2000110 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 20001a4:	0001883a 	nop
}
 20001a8:	e037883a 	mov	sp,fp
 20001ac:	dfc00117 	ldw	ra,4(sp)
 20001b0:	df000017 	ldw	fp,0(sp)
 20001b4:	dec00204 	addi	sp,sp,8
 20001b8:	f800283a 	ret

Disassembly of section .text:

020001bc <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
 20001bc:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
 20001c0:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
 20001c4:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
 20001c8:	00bffd16 	blt	zero,r2,20001c0 <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 20001cc:	06c10034 	movhi	sp,1024
    ori sp, sp, %lo(__alt_stack_pointer)
 20001d0:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 20001d4:	06808074 	movhi	gp,513
    ori gp, gp, %lo(_gp)
 20001d8:	d6a35614 	ori	gp,gp,36184
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 20001dc:	00808074 	movhi	r2,513
    ori r2, r2, %lo(__bss_start)
 20001e0:	108a2114 	ori	r2,r2,10372

    movhi r3, %hi(__bss_end)
 20001e4:	00c08074 	movhi	r3,513
    ori r3, r3, %lo(__bss_end)
 20001e8:	18ca7814 	ori	r3,r3,10720

    beq r2, r3, 1f
 20001ec:	10c00326 	beq	r2,r3,20001fc <_start+0x40>

0:
    stw zero, (r2)
 20001f0:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 20001f4:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 20001f8:	10fffd36 	bltu	r2,r3,20001f0 <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 20001fc:	200c9d80 	call	200c9d8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 2000200:	200cb7c0 	call	200cb7c <alt_main>

02000204 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 2000204:	003fff06 	br	2000204 <alt_after_alt_main>

02000208 <main>:

#include <stdio.h>
#include "system.h"
#include "io.h"

int main(){
 2000208:	defffc04 	addi	sp,sp,-16
 200020c:	dfc00315 	stw	ra,12(sp)
 2000210:	df000215 	stw	fp,8(sp)
 2000214:	df000204 	addi	fp,sp,8
	volatile int * spi = (int *) CYCLONESPI_BASE;
 2000218:	00800074 	movhi	r2,1
 200021c:	e0bfff15 	stw	r2,-4(fp)
	int v = 0;
 2000220:	e03ffe15 	stw	zero,-8(fp)
	printf("Hello world \n");
 2000224:	01008074 	movhi	r4,513
 2000228:	213be504 	addi	r4,r4,-4204
 200022c:	20003840 	call	2000384 <puts>
	while(1){
		printf("spi gives %d\n" , IORD_8DIRECT(CYCLONESPI_BASE,0));
 2000230:	00800074 	movhi	r2,1
 2000234:	10800023 	ldbuio	r2,0(r2)
 2000238:	10803fcc 	andi	r2,r2,255
 200023c:	01008074 	movhi	r4,513
 2000240:	213be904 	addi	r4,r4,-4188
 2000244:	100b883a 	mov	r5,r2
 2000248:	20002a00 	call	20002a0 <printf>
		usleep(100*1000);
 200024c:	010000b4 	movhi	r4,2
 2000250:	2121a804 	addi	r4,r4,-31072
 2000254:	200ce900 	call	200ce90 <usleep>
		IOWR_8DIRECT(CYCLONESPI_BASE,0,v);
 2000258:	00800074 	movhi	r2,1
 200025c:	e0fffe03 	ldbu	r3,-8(fp)
 2000260:	10c00025 	stbio	r3,0(r2)
		v++;
 2000264:	e0bffe17 	ldw	r2,-8(fp)
 2000268:	10800044 	addi	r2,r2,1
 200026c:	e0bffe15 	stw	r2,-8(fp)
	}
 2000270:	003fef06 	br	2000230 <main+0x28>

02000274 <_printf_r>:
 2000274:	defffd04 	addi	sp,sp,-12
 2000278:	dfc00015 	stw	ra,0(sp)
 200027c:	d9800115 	stw	r6,4(sp)
 2000280:	d9c00215 	stw	r7,8(sp)
 2000284:	280d883a 	mov	r6,r5
 2000288:	21400217 	ldw	r5,8(r4)
 200028c:	d9c00104 	addi	r7,sp,4
 2000290:	20004300 	call	2000430 <___vfprintf_internal_r>
 2000294:	dfc00017 	ldw	ra,0(sp)
 2000298:	dec00304 	addi	sp,sp,12
 200029c:	f800283a 	ret

020002a0 <printf>:
 20002a0:	defffc04 	addi	sp,sp,-16
 20002a4:	dfc00015 	stw	ra,0(sp)
 20002a8:	d9400115 	stw	r5,4(sp)
 20002ac:	d9800215 	stw	r6,8(sp)
 20002b0:	d9c00315 	stw	r7,12(sp)
 20002b4:	00808074 	movhi	r2,513
 20002b8:	10835704 	addi	r2,r2,3420
 20002bc:	10800017 	ldw	r2,0(r2)
 20002c0:	200b883a 	mov	r5,r4
 20002c4:	d9800104 	addi	r6,sp,4
 20002c8:	11000217 	ldw	r4,8(r2)
 20002cc:	20023800 	call	2002380 <__vfprintf_internal>
 20002d0:	dfc00017 	ldw	ra,0(sp)
 20002d4:	dec00404 	addi	sp,sp,16
 20002d8:	f800283a 	ret

020002dc <_puts_r>:
 20002dc:	defff604 	addi	sp,sp,-40
 20002e0:	dc000715 	stw	r16,28(sp)
 20002e4:	2021883a 	mov	r16,r4
 20002e8:	2809883a 	mov	r4,r5
 20002ec:	dc400815 	stw	r17,32(sp)
 20002f0:	dfc00915 	stw	ra,36(sp)
 20002f4:	2823883a 	mov	r17,r5
 20002f8:	20003980 	call	2000398 <strlen>
 20002fc:	81400217 	ldw	r5,8(r16)
 2000300:	11000044 	addi	r4,r2,1
 2000304:	d8800115 	stw	r2,4(sp)
 2000308:	00808074 	movhi	r2,513
 200030c:	2980030b 	ldhu	r6,12(r5)
 2000310:	10bbed04 	addi	r2,r2,-4172
 2000314:	d8800215 	stw	r2,8(sp)
 2000318:	00800044 	movi	r2,1
 200031c:	d8800315 	stw	r2,12(sp)
 2000320:	00800084 	movi	r2,2
 2000324:	d8800515 	stw	r2,20(sp)
 2000328:	dc400015 	stw	r17,0(sp)
 200032c:	d9000615 	stw	r4,24(sp)
 2000330:	dec00415 	stw	sp,16(sp)
 2000334:	3088000c 	andi	r2,r6,8192
 2000338:	1000061e 	bne	r2,zero,2000354 <_puts_r+0x78>
 200033c:	29001917 	ldw	r4,100(r5)
 2000340:	00b7ffc4 	movi	r2,-8193
 2000344:	31880014 	ori	r6,r6,8192
 2000348:	2084703a 	and	r2,r4,r2
 200034c:	2980030d 	sth	r6,12(r5)
 2000350:	28801915 	stw	r2,100(r5)
 2000354:	8009883a 	mov	r4,r16
 2000358:	d9800404 	addi	r6,sp,16
 200035c:	20049240 	call	2004924 <__sfvwrite_r>
 2000360:	1000061e 	bne	r2,zero,200037c <_puts_r+0xa0>
 2000364:	00800284 	movi	r2,10
 2000368:	dfc00917 	ldw	ra,36(sp)
 200036c:	dc400817 	ldw	r17,32(sp)
 2000370:	dc000717 	ldw	r16,28(sp)
 2000374:	dec00a04 	addi	sp,sp,40
 2000378:	f800283a 	ret
 200037c:	00bfffc4 	movi	r2,-1
 2000380:	003ff906 	br	2000368 <_puts_r+0x8c>

02000384 <puts>:
 2000384:	00808074 	movhi	r2,513
 2000388:	10835704 	addi	r2,r2,3420
 200038c:	200b883a 	mov	r5,r4
 2000390:	11000017 	ldw	r4,0(r2)
 2000394:	20002dc1 	jmpi	20002dc <_puts_r>

02000398 <strlen>:
 2000398:	208000cc 	andi	r2,r4,3
 200039c:	10002026 	beq	r2,zero,2000420 <strlen+0x88>
 20003a0:	20800007 	ldb	r2,0(r4)
 20003a4:	10002026 	beq	r2,zero,2000428 <strlen+0x90>
 20003a8:	2005883a 	mov	r2,r4
 20003ac:	00000206 	br	20003b8 <strlen+0x20>
 20003b0:	10c00007 	ldb	r3,0(r2)
 20003b4:	18001826 	beq	r3,zero,2000418 <strlen+0x80>
 20003b8:	10800044 	addi	r2,r2,1
 20003bc:	10c000cc 	andi	r3,r2,3
 20003c0:	183ffb1e 	bne	r3,zero,20003b0 <strlen+0x18>
 20003c4:	10c00017 	ldw	r3,0(r2)
 20003c8:	01ffbff4 	movhi	r7,65279
 20003cc:	39ffbfc4 	addi	r7,r7,-257
 20003d0:	00ca303a 	nor	r5,zero,r3
 20003d4:	01a02074 	movhi	r6,32897
 20003d8:	19c7883a 	add	r3,r3,r7
 20003dc:	31a02004 	addi	r6,r6,-32640
 20003e0:	1946703a 	and	r3,r3,r5
 20003e4:	1986703a 	and	r3,r3,r6
 20003e8:	1800091e 	bne	r3,zero,2000410 <strlen+0x78>
 20003ec:	10800104 	addi	r2,r2,4
 20003f0:	10c00017 	ldw	r3,0(r2)
 20003f4:	19cb883a 	add	r5,r3,r7
 20003f8:	00c6303a 	nor	r3,zero,r3
 20003fc:	28c6703a 	and	r3,r5,r3
 2000400:	1986703a 	and	r3,r3,r6
 2000404:	183ff926 	beq	r3,zero,20003ec <strlen+0x54>
 2000408:	00000106 	br	2000410 <strlen+0x78>
 200040c:	10800044 	addi	r2,r2,1
 2000410:	10c00007 	ldb	r3,0(r2)
 2000414:	183ffd1e 	bne	r3,zero,200040c <strlen+0x74>
 2000418:	1105c83a 	sub	r2,r2,r4
 200041c:	f800283a 	ret
 2000420:	2005883a 	mov	r2,r4
 2000424:	003fe706 	br	20003c4 <strlen+0x2c>
 2000428:	0005883a 	mov	r2,zero
 200042c:	f800283a 	ret

02000430 <___vfprintf_internal_r>:
 2000430:	deffb604 	addi	sp,sp,-296
 2000434:	dfc04915 	stw	ra,292(sp)
 2000438:	ddc04715 	stw	r23,284(sp)
 200043c:	dd804615 	stw	r22,280(sp)
 2000440:	282f883a 	mov	r23,r5
 2000444:	202d883a 	mov	r22,r4
 2000448:	d9802a15 	stw	r6,168(sp)
 200044c:	d9c02d15 	stw	r7,180(sp)
 2000450:	df004815 	stw	fp,288(sp)
 2000454:	dd404515 	stw	r21,276(sp)
 2000458:	dd004415 	stw	r20,272(sp)
 200045c:	dcc04315 	stw	r19,268(sp)
 2000460:	dc804215 	stw	r18,264(sp)
 2000464:	dc404115 	stw	r17,260(sp)
 2000468:	dc004015 	stw	r16,256(sp)
 200046c:	20050180 	call	2005018 <_localeconv_r>
 2000470:	10800017 	ldw	r2,0(r2)
 2000474:	1009883a 	mov	r4,r2
 2000478:	d8803515 	stw	r2,212(sp)
 200047c:	20003980 	call	2000398 <strlen>
 2000480:	d8803815 	stw	r2,224(sp)
 2000484:	b0000226 	beq	r22,zero,2000490 <___vfprintf_internal_r+0x60>
 2000488:	b0800e17 	ldw	r2,56(r22)
 200048c:	1000e126 	beq	r2,zero,2000814 <___vfprintf_internal_r+0x3e4>
 2000490:	b880030b 	ldhu	r2,12(r23)
 2000494:	10c8000c 	andi	r3,r2,8192
 2000498:	1800061e 	bne	r3,zero,20004b4 <___vfprintf_internal_r+0x84>
 200049c:	b9001917 	ldw	r4,100(r23)
 20004a0:	00f7ffc4 	movi	r3,-8193
 20004a4:	10880014 	ori	r2,r2,8192
 20004a8:	20c6703a 	and	r3,r4,r3
 20004ac:	b880030d 	sth	r2,12(r23)
 20004b0:	b8c01915 	stw	r3,100(r23)
 20004b4:	10c0020c 	andi	r3,r2,8
 20004b8:	1800a726 	beq	r3,zero,2000758 <___vfprintf_internal_r+0x328>
 20004bc:	b8c00417 	ldw	r3,16(r23)
 20004c0:	1800a526 	beq	r3,zero,2000758 <___vfprintf_internal_r+0x328>
 20004c4:	1080068c 	andi	r2,r2,26
 20004c8:	00c00284 	movi	r3,10
 20004cc:	10c0aa26 	beq	r2,r3,2000778 <___vfprintf_internal_r+0x348>
 20004d0:	dac01e04 	addi	r11,sp,120
 20004d4:	db001dc4 	addi	r12,sp,119
 20004d8:	d8800404 	addi	r2,sp,16
 20004dc:	05008074 	movhi	r20,513
 20004e0:	dac02815 	stw	r11,160(sp)
 20004e4:	5b17c83a 	sub	r11,r11,r12
 20004e8:	a53bfe84 	addi	r20,r20,-4102
 20004ec:	db002915 	stw	r12,164(sp)
 20004f0:	d8801e15 	stw	r2,120(sp)
 20004f4:	d8002015 	stw	zero,128(sp)
 20004f8:	d8001f15 	stw	zero,124(sp)
 20004fc:	d8003315 	stw	zero,204(sp)
 2000500:	d8003715 	stw	zero,220(sp)
 2000504:	d8003915 	stw	zero,228(sp)
 2000508:	1011883a 	mov	r8,r2
 200050c:	d8003b15 	stw	zero,236(sp)
 2000510:	d8003a15 	stw	zero,232(sp)
 2000514:	d8002f15 	stw	zero,188(sp)
 2000518:	dac03c15 	stw	r11,240(sp)
 200051c:	db002a17 	ldw	r12,168(sp)
 2000520:	60800007 	ldb	r2,0(r12)
 2000524:	1000be26 	beq	r2,zero,2000820 <___vfprintf_internal_r+0x3f0>
 2000528:	00c00944 	movi	r3,37
 200052c:	10c0bc26 	beq	r2,r3,2000820 <___vfprintf_internal_r+0x3f0>
 2000530:	6021883a 	mov	r16,r12
 2000534:	00000106 	br	200053c <___vfprintf_internal_r+0x10c>
 2000538:	10c08426 	beq	r2,r3,200074c <___vfprintf_internal_r+0x31c>
 200053c:	84000044 	addi	r16,r16,1
 2000540:	80800007 	ldb	r2,0(r16)
 2000544:	103ffc1e 	bne	r2,zero,2000538 <___vfprintf_internal_r+0x108>
 2000548:	dac02a17 	ldw	r11,168(sp)
 200054c:	82e3c83a 	sub	r17,r16,r11
 2000550:	88000f26 	beq	r17,zero,2000590 <___vfprintf_internal_r+0x160>
 2000554:	d8c02017 	ldw	r3,128(sp)
 2000558:	d8801f17 	ldw	r2,124(sp)
 200055c:	dac02a17 	ldw	r11,168(sp)
 2000560:	1c47883a 	add	r3,r3,r17
 2000564:	10800044 	addi	r2,r2,1
 2000568:	d8c02015 	stw	r3,128(sp)
 200056c:	42c00015 	stw	r11,0(r8)
 2000570:	44400115 	stw	r17,4(r8)
 2000574:	d8801f15 	stw	r2,124(sp)
 2000578:	00c001c4 	movi	r3,7
 200057c:	18809316 	blt	r3,r2,20007cc <___vfprintf_internal_r+0x39c>
 2000580:	42000204 	addi	r8,r8,8
 2000584:	db002f17 	ldw	r12,188(sp)
 2000588:	6459883a 	add	r12,r12,r17
 200058c:	db002f15 	stw	r12,188(sp)
 2000590:	80800007 	ldb	r2,0(r16)
 2000594:	10009426 	beq	r2,zero,20007e8 <___vfprintf_internal_r+0x3b8>
 2000598:	80800044 	addi	r2,r16,1
 200059c:	84000047 	ldb	r16,1(r16)
 20005a0:	d8002785 	stb	zero,158(sp)
 20005a4:	000d883a 	mov	r6,zero
 20005a8:	027fffc4 	movi	r9,-1
 20005ac:	d8002e15 	stw	zero,184(sp)
 20005b0:	0023883a 	mov	r17,zero
 20005b4:	01001604 	movi	r4,88
 20005b8:	01400244 	movi	r5,9
 20005bc:	02800a84 	movi	r10,42
 20005c0:	01c01b04 	movi	r7,108
 20005c4:	10c00044 	addi	r3,r2,1
 20005c8:	80bff804 	addi	r2,r16,-32
 20005cc:	2082cd36 	bltu	r4,r2,2001104 <___vfprintf_internal_r+0xcd4>
 20005d0:	100490ba 	slli	r2,r2,2
 20005d4:	02c08034 	movhi	r11,512
 20005d8:	5ac17a04 	addi	r11,r11,1512
 20005dc:	12c5883a 	add	r2,r2,r11
 20005e0:	10800017 	ldw	r2,0(r2)
 20005e4:	1000683a 	jmp	r2
 20005e8:	02000f1c 	xori	r8,zero,60
 20005ec:	02001104 	movi	r8,68
 20005f0:	02001104 	movi	r8,68
 20005f4:	0200106c 	andhi	r8,zero,65
 20005f8:	02001104 	movi	r8,68
 20005fc:	02001104 	movi	r8,68
 2000600:	02001104 	movi	r8,68
 2000604:	02001104 	movi	r8,68
 2000608:	02001104 	movi	r8,68
 200060c:	02001104 	movi	r8,68
 2000610:	02000f3c 	xorhi	r8,zero,60
 2000614:	02000f68 	cmpgeui	r8,zero,61
 2000618:	02001104 	movi	r8,68
 200061c:	02000828 	cmpgeui	r8,zero,32
 2000620:	02000838 	rdprs	r8,zero,32
 2000624:	02001104 	movi	r8,68
 2000628:	02000878 	rdprs	r8,zero,33
 200062c:	02000888 	cmpgei	r8,zero,34
 2000630:	02000888 	cmpgei	r8,zero,34
 2000634:	02000888 	cmpgei	r8,zero,34
 2000638:	02000888 	cmpgei	r8,zero,34
 200063c:	02000888 	cmpgei	r8,zero,34
 2000640:	02000888 	cmpgei	r8,zero,34
 2000644:	02000888 	cmpgei	r8,zero,34
 2000648:	02000888 	cmpgei	r8,zero,34
 200064c:	02000888 	cmpgei	r8,zero,34
 2000650:	02001104 	movi	r8,68
 2000654:	02001104 	movi	r8,68
 2000658:	02001104 	movi	r8,68
 200065c:	02001104 	movi	r8,68
 2000660:	02001104 	movi	r8,68
 2000664:	02001104 	movi	r8,68
 2000668:	02001104 	movi	r8,68
 200066c:	02001104 	movi	r8,68
 2000670:	02001104 	movi	r8,68
 2000674:	02001104 	movi	r8,68
 2000678:	020008bc 	xorhi	r8,zero,34
 200067c:	02000d2c 	andhi	r8,zero,52
 2000680:	02001104 	movi	r8,68
 2000684:	02000d2c 	andhi	r8,zero,52
 2000688:	02001104 	movi	r8,68
 200068c:	02001104 	movi	r8,68
 2000690:	02001104 	movi	r8,68
 2000694:	02001104 	movi	r8,68
 2000698:	02000e18 	cmpnei	r8,zero,56
 200069c:	02001104 	movi	r8,68
 20006a0:	02001104 	movi	r8,68
 20006a4:	02000cc0 	call	2000cc <__alt_mem_background_mem+0x2000cc>
 20006a8:	02001104 	movi	r8,68
 20006ac:	02001104 	movi	r8,68
 20006b0:	02001104 	movi	r8,68
 20006b4:	02001104 	movi	r8,68
 20006b8:	02001104 	movi	r8,68
 20006bc:	02000cfc 	xorhi	r8,zero,51
 20006c0:	02001104 	movi	r8,68
 20006c4:	02001104 	movi	r8,68
 20006c8:	02000ec0 	call	2000ec <__alt_mem_background_mem+0x2000ec>
 20006cc:	02001104 	movi	r8,68
 20006d0:	02001104 	movi	r8,68
 20006d4:	02001104 	movi	r8,68
 20006d8:	02001104 	movi	r8,68
 20006dc:	02001104 	movi	r8,68
 20006e0:	02001104 	movi	r8,68
 20006e4:	02001104 	movi	r8,68
 20006e8:	02001104 	movi	r8,68
 20006ec:	02001104 	movi	r8,68
 20006f0:	02001104 	movi	r8,68
 20006f4:	02000f78 	rdprs	r8,zero,61
 20006f8:	02000e28 	cmpgeui	r8,zero,56
 20006fc:	02000d2c 	andhi	r8,zero,52
 2000700:	02000d2c 	andhi	r8,zero,52
 2000704:	02000d2c 	andhi	r8,zero,52
 2000708:	02000e68 	cmpgeui	r8,zero,57
 200070c:	02000e28 	cmpgeui	r8,zero,56
 2000710:	02001104 	movi	r8,68
 2000714:	02001104 	movi	r8,68
 2000718:	02000e78 	rdprs	r8,zero,57
 200071c:	02001104 	movi	r8,68
 2000720:	02000e8c 	andi	r8,zero,58
 2000724:	020010c8 	cmpgei	r8,zero,67
 2000728:	02000dd0 	cmplti	r8,zero,55
 200072c:	0200107c 	xorhi	r8,zero,65
 2000730:	02001104 	movi	r8,68
 2000734:	02000fb8 	rdprs	r8,zero,62
 2000738:	02001104 	movi	r8,68
 200073c:	0200108c 	andi	r8,zero,66
 2000740:	02001104 	movi	r8,68
 2000744:	02001104 	movi	r8,68
 2000748:	0200102c 	andhi	r8,zero,64
 200074c:	db002a17 	ldw	r12,168(sp)
 2000750:	8323c83a 	sub	r17,r16,r12
 2000754:	003f7e06 	br	2000550 <___vfprintf_internal_r+0x120>
 2000758:	b009883a 	mov	r4,r22
 200075c:	b80b883a 	mov	r5,r23
 2000760:	20024600 	call	2002460 <__swsetup_r>
 2000764:	10000c1e 	bne	r2,zero,2000798 <___vfprintf_internal_r+0x368>
 2000768:	b880030b 	ldhu	r2,12(r23)
 200076c:	00c00284 	movi	r3,10
 2000770:	1080068c 	andi	r2,r2,26
 2000774:	10ff561e 	bne	r2,r3,20004d0 <___vfprintf_internal_r+0xa0>
 2000778:	b880038f 	ldh	r2,14(r23)
 200077c:	103f5416 	blt	r2,zero,20004d0 <___vfprintf_internal_r+0xa0>
 2000780:	d9802a17 	ldw	r6,168(sp)
 2000784:	d9c02d17 	ldw	r7,180(sp)
 2000788:	b009883a 	mov	r4,r22
 200078c:	b80b883a 	mov	r5,r23
 2000790:	20023a40 	call	20023a4 <__sbprintf>
 2000794:	00000106 	br	200079c <___vfprintf_internal_r+0x36c>
 2000798:	00bfffc4 	movi	r2,-1
 200079c:	dfc04917 	ldw	ra,292(sp)
 20007a0:	df004817 	ldw	fp,288(sp)
 20007a4:	ddc04717 	ldw	r23,284(sp)
 20007a8:	dd804617 	ldw	r22,280(sp)
 20007ac:	dd404517 	ldw	r21,276(sp)
 20007b0:	dd004417 	ldw	r20,272(sp)
 20007b4:	dcc04317 	ldw	r19,268(sp)
 20007b8:	dc804217 	ldw	r18,264(sp)
 20007bc:	dc404117 	ldw	r17,260(sp)
 20007c0:	dc004017 	ldw	r16,256(sp)
 20007c4:	dec04a04 	addi	sp,sp,296
 20007c8:	f800283a 	ret
 20007cc:	b009883a 	mov	r4,r22
 20007d0:	b80b883a 	mov	r5,r23
 20007d4:	d9801e04 	addi	r6,sp,120
 20007d8:	20076f80 	call	20076f8 <__sprint_r>
 20007dc:	1000081e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 20007e0:	da000404 	addi	r8,sp,16
 20007e4:	003f6706 	br	2000584 <___vfprintf_internal_r+0x154>
 20007e8:	d8802017 	ldw	r2,128(sp)
 20007ec:	10000426 	beq	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 20007f0:	b009883a 	mov	r4,r22
 20007f4:	b80b883a 	mov	r5,r23
 20007f8:	d9801e04 	addi	r6,sp,120
 20007fc:	20076f80 	call	20076f8 <__sprint_r>
 2000800:	b880030b 	ldhu	r2,12(r23)
 2000804:	1080100c 	andi	r2,r2,64
 2000808:	103fe31e 	bne	r2,zero,2000798 <___vfprintf_internal_r+0x368>
 200080c:	d8802f17 	ldw	r2,188(sp)
 2000810:	003fe206 	br	200079c <___vfprintf_internal_r+0x36c>
 2000814:	b009883a 	mov	r4,r22
 2000818:	20044c00 	call	20044c0 <__sinit>
 200081c:	003f1c06 	br	2000490 <___vfprintf_internal_r+0x60>
 2000820:	dc002a17 	ldw	r16,168(sp)
 2000824:	003f5a06 	br	2000590 <___vfprintf_internal_r+0x160>
 2000828:	1805883a 	mov	r2,r3
 200082c:	8c400114 	ori	r17,r17,4
 2000830:	1c000007 	ldb	r16,0(r3)
 2000834:	003f6306 	br	20005c4 <___vfprintf_internal_r+0x194>
 2000838:	1c000007 	ldb	r16,0(r3)
 200083c:	18800044 	addi	r2,r3,1
 2000840:	8286ad26 	beq	r16,r10,20022f8 <___vfprintf_internal_r+0x1ec8>
 2000844:	82fff404 	addi	r11,r16,-48
 2000848:	1007883a 	mov	r3,r2
 200084c:	0013883a 	mov	r9,zero
 2000850:	2aff5d36 	bltu	r5,r11,20005c8 <___vfprintf_internal_r+0x198>
 2000854:	1c000007 	ldb	r16,0(r3)
 2000858:	4a4002a4 	muli	r9,r9,10
 200085c:	18c00044 	addi	r3,r3,1
 2000860:	5a53883a 	add	r9,r11,r9
 2000864:	82fff404 	addi	r11,r16,-48
 2000868:	2afffa2e 	bgeu	r5,r11,2000854 <___vfprintf_internal_r+0x424>
 200086c:	483f560e 	bge	r9,zero,20005c8 <___vfprintf_internal_r+0x198>
 2000870:	027fffc4 	movi	r9,-1
 2000874:	003f5406 	br	20005c8 <___vfprintf_internal_r+0x198>
 2000878:	8c402014 	ori	r17,r17,128
 200087c:	1805883a 	mov	r2,r3
 2000880:	1c000007 	ldb	r16,0(r3)
 2000884:	003f4f06 	br	20005c4 <___vfprintf_internal_r+0x194>
 2000888:	1805883a 	mov	r2,r3
 200088c:	d8002e15 	stw	zero,184(sp)
 2000890:	82fff404 	addi	r11,r16,-48
 2000894:	0019883a 	mov	r12,zero
 2000898:	14000007 	ldb	r16,0(r2)
 200089c:	630002a4 	muli	r12,r12,10
 20008a0:	18c00044 	addi	r3,r3,1
 20008a4:	1805883a 	mov	r2,r3
 20008a8:	62d9883a 	add	r12,r12,r11
 20008ac:	82fff404 	addi	r11,r16,-48
 20008b0:	2afff92e 	bgeu	r5,r11,2000898 <___vfprintf_internal_r+0x468>
 20008b4:	db002e15 	stw	r12,184(sp)
 20008b8:	003f4306 	br	20005c8 <___vfprintf_internal_r+0x198>
 20008bc:	8c400414 	ori	r17,r17,16
 20008c0:	d8c02a15 	stw	r3,168(sp)
 20008c4:	d9802785 	stb	r6,158(sp)
 20008c8:	8880080c 	andi	r2,r17,32
 20008cc:	d8c02d17 	ldw	r3,180(sp)
 20008d0:	10015a26 	beq	r2,zero,2000e3c <___vfprintf_internal_r+0xa0c>
 20008d4:	db002d17 	ldw	r12,180(sp)
 20008d8:	18800117 	ldw	r2,4(r3)
 20008dc:	1cc00017 	ldw	r19,0(r3)
 20008e0:	63000204 	addi	r12,r12,8
 20008e4:	db002d15 	stw	r12,180(sp)
 20008e8:	1039883a 	mov	fp,r2
 20008ec:	10044516 	blt	r2,zero,2001a04 <___vfprintf_internal_r+0x15d4>
 20008f0:	dd402783 	ldbu	r21,158(sp)
 20008f4:	da403215 	stw	r9,200(sp)
 20008f8:	00800044 	movi	r2,1
 20008fc:	9f06b03a 	or	r3,r19,fp
 2000900:	48000216 	blt	r9,zero,200090c <___vfprintf_internal_r+0x4dc>
 2000904:	013fdfc4 	movi	r4,-129
 2000908:	8922703a 	and	r17,r17,r4
 200090c:	1802071e 	bne	r3,zero,200112c <___vfprintf_internal_r+0xcfc>
 2000910:	4802fa26 	beq	r9,zero,20014fc <___vfprintf_internal_r+0x10cc>
 2000914:	10803fcc 	andi	r2,r2,255
 2000918:	00c00044 	movi	r3,1
 200091c:	10c22926 	beq	r2,r3,20011c4 <___vfprintf_internal_r+0xd94>
 2000920:	00c00084 	movi	r3,2
 2000924:	10c31726 	beq	r2,r3,2001584 <___vfprintf_internal_r+0x1154>
 2000928:	d8c01e04 	addi	r3,sp,120
 200092c:	9808d0fa 	srli	r4,r19,3
 2000930:	e00a977a 	slli	r5,fp,29
 2000934:	e038d0fa 	srli	fp,fp,3
 2000938:	9cc001cc 	andi	r19,r19,7
 200093c:	98800c04 	addi	r2,r19,48
 2000940:	18ffffc4 	addi	r3,r3,-1
 2000944:	2926b03a 	or	r19,r5,r4
 2000948:	18800005 	stb	r2,0(r3)
 200094c:	9f08b03a 	or	r4,r19,fp
 2000950:	203ff61e 	bne	r4,zero,200092c <___vfprintf_internal_r+0x4fc>
 2000954:	8900004c 	andi	r4,r17,1
 2000958:	d8c03115 	stw	r3,196(sp)
 200095c:	2003931e 	bne	r4,zero,20017ac <___vfprintf_internal_r+0x137c>
 2000960:	dac02817 	ldw	r11,160(sp)
 2000964:	58e5c83a 	sub	r18,r11,r3
 2000968:	9005883a 	mov	r2,r18
 200096c:	9240010e 	bge	r18,r9,2000974 <___vfprintf_internal_r+0x544>
 2000970:	4805883a 	mov	r2,r9
 2000974:	d8802b15 	stw	r2,172(sp)
 2000978:	d8003415 	stw	zero,208(sp)
 200097c:	a8803fcc 	andi	r2,r21,255
 2000980:	1080201c 	xori	r2,r2,128
 2000984:	10bfe004 	addi	r2,r2,-128
 2000988:	10000326 	beq	r2,zero,2000998 <___vfprintf_internal_r+0x568>
 200098c:	db002b17 	ldw	r12,172(sp)
 2000990:	63000044 	addi	r12,r12,1
 2000994:	db002b15 	stw	r12,172(sp)
 2000998:	88c0008c 	andi	r3,r17,2
 200099c:	d8c02c15 	stw	r3,176(sp)
 20009a0:	18000326 	beq	r3,zero,20009b0 <___vfprintf_internal_r+0x580>
 20009a4:	dac02b17 	ldw	r11,172(sp)
 20009a8:	5ac00084 	addi	r11,r11,2
 20009ac:	dac02b15 	stw	r11,172(sp)
 20009b0:	8b00210c 	andi	r12,r17,132
 20009b4:	db003015 	stw	r12,192(sp)
 20009b8:	6001da1e 	bne	r12,zero,2001124 <___vfprintf_internal_r+0xcf4>
 20009bc:	dac02e17 	ldw	r11,184(sp)
 20009c0:	db002b17 	ldw	r12,172(sp)
 20009c4:	5b39c83a 	sub	fp,r11,r12
 20009c8:	0701d60e 	bge	zero,fp,2001124 <___vfprintf_internal_r+0xcf4>
 20009cc:	02400404 	movi	r9,16
 20009d0:	d8c02017 	ldw	r3,128(sp)
 20009d4:	d8801f17 	ldw	r2,124(sp)
 20009d8:	4f053c0e 	bge	r9,fp,2001ecc <___vfprintf_internal_r+0x1a9c>
 20009dc:	01408074 	movhi	r5,513
 20009e0:	297c0284 	addi	r5,r5,-4086
 20009e4:	d9403615 	stw	r5,216(sp)
 20009e8:	482b883a 	mov	r21,r9
 20009ec:	04c001c4 	movi	r19,7
 20009f0:	00000306 	br	2000a00 <___vfprintf_internal_r+0x5d0>
 20009f4:	e73ffc04 	addi	fp,fp,-16
 20009f8:	42000204 	addi	r8,r8,8
 20009fc:	af00130e 	bge	r21,fp,2000a4c <___vfprintf_internal_r+0x61c>
 2000a00:	02c08074 	movhi	r11,513
 2000a04:	18c00404 	addi	r3,r3,16
 2000a08:	10800044 	addi	r2,r2,1
 2000a0c:	5afc0284 	addi	r11,r11,-4086
 2000a10:	42c00015 	stw	r11,0(r8)
 2000a14:	45400115 	stw	r21,4(r8)
 2000a18:	d8c02015 	stw	r3,128(sp)
 2000a1c:	d8801f15 	stw	r2,124(sp)
 2000a20:	98bff40e 	bge	r19,r2,20009f4 <___vfprintf_internal_r+0x5c4>
 2000a24:	b009883a 	mov	r4,r22
 2000a28:	b80b883a 	mov	r5,r23
 2000a2c:	d9801e04 	addi	r6,sp,120
 2000a30:	20076f80 	call	20076f8 <__sprint_r>
 2000a34:	103f721e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 2000a38:	e73ffc04 	addi	fp,fp,-16
 2000a3c:	d8c02017 	ldw	r3,128(sp)
 2000a40:	d8801f17 	ldw	r2,124(sp)
 2000a44:	da000404 	addi	r8,sp,16
 2000a48:	af3fed16 	blt	r21,fp,2000a00 <___vfprintf_internal_r+0x5d0>
 2000a4c:	db003617 	ldw	r12,216(sp)
 2000a50:	e0c7883a 	add	r3,fp,r3
 2000a54:	10800044 	addi	r2,r2,1
 2000a58:	43000015 	stw	r12,0(r8)
 2000a5c:	47000115 	stw	fp,4(r8)
 2000a60:	d8c02015 	stw	r3,128(sp)
 2000a64:	d8801f15 	stw	r2,124(sp)
 2000a68:	010001c4 	movi	r4,7
 2000a6c:	20830e16 	blt	r4,r2,20016a8 <___vfprintf_internal_r+0x1278>
 2000a70:	d8802787 	ldb	r2,158(sp)
 2000a74:	42000204 	addi	r8,r8,8
 2000a78:	10000c26 	beq	r2,zero,2000aac <___vfprintf_internal_r+0x67c>
 2000a7c:	d8801f17 	ldw	r2,124(sp)
 2000a80:	d9002784 	addi	r4,sp,158
 2000a84:	18c00044 	addi	r3,r3,1
 2000a88:	10800044 	addi	r2,r2,1
 2000a8c:	41000015 	stw	r4,0(r8)
 2000a90:	01000044 	movi	r4,1
 2000a94:	41000115 	stw	r4,4(r8)
 2000a98:	d8c02015 	stw	r3,128(sp)
 2000a9c:	d8801f15 	stw	r2,124(sp)
 2000aa0:	010001c4 	movi	r4,7
 2000aa4:	2082a716 	blt	r4,r2,2001544 <___vfprintf_internal_r+0x1114>
 2000aa8:	42000204 	addi	r8,r8,8
 2000aac:	dac02c17 	ldw	r11,176(sp)
 2000ab0:	58000c26 	beq	r11,zero,2000ae4 <___vfprintf_internal_r+0x6b4>
 2000ab4:	d8801f17 	ldw	r2,124(sp)
 2000ab8:	d9002704 	addi	r4,sp,156
 2000abc:	18c00084 	addi	r3,r3,2
 2000ac0:	10800044 	addi	r2,r2,1
 2000ac4:	41000015 	stw	r4,0(r8)
 2000ac8:	01000084 	movi	r4,2
 2000acc:	41000115 	stw	r4,4(r8)
 2000ad0:	d8c02015 	stw	r3,128(sp)
 2000ad4:	d8801f15 	stw	r2,124(sp)
 2000ad8:	010001c4 	movi	r4,7
 2000adc:	2082a116 	blt	r4,r2,2001564 <___vfprintf_internal_r+0x1134>
 2000ae0:	42000204 	addi	r8,r8,8
 2000ae4:	db003017 	ldw	r12,192(sp)
 2000ae8:	00802004 	movi	r2,128
 2000aec:	60820326 	beq	r12,r2,20012fc <___vfprintf_internal_r+0xecc>
 2000af0:	db003217 	ldw	r12,200(sp)
 2000af4:	64abc83a 	sub	r21,r12,r18
 2000af8:	0540260e 	bge	zero,r21,2000b94 <___vfprintf_internal_r+0x764>
 2000afc:	07000404 	movi	fp,16
 2000b00:	d8801f17 	ldw	r2,124(sp)
 2000b04:	e544570e 	bge	fp,r21,2001c64 <___vfprintf_internal_r+0x1834>
 2000b08:	01408074 	movhi	r5,513
 2000b0c:	297bfe84 	addi	r5,r5,-4102
 2000b10:	d9402c15 	stw	r5,176(sp)
 2000b14:	04c001c4 	movi	r19,7
 2000b18:	00000306 	br	2000b28 <___vfprintf_internal_r+0x6f8>
 2000b1c:	ad7ffc04 	addi	r21,r21,-16
 2000b20:	42000204 	addi	r8,r8,8
 2000b24:	e540110e 	bge	fp,r21,2000b6c <___vfprintf_internal_r+0x73c>
 2000b28:	18c00404 	addi	r3,r3,16
 2000b2c:	10800044 	addi	r2,r2,1
 2000b30:	45000015 	stw	r20,0(r8)
 2000b34:	47000115 	stw	fp,4(r8)
 2000b38:	d8c02015 	stw	r3,128(sp)
 2000b3c:	d8801f15 	stw	r2,124(sp)
 2000b40:	98bff60e 	bge	r19,r2,2000b1c <___vfprintf_internal_r+0x6ec>
 2000b44:	b009883a 	mov	r4,r22
 2000b48:	b80b883a 	mov	r5,r23
 2000b4c:	d9801e04 	addi	r6,sp,120
 2000b50:	20076f80 	call	20076f8 <__sprint_r>
 2000b54:	103f2a1e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 2000b58:	ad7ffc04 	addi	r21,r21,-16
 2000b5c:	d8c02017 	ldw	r3,128(sp)
 2000b60:	d8801f17 	ldw	r2,124(sp)
 2000b64:	da000404 	addi	r8,sp,16
 2000b68:	e57fef16 	blt	fp,r21,2000b28 <___vfprintf_internal_r+0x6f8>
 2000b6c:	dac02c17 	ldw	r11,176(sp)
 2000b70:	1d47883a 	add	r3,r3,r21
 2000b74:	10800044 	addi	r2,r2,1
 2000b78:	42c00015 	stw	r11,0(r8)
 2000b7c:	45400115 	stw	r21,4(r8)
 2000b80:	d8c02015 	stw	r3,128(sp)
 2000b84:	d8801f15 	stw	r2,124(sp)
 2000b88:	010001c4 	movi	r4,7
 2000b8c:	20826516 	blt	r4,r2,2001524 <___vfprintf_internal_r+0x10f4>
 2000b90:	42000204 	addi	r8,r8,8
 2000b94:	8880400c 	andi	r2,r17,256
 2000b98:	1001901e 	bne	r2,zero,20011dc <___vfprintf_internal_r+0xdac>
 2000b9c:	d8801f17 	ldw	r2,124(sp)
 2000ba0:	db003117 	ldw	r12,196(sp)
 2000ba4:	1c87883a 	add	r3,r3,r18
 2000ba8:	10800044 	addi	r2,r2,1
 2000bac:	43000015 	stw	r12,0(r8)
 2000bb0:	44800115 	stw	r18,4(r8)
 2000bb4:	d8c02015 	stw	r3,128(sp)
 2000bb8:	d8801f15 	stw	r2,124(sp)
 2000bbc:	010001c4 	movi	r4,7
 2000bc0:	20824016 	blt	r4,r2,20014c4 <___vfprintf_internal_r+0x1094>
 2000bc4:	42000204 	addi	r8,r8,8
 2000bc8:	8c40010c 	andi	r17,r17,4
 2000bcc:	88003126 	beq	r17,zero,2000c94 <___vfprintf_internal_r+0x864>
 2000bd0:	db002e17 	ldw	r12,184(sp)
 2000bd4:	dac02b17 	ldw	r11,172(sp)
 2000bd8:	62e1c83a 	sub	r16,r12,r11
 2000bdc:	04002d0e 	bge	zero,r16,2000c94 <___vfprintf_internal_r+0x864>
 2000be0:	04400404 	movi	r17,16
 2000be4:	d8801f17 	ldw	r2,124(sp)
 2000be8:	8c05150e 	bge	r17,r16,2002040 <___vfprintf_internal_r+0x1c10>
 2000bec:	01008074 	movhi	r4,513
 2000bf0:	213c0284 	addi	r4,r4,-4086
 2000bf4:	d9003615 	stw	r4,216(sp)
 2000bf8:	048001c4 	movi	r18,7
 2000bfc:	00000306 	br	2000c0c <___vfprintf_internal_r+0x7dc>
 2000c00:	843ffc04 	addi	r16,r16,-16
 2000c04:	42000204 	addi	r8,r8,8
 2000c08:	8c00130e 	bge	r17,r16,2000c58 <___vfprintf_internal_r+0x828>
 2000c0c:	01408074 	movhi	r5,513
 2000c10:	18c00404 	addi	r3,r3,16
 2000c14:	10800044 	addi	r2,r2,1
 2000c18:	297c0284 	addi	r5,r5,-4086
 2000c1c:	41400015 	stw	r5,0(r8)
 2000c20:	44400115 	stw	r17,4(r8)
 2000c24:	d8c02015 	stw	r3,128(sp)
 2000c28:	d8801f15 	stw	r2,124(sp)
 2000c2c:	90bff40e 	bge	r18,r2,2000c00 <___vfprintf_internal_r+0x7d0>
 2000c30:	b009883a 	mov	r4,r22
 2000c34:	b80b883a 	mov	r5,r23
 2000c38:	d9801e04 	addi	r6,sp,120
 2000c3c:	20076f80 	call	20076f8 <__sprint_r>
 2000c40:	103eef1e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 2000c44:	843ffc04 	addi	r16,r16,-16
 2000c48:	d8c02017 	ldw	r3,128(sp)
 2000c4c:	d8801f17 	ldw	r2,124(sp)
 2000c50:	da000404 	addi	r8,sp,16
 2000c54:	8c3fed16 	blt	r17,r16,2000c0c <___vfprintf_internal_r+0x7dc>
 2000c58:	dac03617 	ldw	r11,216(sp)
 2000c5c:	1c07883a 	add	r3,r3,r16
 2000c60:	10800044 	addi	r2,r2,1
 2000c64:	42c00015 	stw	r11,0(r8)
 2000c68:	44000115 	stw	r16,4(r8)
 2000c6c:	d8c02015 	stw	r3,128(sp)
 2000c70:	d8801f15 	stw	r2,124(sp)
 2000c74:	010001c4 	movi	r4,7
 2000c78:	2080060e 	bge	r4,r2,2000c94 <___vfprintf_internal_r+0x864>
 2000c7c:	b009883a 	mov	r4,r22
 2000c80:	b80b883a 	mov	r5,r23
 2000c84:	d9801e04 	addi	r6,sp,120
 2000c88:	20076f80 	call	20076f8 <__sprint_r>
 2000c8c:	103edc1e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 2000c90:	d8c02017 	ldw	r3,128(sp)
 2000c94:	d8802b17 	ldw	r2,172(sp)
 2000c98:	db002e17 	ldw	r12,184(sp)
 2000c9c:	1300010e 	bge	r2,r12,2000ca4 <___vfprintf_internal_r+0x874>
 2000ca0:	6005883a 	mov	r2,r12
 2000ca4:	dac02f17 	ldw	r11,188(sp)
 2000ca8:	5897883a 	add	r11,r11,r2
 2000cac:	dac02f15 	stw	r11,188(sp)
 2000cb0:	18020c1e 	bne	r3,zero,20014e4 <___vfprintf_internal_r+0x10b4>
 2000cb4:	d8001f15 	stw	zero,124(sp)
 2000cb8:	da000404 	addi	r8,sp,16
 2000cbc:	003e1706 	br	200051c <___vfprintf_internal_r+0xec>
 2000cc0:	8c400414 	ori	r17,r17,16
 2000cc4:	d8c02a15 	stw	r3,168(sp)
 2000cc8:	8880080c 	andi	r2,r17,32
 2000ccc:	10010126 	beq	r2,zero,20010d4 <___vfprintf_internal_r+0xca4>
 2000cd0:	db002d17 	ldw	r12,180(sp)
 2000cd4:	0005883a 	mov	r2,zero
 2000cd8:	64c00017 	ldw	r19,0(r12)
 2000cdc:	67000117 	ldw	fp,4(r12)
 2000ce0:	63000204 	addi	r12,r12,8
 2000ce4:	db002d15 	stw	r12,180(sp)
 2000ce8:	9f06b03a 	or	r3,r19,fp
 2000cec:	d8002785 	stb	zero,158(sp)
 2000cf0:	da403215 	stw	r9,200(sp)
 2000cf4:	002b883a 	mov	r21,zero
 2000cf8:	003f0106 	br	2000900 <___vfprintf_internal_r+0x4d0>
 2000cfc:	8c400414 	ori	r17,r17,16
 2000d00:	d8c02a15 	stw	r3,168(sp)
 2000d04:	8880080c 	andi	r2,r17,32
 2000d08:	1000e326 	beq	r2,zero,2001098 <___vfprintf_internal_r+0xc68>
 2000d0c:	dac02d17 	ldw	r11,180(sp)
 2000d10:	00800044 	movi	r2,1
 2000d14:	5cc00017 	ldw	r19,0(r11)
 2000d18:	5f000117 	ldw	fp,4(r11)
 2000d1c:	5ac00204 	addi	r11,r11,8
 2000d20:	dac02d15 	stw	r11,180(sp)
 2000d24:	9f06b03a 	or	r3,r19,fp
 2000d28:	003ff006 	br	2000cec <___vfprintf_internal_r+0x8bc>
 2000d2c:	db002d17 	ldw	r12,180(sp)
 2000d30:	dac02d17 	ldw	r11,180(sp)
 2000d34:	d8c02a15 	stw	r3,168(sp)
 2000d38:	63000017 	ldw	r12,0(r12)
 2000d3c:	5ac00117 	ldw	r11,4(r11)
 2000d40:	d9802785 	stb	r6,158(sp)
 2000d44:	6009883a 	mov	r4,r12
 2000d48:	580b883a 	mov	r5,r11
 2000d4c:	db003715 	stw	r12,220(sp)
 2000d50:	da003f15 	stw	r8,252(sp)
 2000d54:	da403e15 	stw	r9,248(sp)
 2000d58:	dac03915 	stw	r11,228(sp)
 2000d5c:	20073540 	call	2007354 <__fpclassifyd>
 2000d60:	db002d17 	ldw	r12,180(sp)
 2000d64:	04800044 	movi	r18,1
 2000d68:	da003f17 	ldw	r8,252(sp)
 2000d6c:	64c00204 	addi	r19,r12,8
 2000d70:	da403e17 	ldw	r9,248(sp)
 2000d74:	d9003717 	ldw	r4,220(sp)
 2000d78:	d9403917 	ldw	r5,228(sp)
 2000d7c:	14832b1e 	bne	r2,r18,2001a2c <___vfprintf_internal_r+0x15fc>
 2000d80:	000d883a 	mov	r6,zero
 2000d84:	000f883a 	mov	r7,zero
 2000d88:	200b3000 	call	200b300 <__ledf2>
 2000d8c:	da003f17 	ldw	r8,252(sp)
 2000d90:	1004b716 	blt	r2,zero,2002070 <___vfprintf_internal_r+0x1c40>
 2000d94:	dd402783 	ldbu	r21,158(sp)
 2000d98:	008011c4 	movi	r2,71
 2000d9c:	14040e0e 	bge	r2,r16,2001dd8 <___vfprintf_internal_r+0x19a8>
 2000da0:	00c08074 	movhi	r3,513
 2000da4:	18fbef04 	addi	r3,r3,-4164
 2000da8:	d8c03115 	stw	r3,196(sp)
 2000dac:	02c000c4 	movi	r11,3
 2000db0:	00bfdfc4 	movi	r2,-129
 2000db4:	dac02b15 	stw	r11,172(sp)
 2000db8:	88a2703a 	and	r17,r17,r2
 2000dbc:	dcc02d15 	stw	r19,180(sp)
 2000dc0:	5825883a 	mov	r18,r11
 2000dc4:	d8003215 	stw	zero,200(sp)
 2000dc8:	d8003415 	stw	zero,208(sp)
 2000dcc:	003eeb06 	br	200097c <___vfprintf_internal_r+0x54c>
 2000dd0:	db002d17 	ldw	r12,180(sp)
 2000dd4:	00800c04 	movi	r2,48
 2000dd8:	d8802705 	stb	r2,156(sp)
 2000ddc:	64c00017 	ldw	r19,0(r12)
 2000de0:	00801e04 	movi	r2,120
 2000de4:	d8802745 	stb	r2,157(sp)
 2000de8:	00808074 	movhi	r2,513
 2000dec:	10bbf704 	addi	r2,r2,-4132
 2000df0:	63000104 	addi	r12,r12,4
 2000df4:	d8c02a15 	stw	r3,168(sp)
 2000df8:	d8803b15 	stw	r2,236(sp)
 2000dfc:	0039883a 	mov	fp,zero
 2000e00:	8c400094 	ori	r17,r17,2
 2000e04:	db002d15 	stw	r12,180(sp)
 2000e08:	00800084 	movi	r2,2
 2000e0c:	04001e04 	movi	r16,120
 2000e10:	9807883a 	mov	r3,r19
 2000e14:	003fb506 	br	2000cec <___vfprintf_internal_r+0x8bc>
 2000e18:	8c400214 	ori	r17,r17,8
 2000e1c:	1805883a 	mov	r2,r3
 2000e20:	1c000007 	ldb	r16,0(r3)
 2000e24:	003de706 	br	20005c4 <___vfprintf_internal_r+0x194>
 2000e28:	d8c02a15 	stw	r3,168(sp)
 2000e2c:	d9802785 	stb	r6,158(sp)
 2000e30:	8880080c 	andi	r2,r17,32
 2000e34:	d8c02d17 	ldw	r3,180(sp)
 2000e38:	103ea61e 	bne	r2,zero,20008d4 <___vfprintf_internal_r+0x4a4>
 2000e3c:	8880040c 	andi	r2,r17,16
 2000e40:	1002221e 	bne	r2,zero,20016cc <___vfprintf_internal_r+0x129c>
 2000e44:	8880100c 	andi	r2,r17,64
 2000e48:	10022026 	beq	r2,zero,20016cc <___vfprintf_internal_r+0x129c>
 2000e4c:	1cc0000f 	ldh	r19,0(r3)
 2000e50:	db002d17 	ldw	r12,180(sp)
 2000e54:	9839d7fa 	srai	fp,r19,31
 2000e58:	63000104 	addi	r12,r12,4
 2000e5c:	db002d15 	stw	r12,180(sp)
 2000e60:	e005883a 	mov	r2,fp
 2000e64:	003ea106 	br	20008ec <___vfprintf_internal_r+0x4bc>
 2000e68:	8c401014 	ori	r17,r17,64
 2000e6c:	1805883a 	mov	r2,r3
 2000e70:	1c000007 	ldb	r16,0(r3)
 2000e74:	003dd306 	br	20005c4 <___vfprintf_internal_r+0x194>
 2000e78:	1c000007 	ldb	r16,0(r3)
 2000e7c:	81c3e926 	beq	r16,r7,2001e24 <___vfprintf_internal_r+0x19f4>
 2000e80:	8c400414 	ori	r17,r17,16
 2000e84:	1805883a 	mov	r2,r3
 2000e88:	003dce06 	br	20005c4 <___vfprintf_internal_r+0x194>
 2000e8c:	d8c02a15 	stw	r3,168(sp)
 2000e90:	d9802785 	stb	r6,158(sp)
 2000e94:	8880080c 	andi	r2,r17,32
 2000e98:	10034726 	beq	r2,zero,2001bb8 <___vfprintf_internal_r+0x1788>
 2000e9c:	db002d17 	ldw	r12,180(sp)
 2000ea0:	dac02f17 	ldw	r11,188(sp)
 2000ea4:	60800017 	ldw	r2,0(r12)
 2000ea8:	5807d7fa 	srai	r3,r11,31
 2000eac:	63000104 	addi	r12,r12,4
 2000eb0:	db002d15 	stw	r12,180(sp)
 2000eb4:	12c00015 	stw	r11,0(r2)
 2000eb8:	10c00115 	stw	r3,4(r2)
 2000ebc:	003d9706 	br	200051c <___vfprintf_internal_r+0xec>
 2000ec0:	03008074 	movhi	r12,513
 2000ec4:	633bf204 	addi	r12,r12,-4152
 2000ec8:	d8c02a15 	stw	r3,168(sp)
 2000ecc:	d9802785 	stb	r6,158(sp)
 2000ed0:	db003b15 	stw	r12,236(sp)
 2000ed4:	88c0080c 	andi	r3,r17,32
 2000ed8:	d8802d17 	ldw	r2,180(sp)
 2000edc:	18005b26 	beq	r3,zero,200104c <___vfprintf_internal_r+0xc1c>
 2000ee0:	dac02d17 	ldw	r11,180(sp)
 2000ee4:	14c00017 	ldw	r19,0(r2)
 2000ee8:	17000117 	ldw	fp,4(r2)
 2000eec:	5ac00204 	addi	r11,r11,8
 2000ef0:	dac02d15 	stw	r11,180(sp)
 2000ef4:	8880004c 	andi	r2,r17,1
 2000ef8:	10022926 	beq	r2,zero,20017a0 <___vfprintf_internal_r+0x1370>
 2000efc:	9f06b03a 	or	r3,r19,fp
 2000f00:	18032b26 	beq	r3,zero,2001bb0 <___vfprintf_internal_r+0x1780>
 2000f04:	00800c04 	movi	r2,48
 2000f08:	d8802705 	stb	r2,156(sp)
 2000f0c:	dc002745 	stb	r16,157(sp)
 2000f10:	8c400094 	ori	r17,r17,2
 2000f14:	00800084 	movi	r2,2
 2000f18:	003f7406 	br	2000cec <___vfprintf_internal_r+0x8bc>
 2000f1c:	30803fcc 	andi	r2,r6,255
 2000f20:	1080201c 	xori	r2,r2,128
 2000f24:	10bfe004 	addi	r2,r2,-128
 2000f28:	1003351e 	bne	r2,zero,2001c00 <___vfprintf_internal_r+0x17d0>
 2000f2c:	1805883a 	mov	r2,r3
 2000f30:	01800804 	movi	r6,32
 2000f34:	1c000007 	ldb	r16,0(r3)
 2000f38:	003da206 	br	20005c4 <___vfprintf_internal_r+0x194>
 2000f3c:	dac02d17 	ldw	r11,180(sp)
 2000f40:	db002d17 	ldw	r12,180(sp)
 2000f44:	5ac00017 	ldw	r11,0(r11)
 2000f48:	dac02e15 	stw	r11,184(sp)
 2000f4c:	62c00104 	addi	r11,r12,4
 2000f50:	db002e17 	ldw	r12,184(sp)
 2000f54:	6003ad16 	blt	r12,zero,2001e0c <___vfprintf_internal_r+0x19dc>
 2000f58:	dac02d15 	stw	r11,180(sp)
 2000f5c:	1805883a 	mov	r2,r3
 2000f60:	1c000007 	ldb	r16,0(r3)
 2000f64:	003d9706 	br	20005c4 <___vfprintf_internal_r+0x194>
 2000f68:	1805883a 	mov	r2,r3
 2000f6c:	01800ac4 	movi	r6,43
 2000f70:	1c000007 	ldb	r16,0(r3)
 2000f74:	003d9306 	br	20005c4 <___vfprintf_internal_r+0x194>
 2000f78:	db002d17 	ldw	r12,180(sp)
 2000f7c:	d8c02a15 	stw	r3,168(sp)
 2000f80:	00c00044 	movi	r3,1
 2000f84:	60800017 	ldw	r2,0(r12)
 2000f88:	63000104 	addi	r12,r12,4
 2000f8c:	d8c02b15 	stw	r3,172(sp)
 2000f90:	d8002785 	stb	zero,158(sp)
 2000f94:	d8801405 	stb	r2,80(sp)
 2000f98:	db002d15 	stw	r12,180(sp)
 2000f9c:	dac01404 	addi	r11,sp,80
 2000fa0:	1825883a 	mov	r18,r3
 2000fa4:	d8003215 	stw	zero,200(sp)
 2000fa8:	d8003415 	stw	zero,208(sp)
 2000fac:	dac03115 	stw	r11,196(sp)
 2000fb0:	0005883a 	mov	r2,zero
 2000fb4:	003e7806 	br	2000998 <___vfprintf_internal_r+0x568>
 2000fb8:	dac02d17 	ldw	r11,180(sp)
 2000fbc:	db002d17 	ldw	r12,180(sp)
 2000fc0:	d8c02a15 	stw	r3,168(sp)
 2000fc4:	5ac00017 	ldw	r11,0(r11)
 2000fc8:	d8002785 	stb	zero,158(sp)
 2000fcc:	64c00104 	addi	r19,r12,4
 2000fd0:	dac03115 	stw	r11,196(sp)
 2000fd4:	5803fe26 	beq	r11,zero,2001fd0 <___vfprintf_internal_r+0x1ba0>
 2000fd8:	d9003117 	ldw	r4,196(sp)
 2000fdc:	4803b416 	blt	r9,zero,2001eb0 <___vfprintf_internal_r+0x1a80>
 2000fe0:	480d883a 	mov	r6,r9
 2000fe4:	000b883a 	mov	r5,zero
 2000fe8:	da003f15 	stw	r8,252(sp)
 2000fec:	da403e15 	stw	r9,248(sp)
 2000ff0:	20059ac0 	call	20059ac <memchr>
 2000ff4:	da003f17 	ldw	r8,252(sp)
 2000ff8:	da403e17 	ldw	r9,248(sp)
 2000ffc:	10043026 	beq	r2,zero,20020c0 <___vfprintf_internal_r+0x1c90>
 2001000:	d8c03117 	ldw	r3,196(sp)
 2001004:	10e5c83a 	sub	r18,r2,r3
 2001008:	4c836b16 	blt	r9,r18,2001db8 <___vfprintf_internal_r+0x1988>
 200100c:	9005883a 	mov	r2,r18
 2001010:	9003ac16 	blt	r18,zero,2001ec4 <___vfprintf_internal_r+0x1a94>
 2001014:	dd402783 	ldbu	r21,158(sp)
 2001018:	d8802b15 	stw	r2,172(sp)
 200101c:	dcc02d15 	stw	r19,180(sp)
 2001020:	d8003215 	stw	zero,200(sp)
 2001024:	d8003415 	stw	zero,208(sp)
 2001028:	003e5406 	br	200097c <___vfprintf_internal_r+0x54c>
 200102c:	00808074 	movhi	r2,513
 2001030:	10bbf704 	addi	r2,r2,-4132
 2001034:	d8c02a15 	stw	r3,168(sp)
 2001038:	d8803b15 	stw	r2,236(sp)
 200103c:	d9802785 	stb	r6,158(sp)
 2001040:	88c0080c 	andi	r3,r17,32
 2001044:	d8802d17 	ldw	r2,180(sp)
 2001048:	183fa51e 	bne	r3,zero,2000ee0 <___vfprintf_internal_r+0xab0>
 200104c:	88c0040c 	andi	r3,r17,16
 2001050:	1802ee26 	beq	r3,zero,2001c0c <___vfprintf_internal_r+0x17dc>
 2001054:	db002d17 	ldw	r12,180(sp)
 2001058:	14c00017 	ldw	r19,0(r2)
 200105c:	0039883a 	mov	fp,zero
 2001060:	63000104 	addi	r12,r12,4
 2001064:	db002d15 	stw	r12,180(sp)
 2001068:	003fa206 	br	2000ef4 <___vfprintf_internal_r+0xac4>
 200106c:	8c400054 	ori	r17,r17,1
 2001070:	1805883a 	mov	r2,r3
 2001074:	1c000007 	ldb	r16,0(r3)
 2001078:	003d5206 	br	20005c4 <___vfprintf_internal_r+0x194>
 200107c:	8c400814 	ori	r17,r17,32
 2001080:	1805883a 	mov	r2,r3
 2001084:	1c000007 	ldb	r16,0(r3)
 2001088:	003d4e06 	br	20005c4 <___vfprintf_internal_r+0x194>
 200108c:	d8c02a15 	stw	r3,168(sp)
 2001090:	8880080c 	andi	r2,r17,32
 2001094:	103f1d1e 	bne	r2,zero,2000d0c <___vfprintf_internal_r+0x8dc>
 2001098:	8880040c 	andi	r2,r17,16
 200109c:	1001b81e 	bne	r2,zero,2001780 <___vfprintf_internal_r+0x1350>
 20010a0:	8880100c 	andi	r2,r17,64
 20010a4:	1001b626 	beq	r2,zero,2001780 <___vfprintf_internal_r+0x1350>
 20010a8:	dac02d17 	ldw	r11,180(sp)
 20010ac:	0039883a 	mov	fp,zero
 20010b0:	00800044 	movi	r2,1
 20010b4:	5cc0000b 	ldhu	r19,0(r11)
 20010b8:	5ac00104 	addi	r11,r11,4
 20010bc:	dac02d15 	stw	r11,180(sp)
 20010c0:	9807883a 	mov	r3,r19
 20010c4:	003f0906 	br	2000cec <___vfprintf_internal_r+0x8bc>
 20010c8:	d8c02a15 	stw	r3,168(sp)
 20010cc:	8880080c 	andi	r2,r17,32
 20010d0:	103eff1e 	bne	r2,zero,2000cd0 <___vfprintf_internal_r+0x8a0>
 20010d4:	8880040c 	andi	r2,r17,16
 20010d8:	1001a11e 	bne	r2,zero,2001760 <___vfprintf_internal_r+0x1330>
 20010dc:	8880100c 	andi	r2,r17,64
 20010e0:	10019f26 	beq	r2,zero,2001760 <___vfprintf_internal_r+0x1330>
 20010e4:	db002d17 	ldw	r12,180(sp)
 20010e8:	0039883a 	mov	fp,zero
 20010ec:	0005883a 	mov	r2,zero
 20010f0:	64c0000b 	ldhu	r19,0(r12)
 20010f4:	63000104 	addi	r12,r12,4
 20010f8:	db002d15 	stw	r12,180(sp)
 20010fc:	9807883a 	mov	r3,r19
 2001100:	003efa06 	br	2000cec <___vfprintf_internal_r+0x8bc>
 2001104:	d8c02a15 	stw	r3,168(sp)
 2001108:	d9802785 	stb	r6,158(sp)
 200110c:	803db626 	beq	r16,zero,20007e8 <___vfprintf_internal_r+0x3b8>
 2001110:	00c00044 	movi	r3,1
 2001114:	d8c02b15 	stw	r3,172(sp)
 2001118:	dc001405 	stb	r16,80(sp)
 200111c:	d8002785 	stb	zero,158(sp)
 2001120:	003f9e06 	br	2000f9c <___vfprintf_internal_r+0xb6c>
 2001124:	d8c02017 	ldw	r3,128(sp)
 2001128:	003e5306 	br	2000a78 <___vfprintf_internal_r+0x648>
 200112c:	10803fcc 	andi	r2,r2,255
 2001130:	00c00044 	movi	r3,1
 2001134:	10fdfa1e 	bne	r2,r3,2000920 <___vfprintf_internal_r+0x4f0>
 2001138:	e000021e 	bne	fp,zero,2001144 <___vfprintf_internal_r+0xd14>
 200113c:	00800244 	movi	r2,9
 2001140:	14c0202e 	bgeu	r2,r19,20011c4 <___vfprintf_internal_r+0xd94>
 2001144:	dc002b15 	stw	r16,172(sp)
 2001148:	dc402c15 	stw	r17,176(sp)
 200114c:	9821883a 	mov	r16,r19
 2001150:	e023883a 	mov	r17,fp
 2001154:	dc801e04 	addi	r18,sp,120
 2001158:	4827883a 	mov	r19,r9
 200115c:	4039883a 	mov	fp,r8
 2001160:	8009883a 	mov	r4,r16
 2001164:	880b883a 	mov	r5,r17
 2001168:	01800284 	movi	r6,10
 200116c:	000f883a 	mov	r7,zero
 2001170:	20099780 	call	2009978 <__umoddi3>
 2001174:	10800c04 	addi	r2,r2,48
 2001178:	94bfffc4 	addi	r18,r18,-1
 200117c:	8009883a 	mov	r4,r16
 2001180:	880b883a 	mov	r5,r17
 2001184:	01800284 	movi	r6,10
 2001188:	000f883a 	mov	r7,zero
 200118c:	90800005 	stb	r2,0(r18)
 2001190:	20093b80 	call	20093b8 <__udivdi3>
 2001194:	1021883a 	mov	r16,r2
 2001198:	10c4b03a 	or	r2,r2,r3
 200119c:	1823883a 	mov	r17,r3
 20011a0:	103fef1e 	bne	r2,zero,2001160 <___vfprintf_internal_r+0xd30>
 20011a4:	dac02817 	ldw	r11,160(sp)
 20011a8:	dc803115 	stw	r18,196(sp)
 20011ac:	dc002b17 	ldw	r16,172(sp)
 20011b0:	dc402c17 	ldw	r17,176(sp)
 20011b4:	9813883a 	mov	r9,r19
 20011b8:	e011883a 	mov	r8,fp
 20011bc:	5ca5c83a 	sub	r18,r11,r18
 20011c0:	003de906 	br	2000968 <___vfprintf_internal_r+0x538>
 20011c4:	9cc00c04 	addi	r19,r19,48
 20011c8:	d8c01dc4 	addi	r3,sp,119
 20011cc:	dcc01dc5 	stb	r19,119(sp)
 20011d0:	dc803c17 	ldw	r18,240(sp)
 20011d4:	d8c03115 	stw	r3,196(sp)
 20011d8:	003de306 	br	2000968 <___vfprintf_internal_r+0x538>
 20011dc:	00801944 	movi	r2,101
 20011e0:	1400710e 	bge	r2,r16,20013a8 <___vfprintf_internal_r+0xf78>
 20011e4:	d9003717 	ldw	r4,220(sp)
 20011e8:	d9403917 	ldw	r5,228(sp)
 20011ec:	000d883a 	mov	r6,zero
 20011f0:	000f883a 	mov	r7,zero
 20011f4:	d8c03d15 	stw	r3,244(sp)
 20011f8:	da003f15 	stw	r8,252(sp)
 20011fc:	200b19c0 	call	200b19c <__eqdf2>
 2001200:	d8c03d17 	ldw	r3,244(sp)
 2001204:	da003f17 	ldw	r8,252(sp)
 2001208:	1000ef1e 	bne	r2,zero,20015c8 <___vfprintf_internal_r+0x1198>
 200120c:	d8801f17 	ldw	r2,124(sp)
 2001210:	01008074 	movhi	r4,513
 2001214:	213bfe04 	addi	r4,r4,-4104
 2001218:	18c00044 	addi	r3,r3,1
 200121c:	10800044 	addi	r2,r2,1
 2001220:	41000015 	stw	r4,0(r8)
 2001224:	01000044 	movi	r4,1
 2001228:	41000115 	stw	r4,4(r8)
 200122c:	d8c02015 	stw	r3,128(sp)
 2001230:	d8801f15 	stw	r2,124(sp)
 2001234:	010001c4 	movi	r4,7
 2001238:	20828e16 	blt	r4,r2,2001c74 <___vfprintf_internal_r+0x1844>
 200123c:	42000204 	addi	r8,r8,8
 2001240:	d8802617 	ldw	r2,152(sp)
 2001244:	dac03317 	ldw	r11,204(sp)
 2001248:	12c00216 	blt	r2,r11,2001254 <___vfprintf_internal_r+0xe24>
 200124c:	8880004c 	andi	r2,r17,1
 2001250:	103e5d26 	beq	r2,zero,2000bc8 <___vfprintf_internal_r+0x798>
 2001254:	db003817 	ldw	r12,224(sp)
 2001258:	d8801f17 	ldw	r2,124(sp)
 200125c:	dac03517 	ldw	r11,212(sp)
 2001260:	1b07883a 	add	r3,r3,r12
 2001264:	10800044 	addi	r2,r2,1
 2001268:	42c00015 	stw	r11,0(r8)
 200126c:	43000115 	stw	r12,4(r8)
 2001270:	d8c02015 	stw	r3,128(sp)
 2001274:	d8801f15 	stw	r2,124(sp)
 2001278:	010001c4 	movi	r4,7
 200127c:	2082ed16 	blt	r4,r2,2001e34 <___vfprintf_internal_r+0x1a04>
 2001280:	42000204 	addi	r8,r8,8
 2001284:	db003317 	ldw	r12,204(sp)
 2001288:	643fffc4 	addi	r16,r12,-1
 200128c:	043e4e0e 	bge	zero,r16,2000bc8 <___vfprintf_internal_r+0x798>
 2001290:	04800404 	movi	r18,16
 2001294:	d8801f17 	ldw	r2,124(sp)
 2001298:	94007e0e 	bge	r18,r16,2001494 <___vfprintf_internal_r+0x1064>
 200129c:	01408074 	movhi	r5,513
 20012a0:	297bfe84 	addi	r5,r5,-4102
 20012a4:	d9402c15 	stw	r5,176(sp)
 20012a8:	054001c4 	movi	r21,7
 20012ac:	00000306 	br	20012bc <___vfprintf_internal_r+0xe8c>
 20012b0:	42000204 	addi	r8,r8,8
 20012b4:	843ffc04 	addi	r16,r16,-16
 20012b8:	9400790e 	bge	r18,r16,20014a0 <___vfprintf_internal_r+0x1070>
 20012bc:	18c00404 	addi	r3,r3,16
 20012c0:	10800044 	addi	r2,r2,1
 20012c4:	45000015 	stw	r20,0(r8)
 20012c8:	44800115 	stw	r18,4(r8)
 20012cc:	d8c02015 	stw	r3,128(sp)
 20012d0:	d8801f15 	stw	r2,124(sp)
 20012d4:	a8bff60e 	bge	r21,r2,20012b0 <___vfprintf_internal_r+0xe80>
 20012d8:	b009883a 	mov	r4,r22
 20012dc:	b80b883a 	mov	r5,r23
 20012e0:	d9801e04 	addi	r6,sp,120
 20012e4:	20076f80 	call	20076f8 <__sprint_r>
 20012e8:	103d451e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 20012ec:	d8c02017 	ldw	r3,128(sp)
 20012f0:	d8801f17 	ldw	r2,124(sp)
 20012f4:	da000404 	addi	r8,sp,16
 20012f8:	003fee06 	br	20012b4 <___vfprintf_internal_r+0xe84>
 20012fc:	dac02e17 	ldw	r11,184(sp)
 2001300:	db002b17 	ldw	r12,172(sp)
 2001304:	5b2bc83a 	sub	r21,r11,r12
 2001308:	057df90e 	bge	zero,r21,2000af0 <___vfprintf_internal_r+0x6c0>
 200130c:	07000404 	movi	fp,16
 2001310:	d8801f17 	ldw	r2,124(sp)
 2001314:	e543640e 	bge	fp,r21,20020a8 <___vfprintf_internal_r+0x1c78>
 2001318:	01408074 	movhi	r5,513
 200131c:	297bfe84 	addi	r5,r5,-4102
 2001320:	d9402c15 	stw	r5,176(sp)
 2001324:	04c001c4 	movi	r19,7
 2001328:	00000306 	br	2001338 <___vfprintf_internal_r+0xf08>
 200132c:	ad7ffc04 	addi	r21,r21,-16
 2001330:	42000204 	addi	r8,r8,8
 2001334:	e540110e 	bge	fp,r21,200137c <___vfprintf_internal_r+0xf4c>
 2001338:	18c00404 	addi	r3,r3,16
 200133c:	10800044 	addi	r2,r2,1
 2001340:	45000015 	stw	r20,0(r8)
 2001344:	47000115 	stw	fp,4(r8)
 2001348:	d8c02015 	stw	r3,128(sp)
 200134c:	d8801f15 	stw	r2,124(sp)
 2001350:	98bff60e 	bge	r19,r2,200132c <___vfprintf_internal_r+0xefc>
 2001354:	b009883a 	mov	r4,r22
 2001358:	b80b883a 	mov	r5,r23
 200135c:	d9801e04 	addi	r6,sp,120
 2001360:	20076f80 	call	20076f8 <__sprint_r>
 2001364:	103d261e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 2001368:	ad7ffc04 	addi	r21,r21,-16
 200136c:	d8c02017 	ldw	r3,128(sp)
 2001370:	d8801f17 	ldw	r2,124(sp)
 2001374:	da000404 	addi	r8,sp,16
 2001378:	e57fef16 	blt	fp,r21,2001338 <___vfprintf_internal_r+0xf08>
 200137c:	dac02c17 	ldw	r11,176(sp)
 2001380:	1d47883a 	add	r3,r3,r21
 2001384:	10800044 	addi	r2,r2,1
 2001388:	42c00015 	stw	r11,0(r8)
 200138c:	45400115 	stw	r21,4(r8)
 2001390:	d8c02015 	stw	r3,128(sp)
 2001394:	d8801f15 	stw	r2,124(sp)
 2001398:	010001c4 	movi	r4,7
 200139c:	20819116 	blt	r4,r2,20019e4 <___vfprintf_internal_r+0x15b4>
 20013a0:	42000204 	addi	r8,r8,8
 20013a4:	003dd206 	br	2000af0 <___vfprintf_internal_r+0x6c0>
 20013a8:	db003317 	ldw	r12,204(sp)
 20013ac:	00800044 	movi	r2,1
 20013b0:	18c00044 	addi	r3,r3,1
 20013b4:	1301530e 	bge	r2,r12,2001904 <___vfprintf_internal_r+0x14d4>
 20013b8:	dc001f17 	ldw	r16,124(sp)
 20013bc:	dac03117 	ldw	r11,196(sp)
 20013c0:	00800044 	movi	r2,1
 20013c4:	84000044 	addi	r16,r16,1
 20013c8:	40800115 	stw	r2,4(r8)
 20013cc:	42c00015 	stw	r11,0(r8)
 20013d0:	d8c02015 	stw	r3,128(sp)
 20013d4:	dc001f15 	stw	r16,124(sp)
 20013d8:	008001c4 	movi	r2,7
 20013dc:	14016b16 	blt	r2,r16,200198c <___vfprintf_internal_r+0x155c>
 20013e0:	42000204 	addi	r8,r8,8
 20013e4:	db003817 	ldw	r12,224(sp)
 20013e8:	dac03517 	ldw	r11,212(sp)
 20013ec:	84000044 	addi	r16,r16,1
 20013f0:	1b07883a 	add	r3,r3,r12
 20013f4:	42c00015 	stw	r11,0(r8)
 20013f8:	43000115 	stw	r12,4(r8)
 20013fc:	d8c02015 	stw	r3,128(sp)
 2001400:	dc001f15 	stw	r16,124(sp)
 2001404:	008001c4 	movi	r2,7
 2001408:	14016916 	blt	r2,r16,20019b0 <___vfprintf_internal_r+0x1580>
 200140c:	44800204 	addi	r18,r8,8
 2001410:	d9003717 	ldw	r4,220(sp)
 2001414:	d9403917 	ldw	r5,228(sp)
 2001418:	000d883a 	mov	r6,zero
 200141c:	000f883a 	mov	r7,zero
 2001420:	d8c03d15 	stw	r3,244(sp)
 2001424:	200b19c0 	call	200b19c <__eqdf2>
 2001428:	d8c03d17 	ldw	r3,244(sp)
 200142c:	db003317 	ldw	r12,204(sp)
 2001430:	1000ad26 	beq	r2,zero,20016e8 <___vfprintf_internal_r+0x12b8>
 2001434:	dac03117 	ldw	r11,196(sp)
 2001438:	60bfffc4 	addi	r2,r12,-1
 200143c:	1887883a 	add	r3,r3,r2
 2001440:	59000044 	addi	r4,r11,1
 2001444:	84000044 	addi	r16,r16,1
 2001448:	90800115 	stw	r2,4(r18)
 200144c:	91000015 	stw	r4,0(r18)
 2001450:	d8c02015 	stw	r3,128(sp)
 2001454:	dc001f15 	stw	r16,124(sp)
 2001458:	008001c4 	movi	r2,7
 200145c:	14014216 	blt	r2,r16,2001968 <___vfprintf_internal_r+0x1538>
 2001460:	94800204 	addi	r18,r18,8
 2001464:	dac03a17 	ldw	r11,232(sp)
 2001468:	dd4022c4 	addi	r21,sp,139
 200146c:	84000044 	addi	r16,r16,1
 2001470:	1ac7883a 	add	r3,r3,r11
 2001474:	95400015 	stw	r21,0(r18)
 2001478:	92c00115 	stw	r11,4(r18)
 200147c:	d8c02015 	stw	r3,128(sp)
 2001480:	dc001f15 	stw	r16,124(sp)
 2001484:	008001c4 	movi	r2,7
 2001488:	14000e16 	blt	r2,r16,20014c4 <___vfprintf_internal_r+0x1094>
 200148c:	92000204 	addi	r8,r18,8
 2001490:	003dcd06 	br	2000bc8 <___vfprintf_internal_r+0x798>
 2001494:	01008074 	movhi	r4,513
 2001498:	213bfe84 	addi	r4,r4,-4102
 200149c:	d9002c15 	stw	r4,176(sp)
 20014a0:	dac02c17 	ldw	r11,176(sp)
 20014a4:	1c07883a 	add	r3,r3,r16
 20014a8:	44000115 	stw	r16,4(r8)
 20014ac:	42c00015 	stw	r11,0(r8)
 20014b0:	10800044 	addi	r2,r2,1
 20014b4:	d8c02015 	stw	r3,128(sp)
 20014b8:	d8801f15 	stw	r2,124(sp)
 20014bc:	010001c4 	movi	r4,7
 20014c0:	20bdc00e 	bge	r4,r2,2000bc4 <___vfprintf_internal_r+0x794>
 20014c4:	b009883a 	mov	r4,r22
 20014c8:	b80b883a 	mov	r5,r23
 20014cc:	d9801e04 	addi	r6,sp,120
 20014d0:	20076f80 	call	20076f8 <__sprint_r>
 20014d4:	103cca1e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 20014d8:	d8c02017 	ldw	r3,128(sp)
 20014dc:	da000404 	addi	r8,sp,16
 20014e0:	003db906 	br	2000bc8 <___vfprintf_internal_r+0x798>
 20014e4:	b009883a 	mov	r4,r22
 20014e8:	b80b883a 	mov	r5,r23
 20014ec:	d9801e04 	addi	r6,sp,120
 20014f0:	20076f80 	call	20076f8 <__sprint_r>
 20014f4:	103def26 	beq	r2,zero,2000cb4 <___vfprintf_internal_r+0x884>
 20014f8:	003cc106 	br	2000800 <___vfprintf_internal_r+0x3d0>
 20014fc:	10803fcc 	andi	r2,r2,255
 2001500:	1000651e 	bne	r2,zero,2001698 <___vfprintf_internal_r+0x1268>
 2001504:	8880004c 	andi	r2,r17,1
 2001508:	10013226 	beq	r2,zero,20019d4 <___vfprintf_internal_r+0x15a4>
 200150c:	00800c04 	movi	r2,48
 2001510:	d8c01dc4 	addi	r3,sp,119
 2001514:	d8801dc5 	stb	r2,119(sp)
 2001518:	dc803c17 	ldw	r18,240(sp)
 200151c:	d8c03115 	stw	r3,196(sp)
 2001520:	003d1106 	br	2000968 <___vfprintf_internal_r+0x538>
 2001524:	b009883a 	mov	r4,r22
 2001528:	b80b883a 	mov	r5,r23
 200152c:	d9801e04 	addi	r6,sp,120
 2001530:	20076f80 	call	20076f8 <__sprint_r>
 2001534:	103cb21e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 2001538:	d8c02017 	ldw	r3,128(sp)
 200153c:	da000404 	addi	r8,sp,16
 2001540:	003d9406 	br	2000b94 <___vfprintf_internal_r+0x764>
 2001544:	b009883a 	mov	r4,r22
 2001548:	b80b883a 	mov	r5,r23
 200154c:	d9801e04 	addi	r6,sp,120
 2001550:	20076f80 	call	20076f8 <__sprint_r>
 2001554:	103caa1e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 2001558:	d8c02017 	ldw	r3,128(sp)
 200155c:	da000404 	addi	r8,sp,16
 2001560:	003d5206 	br	2000aac <___vfprintf_internal_r+0x67c>
 2001564:	b009883a 	mov	r4,r22
 2001568:	b80b883a 	mov	r5,r23
 200156c:	d9801e04 	addi	r6,sp,120
 2001570:	20076f80 	call	20076f8 <__sprint_r>
 2001574:	103ca21e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 2001578:	d8c02017 	ldw	r3,128(sp)
 200157c:	da000404 	addi	r8,sp,16
 2001580:	003d5806 	br	2000ae4 <___vfprintf_internal_r+0x6b4>
 2001584:	d9403b17 	ldw	r5,236(sp)
 2001588:	d8c01e04 	addi	r3,sp,120
 200158c:	988003cc 	andi	r2,r19,15
 2001590:	e008973a 	slli	r4,fp,28
 2001594:	2885883a 	add	r2,r5,r2
 2001598:	9826d13a 	srli	r19,r19,4
 200159c:	10800003 	ldbu	r2,0(r2)
 20015a0:	e038d13a 	srli	fp,fp,4
 20015a4:	18ffffc4 	addi	r3,r3,-1
 20015a8:	24e6b03a 	or	r19,r4,r19
 20015ac:	18800005 	stb	r2,0(r3)
 20015b0:	9f04b03a 	or	r2,r19,fp
 20015b4:	103ff51e 	bne	r2,zero,200158c <___vfprintf_internal_r+0x115c>
 20015b8:	db002817 	ldw	r12,160(sp)
 20015bc:	d8c03115 	stw	r3,196(sp)
 20015c0:	60e5c83a 	sub	r18,r12,r3
 20015c4:	003ce806 	br	2000968 <___vfprintf_internal_r+0x538>
 20015c8:	dc002617 	ldw	r16,152(sp)
 20015cc:	0401b10e 	bge	zero,r16,2001c94 <___vfprintf_internal_r+0x1864>
 20015d0:	db003117 	ldw	r12,196(sp)
 20015d4:	dac03317 	ldw	r11,204(sp)
 20015d8:	62e1883a 	add	r16,r12,r11
 20015dc:	db003417 	ldw	r12,208(sp)
 20015e0:	5825883a 	mov	r18,r11
 20015e4:	62c0010e 	bge	r12,r11,20015ec <___vfprintf_internal_r+0x11bc>
 20015e8:	6025883a 	mov	r18,r12
 20015ec:	04800b0e 	bge	zero,r18,200161c <___vfprintf_internal_r+0x11ec>
 20015f0:	d8801f17 	ldw	r2,124(sp)
 20015f4:	dac03117 	ldw	r11,196(sp)
 20015f8:	1c87883a 	add	r3,r3,r18
 20015fc:	10800044 	addi	r2,r2,1
 2001600:	42c00015 	stw	r11,0(r8)
 2001604:	44800115 	stw	r18,4(r8)
 2001608:	d8c02015 	stw	r3,128(sp)
 200160c:	d8801f15 	stw	r2,124(sp)
 2001610:	010001c4 	movi	r4,7
 2001614:	20824f16 	blt	r4,r2,2001f54 <___vfprintf_internal_r+0x1b24>
 2001618:	42000204 	addi	r8,r8,8
 200161c:	90024b16 	blt	r18,zero,2001f4c <___vfprintf_internal_r+0x1b1c>
 2001620:	db003417 	ldw	r12,208(sp)
 2001624:	64a5c83a 	sub	r18,r12,r18
 2001628:	0480730e 	bge	zero,r18,20017f8 <___vfprintf_internal_r+0x13c8>
 200162c:	05400404 	movi	r21,16
 2001630:	d8801f17 	ldw	r2,124(sp)
 2001634:	ac817d0e 	bge	r21,r18,2001c2c <___vfprintf_internal_r+0x17fc>
 2001638:	01408074 	movhi	r5,513
 200163c:	297bfe84 	addi	r5,r5,-4102
 2001640:	d9402c15 	stw	r5,176(sp)
 2001644:	070001c4 	movi	fp,7
 2001648:	00000306 	br	2001658 <___vfprintf_internal_r+0x1228>
 200164c:	42000204 	addi	r8,r8,8
 2001650:	94bffc04 	addi	r18,r18,-16
 2001654:	ac81780e 	bge	r21,r18,2001c38 <___vfprintf_internal_r+0x1808>
 2001658:	18c00404 	addi	r3,r3,16
 200165c:	10800044 	addi	r2,r2,1
 2001660:	45000015 	stw	r20,0(r8)
 2001664:	45400115 	stw	r21,4(r8)
 2001668:	d8c02015 	stw	r3,128(sp)
 200166c:	d8801f15 	stw	r2,124(sp)
 2001670:	e0bff60e 	bge	fp,r2,200164c <___vfprintf_internal_r+0x121c>
 2001674:	b009883a 	mov	r4,r22
 2001678:	b80b883a 	mov	r5,r23
 200167c:	d9801e04 	addi	r6,sp,120
 2001680:	20076f80 	call	20076f8 <__sprint_r>
 2001684:	103c5e1e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 2001688:	d8c02017 	ldw	r3,128(sp)
 200168c:	d8801f17 	ldw	r2,124(sp)
 2001690:	da000404 	addi	r8,sp,16
 2001694:	003fee06 	br	2001650 <___vfprintf_internal_r+0x1220>
 2001698:	dac01e04 	addi	r11,sp,120
 200169c:	0025883a 	mov	r18,zero
 20016a0:	dac03115 	stw	r11,196(sp)
 20016a4:	003cb006 	br	2000968 <___vfprintf_internal_r+0x538>
 20016a8:	b009883a 	mov	r4,r22
 20016ac:	b80b883a 	mov	r5,r23
 20016b0:	d9801e04 	addi	r6,sp,120
 20016b4:	20076f80 	call	20076f8 <__sprint_r>
 20016b8:	103c511e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 20016bc:	d8c02017 	ldw	r3,128(sp)
 20016c0:	d8802787 	ldb	r2,158(sp)
 20016c4:	da000404 	addi	r8,sp,16
 20016c8:	003ceb06 	br	2000a78 <___vfprintf_internal_r+0x648>
 20016cc:	1cc00017 	ldw	r19,0(r3)
 20016d0:	dac02d17 	ldw	r11,180(sp)
 20016d4:	9839d7fa 	srai	fp,r19,31
 20016d8:	5ac00104 	addi	r11,r11,4
 20016dc:	dac02d15 	stw	r11,180(sp)
 20016e0:	e005883a 	mov	r2,fp
 20016e4:	003c8106 	br	20008ec <___vfprintf_internal_r+0x4bc>
 20016e8:	657fffc4 	addi	r21,r12,-1
 20016ec:	057f5d0e 	bge	zero,r21,2001464 <___vfprintf_internal_r+0x1034>
 20016f0:	07000404 	movi	fp,16
 20016f4:	e540900e 	bge	fp,r21,2001938 <___vfprintf_internal_r+0x1508>
 20016f8:	01008074 	movhi	r4,513
 20016fc:	213bfe84 	addi	r4,r4,-4102
 2001700:	d9002c15 	stw	r4,176(sp)
 2001704:	01c001c4 	movi	r7,7
 2001708:	00000306 	br	2001718 <___vfprintf_internal_r+0x12e8>
 200170c:	94800204 	addi	r18,r18,8
 2001710:	ad7ffc04 	addi	r21,r21,-16
 2001714:	e5408b0e 	bge	fp,r21,2001944 <___vfprintf_internal_r+0x1514>
 2001718:	18c00404 	addi	r3,r3,16
 200171c:	84000044 	addi	r16,r16,1
 2001720:	95000015 	stw	r20,0(r18)
 2001724:	97000115 	stw	fp,4(r18)
 2001728:	d8c02015 	stw	r3,128(sp)
 200172c:	dc001f15 	stw	r16,124(sp)
 2001730:	3c3ff60e 	bge	r7,r16,200170c <___vfprintf_internal_r+0x12dc>
 2001734:	b009883a 	mov	r4,r22
 2001738:	b80b883a 	mov	r5,r23
 200173c:	d9801e04 	addi	r6,sp,120
 2001740:	d9c03d15 	stw	r7,244(sp)
 2001744:	20076f80 	call	20076f8 <__sprint_r>
 2001748:	d9c03d17 	ldw	r7,244(sp)
 200174c:	103c2c1e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 2001750:	d8c02017 	ldw	r3,128(sp)
 2001754:	dc001f17 	ldw	r16,124(sp)
 2001758:	dc800404 	addi	r18,sp,16
 200175c:	003fec06 	br	2001710 <___vfprintf_internal_r+0x12e0>
 2001760:	dac02d17 	ldw	r11,180(sp)
 2001764:	0039883a 	mov	fp,zero
 2001768:	0005883a 	mov	r2,zero
 200176c:	5cc00017 	ldw	r19,0(r11)
 2001770:	5ac00104 	addi	r11,r11,4
 2001774:	dac02d15 	stw	r11,180(sp)
 2001778:	9807883a 	mov	r3,r19
 200177c:	003d5b06 	br	2000cec <___vfprintf_internal_r+0x8bc>
 2001780:	db002d17 	ldw	r12,180(sp)
 2001784:	0039883a 	mov	fp,zero
 2001788:	00800044 	movi	r2,1
 200178c:	64c00017 	ldw	r19,0(r12)
 2001790:	63000104 	addi	r12,r12,4
 2001794:	db002d15 	stw	r12,180(sp)
 2001798:	9807883a 	mov	r3,r19
 200179c:	003d5306 	br	2000cec <___vfprintf_internal_r+0x8bc>
 20017a0:	00800084 	movi	r2,2
 20017a4:	9f06b03a 	or	r3,r19,fp
 20017a8:	003d5006 	br	2000cec <___vfprintf_internal_r+0x8bc>
 20017ac:	10803fcc 	andi	r2,r2,255
 20017b0:	1080201c 	xori	r2,r2,128
 20017b4:	10bfe004 	addi	r2,r2,-128
 20017b8:	01000c04 	movi	r4,48
 20017bc:	1101a526 	beq	r2,r4,2001e54 <___vfprintf_internal_r+0x1a24>
 20017c0:	dac03117 	ldw	r11,196(sp)
 20017c4:	db002817 	ldw	r12,160(sp)
 20017c8:	193fffc5 	stb	r4,-1(r3)
 20017cc:	5affffc4 	addi	r11,r11,-1
 20017d0:	dac03115 	stw	r11,196(sp)
 20017d4:	62e5c83a 	sub	r18,r12,r11
 20017d8:	003c6306 	br	2000968 <___vfprintf_internal_r+0x538>
 20017dc:	b009883a 	mov	r4,r22
 20017e0:	b80b883a 	mov	r5,r23
 20017e4:	d9801e04 	addi	r6,sp,120
 20017e8:	20076f80 	call	20076f8 <__sprint_r>
 20017ec:	103c041e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 20017f0:	d8c02017 	ldw	r3,128(sp)
 20017f4:	da000404 	addi	r8,sp,16
 20017f8:	db003117 	ldw	r12,196(sp)
 20017fc:	dac03417 	ldw	r11,208(sp)
 2001800:	d8802617 	ldw	r2,152(sp)
 2001804:	62e5883a 	add	r18,r12,r11
 2001808:	db003317 	ldw	r12,204(sp)
 200180c:	13000216 	blt	r2,r12,2001818 <___vfprintf_internal_r+0x13e8>
 2001810:	8900004c 	andi	r4,r17,1
 2001814:	20000c26 	beq	r4,zero,2001848 <___vfprintf_internal_r+0x1418>
 2001818:	dac03817 	ldw	r11,224(sp)
 200181c:	d9001f17 	ldw	r4,124(sp)
 2001820:	db003517 	ldw	r12,212(sp)
 2001824:	1ac7883a 	add	r3,r3,r11
 2001828:	21000044 	addi	r4,r4,1
 200182c:	43000015 	stw	r12,0(r8)
 2001830:	42c00115 	stw	r11,4(r8)
 2001834:	d8c02015 	stw	r3,128(sp)
 2001838:	d9001f15 	stw	r4,124(sp)
 200183c:	014001c4 	movi	r5,7
 2001840:	2901cc16 	blt	r5,r4,2001f74 <___vfprintf_internal_r+0x1b44>
 2001844:	42000204 	addi	r8,r8,8
 2001848:	dac03317 	ldw	r11,204(sp)
 200184c:	8489c83a 	sub	r4,r16,r18
 2001850:	5885c83a 	sub	r2,r11,r2
 2001854:	1021883a 	mov	r16,r2
 2001858:	2080010e 	bge	r4,r2,2001860 <___vfprintf_internal_r+0x1430>
 200185c:	2021883a 	mov	r16,r4
 2001860:	04000a0e 	bge	zero,r16,200188c <___vfprintf_internal_r+0x145c>
 2001864:	d9001f17 	ldw	r4,124(sp)
 2001868:	1c07883a 	add	r3,r3,r16
 200186c:	44800015 	stw	r18,0(r8)
 2001870:	21000044 	addi	r4,r4,1
 2001874:	44000115 	stw	r16,4(r8)
 2001878:	d8c02015 	stw	r3,128(sp)
 200187c:	d9001f15 	stw	r4,124(sp)
 2001880:	014001c4 	movi	r5,7
 2001884:	2901e316 	blt	r5,r4,2002014 <___vfprintf_internal_r+0x1be4>
 2001888:	42000204 	addi	r8,r8,8
 200188c:	8001df16 	blt	r16,zero,200200c <___vfprintf_internal_r+0x1bdc>
 2001890:	1421c83a 	sub	r16,r2,r16
 2001894:	043ccc0e 	bge	zero,r16,2000bc8 <___vfprintf_internal_r+0x798>
 2001898:	04800404 	movi	r18,16
 200189c:	d8801f17 	ldw	r2,124(sp)
 20018a0:	943efc0e 	bge	r18,r16,2001494 <___vfprintf_internal_r+0x1064>
 20018a4:	01408074 	movhi	r5,513
 20018a8:	297bfe84 	addi	r5,r5,-4102
 20018ac:	d9402c15 	stw	r5,176(sp)
 20018b0:	054001c4 	movi	r21,7
 20018b4:	00000306 	br	20018c4 <___vfprintf_internal_r+0x1494>
 20018b8:	42000204 	addi	r8,r8,8
 20018bc:	843ffc04 	addi	r16,r16,-16
 20018c0:	943ef70e 	bge	r18,r16,20014a0 <___vfprintf_internal_r+0x1070>
 20018c4:	18c00404 	addi	r3,r3,16
 20018c8:	10800044 	addi	r2,r2,1
 20018cc:	45000015 	stw	r20,0(r8)
 20018d0:	44800115 	stw	r18,4(r8)
 20018d4:	d8c02015 	stw	r3,128(sp)
 20018d8:	d8801f15 	stw	r2,124(sp)
 20018dc:	a8bff60e 	bge	r21,r2,20018b8 <___vfprintf_internal_r+0x1488>
 20018e0:	b009883a 	mov	r4,r22
 20018e4:	b80b883a 	mov	r5,r23
 20018e8:	d9801e04 	addi	r6,sp,120
 20018ec:	20076f80 	call	20076f8 <__sprint_r>
 20018f0:	103bc31e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 20018f4:	d8c02017 	ldw	r3,128(sp)
 20018f8:	d8801f17 	ldw	r2,124(sp)
 20018fc:	da000404 	addi	r8,sp,16
 2001900:	003fee06 	br	20018bc <___vfprintf_internal_r+0x148c>
 2001904:	8888703a 	and	r4,r17,r2
 2001908:	203eab1e 	bne	r4,zero,20013b8 <___vfprintf_internal_r+0xf88>
 200190c:	dc001f17 	ldw	r16,124(sp)
 2001910:	db003117 	ldw	r12,196(sp)
 2001914:	40800115 	stw	r2,4(r8)
 2001918:	84000044 	addi	r16,r16,1
 200191c:	43000015 	stw	r12,0(r8)
 2001920:	d8c02015 	stw	r3,128(sp)
 2001924:	dc001f15 	stw	r16,124(sp)
 2001928:	008001c4 	movi	r2,7
 200192c:	14000e16 	blt	r2,r16,2001968 <___vfprintf_internal_r+0x1538>
 2001930:	44800204 	addi	r18,r8,8
 2001934:	003ecb06 	br	2001464 <___vfprintf_internal_r+0x1034>
 2001938:	00808074 	movhi	r2,513
 200193c:	10bbfe84 	addi	r2,r2,-4102
 2001940:	d8802c15 	stw	r2,176(sp)
 2001944:	dac02c17 	ldw	r11,176(sp)
 2001948:	1d47883a 	add	r3,r3,r21
 200194c:	84000044 	addi	r16,r16,1
 2001950:	92c00015 	stw	r11,0(r18)
 2001954:	95400115 	stw	r21,4(r18)
 2001958:	d8c02015 	stw	r3,128(sp)
 200195c:	dc001f15 	stw	r16,124(sp)
 2001960:	008001c4 	movi	r2,7
 2001964:	143ebe0e 	bge	r2,r16,2001460 <___vfprintf_internal_r+0x1030>
 2001968:	b009883a 	mov	r4,r22
 200196c:	b80b883a 	mov	r5,r23
 2001970:	d9801e04 	addi	r6,sp,120
 2001974:	20076f80 	call	20076f8 <__sprint_r>
 2001978:	103ba11e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 200197c:	d8c02017 	ldw	r3,128(sp)
 2001980:	dc001f17 	ldw	r16,124(sp)
 2001984:	dc800404 	addi	r18,sp,16
 2001988:	003eb606 	br	2001464 <___vfprintf_internal_r+0x1034>
 200198c:	b009883a 	mov	r4,r22
 2001990:	b80b883a 	mov	r5,r23
 2001994:	d9801e04 	addi	r6,sp,120
 2001998:	20076f80 	call	20076f8 <__sprint_r>
 200199c:	103b981e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 20019a0:	d8c02017 	ldw	r3,128(sp)
 20019a4:	dc001f17 	ldw	r16,124(sp)
 20019a8:	da000404 	addi	r8,sp,16
 20019ac:	003e8d06 	br	20013e4 <___vfprintf_internal_r+0xfb4>
 20019b0:	b009883a 	mov	r4,r22
 20019b4:	b80b883a 	mov	r5,r23
 20019b8:	d9801e04 	addi	r6,sp,120
 20019bc:	20076f80 	call	20076f8 <__sprint_r>
 20019c0:	103b8f1e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 20019c4:	d8c02017 	ldw	r3,128(sp)
 20019c8:	dc001f17 	ldw	r16,124(sp)
 20019cc:	dc800404 	addi	r18,sp,16
 20019d0:	003e8f06 	br	2001410 <___vfprintf_internal_r+0xfe0>
 20019d4:	db001e04 	addi	r12,sp,120
 20019d8:	0025883a 	mov	r18,zero
 20019dc:	db003115 	stw	r12,196(sp)
 20019e0:	003be106 	br	2000968 <___vfprintf_internal_r+0x538>
 20019e4:	b009883a 	mov	r4,r22
 20019e8:	b80b883a 	mov	r5,r23
 20019ec:	d9801e04 	addi	r6,sp,120
 20019f0:	20076f80 	call	20076f8 <__sprint_r>
 20019f4:	103b821e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 20019f8:	d8c02017 	ldw	r3,128(sp)
 20019fc:	da000404 	addi	r8,sp,16
 2001a00:	003c3b06 	br	2000af0 <___vfprintf_internal_r+0x6c0>
 2001a04:	04e7c83a 	sub	r19,zero,r19
 2001a08:	9804c03a 	cmpne	r2,r19,zero
 2001a0c:	0739c83a 	sub	fp,zero,fp
 2001a10:	e0b9c83a 	sub	fp,fp,r2
 2001a14:	05400b44 	movi	r21,45
 2001a18:	dd402785 	stb	r21,158(sp)
 2001a1c:	da403215 	stw	r9,200(sp)
 2001a20:	00800044 	movi	r2,1
 2001a24:	9f06b03a 	or	r3,r19,fp
 2001a28:	003bb506 	br	2000900 <___vfprintf_internal_r+0x4d0>
 2001a2c:	da003f15 	stw	r8,252(sp)
 2001a30:	da403e15 	stw	r9,248(sp)
 2001a34:	20073540 	call	2007354 <__fpclassifyd>
 2001a38:	da003f17 	ldw	r8,252(sp)
 2001a3c:	da403e17 	ldw	r9,248(sp)
 2001a40:	1000ce26 	beq	r2,zero,2001d7c <___vfprintf_internal_r+0x194c>
 2001a44:	057ff7c4 	movi	r21,-33
 2001a48:	00bfffc4 	movi	r2,-1
 2001a4c:	856a703a 	and	r21,r16,r21
 2001a50:	4881e826 	beq	r9,r2,20021f4 <___vfprintf_internal_r+0x1dc4>
 2001a54:	008011c4 	movi	r2,71
 2001a58:	a881e326 	beq	r21,r2,20021e8 <___vfprintf_internal_r+0x1db8>
 2001a5c:	db003917 	ldw	r12,228(sp)
 2001a60:	8ac04014 	ori	r11,r17,256
 2001a64:	dac02d15 	stw	r11,180(sp)
 2001a68:	6001ed16 	blt	r12,zero,2002220 <___vfprintf_internal_r+0x1df0>
 2001a6c:	dc803917 	ldw	r18,228(sp)
 2001a70:	d8002b05 	stb	zero,172(sp)
 2001a74:	00801984 	movi	r2,102
 2001a78:	80811826 	beq	r16,r2,2001edc <___vfprintf_internal_r+0x1aac>
 2001a7c:	00801184 	movi	r2,70
 2001a80:	80811626 	beq	r16,r2,2001edc <___vfprintf_internal_r+0x1aac>
 2001a84:	00801144 	movi	r2,69
 2001a88:	a881e926 	beq	r21,r2,2002230 <___vfprintf_internal_r+0x1e00>
 2001a8c:	4839883a 	mov	fp,r9
 2001a90:	d8802604 	addi	r2,sp,152
 2001a94:	d8800115 	stw	r2,4(sp)
 2001a98:	d9403717 	ldw	r5,220(sp)
 2001a9c:	d8802504 	addi	r2,sp,148
 2001aa0:	d8800215 	stw	r2,8(sp)
 2001aa4:	d8802104 	addi	r2,sp,132
 2001aa8:	df000015 	stw	fp,0(sp)
 2001aac:	d8800315 	stw	r2,12(sp)
 2001ab0:	b009883a 	mov	r4,r22
 2001ab4:	900d883a 	mov	r6,r18
 2001ab8:	01c00084 	movi	r7,2
 2001abc:	da003f15 	stw	r8,252(sp)
 2001ac0:	da403e15 	stw	r9,248(sp)
 2001ac4:	20027b40 	call	20027b4 <_dtoa_r>
 2001ac8:	d8803115 	stw	r2,196(sp)
 2001acc:	008019c4 	movi	r2,103
 2001ad0:	da003f17 	ldw	r8,252(sp)
 2001ad4:	da403e17 	ldw	r9,248(sp)
 2001ad8:	80800226 	beq	r16,r2,2001ae4 <___vfprintf_internal_r+0x16b4>
 2001adc:	008011c4 	movi	r2,71
 2001ae0:	8081101e 	bne	r16,r2,2001f24 <___vfprintf_internal_r+0x1af4>
 2001ae4:	8880004c 	andi	r2,r17,1
 2001ae8:	1001dd26 	beq	r2,zero,2002260 <___vfprintf_internal_r+0x1e30>
 2001aec:	db003117 	ldw	r12,196(sp)
 2001af0:	6715883a 	add	r10,r12,fp
 2001af4:	d9003717 	ldw	r4,220(sp)
 2001af8:	900b883a 	mov	r5,r18
 2001afc:	000d883a 	mov	r6,zero
 2001b00:	000f883a 	mov	r7,zero
 2001b04:	da003f15 	stw	r8,252(sp)
 2001b08:	da403e15 	stw	r9,248(sp)
 2001b0c:	da803d15 	stw	r10,244(sp)
 2001b10:	200b19c0 	call	200b19c <__eqdf2>
 2001b14:	da003f17 	ldw	r8,252(sp)
 2001b18:	da403e17 	ldw	r9,248(sp)
 2001b1c:	da803d17 	ldw	r10,244(sp)
 2001b20:	10016526 	beq	r2,zero,20020b8 <___vfprintf_internal_r+0x1c88>
 2001b24:	d8802117 	ldw	r2,132(sp)
 2001b28:	1280062e 	bgeu	r2,r10,2001b44 <___vfprintf_internal_r+0x1714>
 2001b2c:	01000c04 	movi	r4,48
 2001b30:	10c00044 	addi	r3,r2,1
 2001b34:	d8c02115 	stw	r3,132(sp)
 2001b38:	11000005 	stb	r4,0(r2)
 2001b3c:	d8802117 	ldw	r2,132(sp)
 2001b40:	12bffb36 	bltu	r2,r10,2001b30 <___vfprintf_internal_r+0x1700>
 2001b44:	db003117 	ldw	r12,196(sp)
 2001b48:	1305c83a 	sub	r2,r2,r12
 2001b4c:	d8803315 	stw	r2,204(sp)
 2001b50:	008011c4 	movi	r2,71
 2001b54:	a8814d26 	beq	r21,r2,200208c <___vfprintf_internal_r+0x1c5c>
 2001b58:	00801944 	movi	r2,101
 2001b5c:	1402060e 	bge	r2,r16,2002378 <___vfprintf_internal_r+0x1f48>
 2001b60:	00801984 	movi	r2,102
 2001b64:	8081b426 	beq	r16,r2,2002238 <___vfprintf_internal_r+0x1e08>
 2001b68:	db002617 	ldw	r12,152(sp)
 2001b6c:	db003415 	stw	r12,208(sp)
 2001b70:	db003417 	ldw	r12,208(sp)
 2001b74:	dac03317 	ldw	r11,204(sp)
 2001b78:	62c1a016 	blt	r12,r11,20021fc <___vfprintf_internal_r+0x1dcc>
 2001b7c:	8c40004c 	andi	r17,r17,1
 2001b80:	8801bf1e 	bne	r17,zero,2002280 <___vfprintf_internal_r+0x1e50>
 2001b84:	6005883a 	mov	r2,r12
 2001b88:	6001b316 	blt	r12,zero,2002258 <___vfprintf_internal_r+0x1e28>
 2001b8c:	dc803417 	ldw	r18,208(sp)
 2001b90:	df002b07 	ldb	fp,172(sp)
 2001b94:	e0012e1e 	bne	fp,zero,2002050 <___vfprintf_internal_r+0x1c20>
 2001b98:	dc402d17 	ldw	r17,180(sp)
 2001b9c:	dd402783 	ldbu	r21,158(sp)
 2001ba0:	d8802b15 	stw	r2,172(sp)
 2001ba4:	dcc02d15 	stw	r19,180(sp)
 2001ba8:	d8003215 	stw	zero,200(sp)
 2001bac:	003b7306 	br	200097c <___vfprintf_internal_r+0x54c>
 2001bb0:	00800084 	movi	r2,2
 2001bb4:	003c4d06 	br	2000cec <___vfprintf_internal_r+0x8bc>
 2001bb8:	8880040c 	andi	r2,r17,16
 2001bbc:	1000091e 	bne	r2,zero,2001be4 <___vfprintf_internal_r+0x17b4>
 2001bc0:	8c40100c 	andi	r17,r17,64
 2001bc4:	88000726 	beq	r17,zero,2001be4 <___vfprintf_internal_r+0x17b4>
 2001bc8:	db002d17 	ldw	r12,180(sp)
 2001bcc:	dac02f17 	ldw	r11,188(sp)
 2001bd0:	60800017 	ldw	r2,0(r12)
 2001bd4:	63000104 	addi	r12,r12,4
 2001bd8:	db002d15 	stw	r12,180(sp)
 2001bdc:	12c0000d 	sth	r11,0(r2)
 2001be0:	003a4e06 	br	200051c <___vfprintf_internal_r+0xec>
 2001be4:	db002d17 	ldw	r12,180(sp)
 2001be8:	dac02f17 	ldw	r11,188(sp)
 2001bec:	60800017 	ldw	r2,0(r12)
 2001bf0:	63000104 	addi	r12,r12,4
 2001bf4:	db002d15 	stw	r12,180(sp)
 2001bf8:	12c00015 	stw	r11,0(r2)
 2001bfc:	003a4706 	br	200051c <___vfprintf_internal_r+0xec>
 2001c00:	1c000007 	ldb	r16,0(r3)
 2001c04:	1805883a 	mov	r2,r3
 2001c08:	003a6e06 	br	20005c4 <___vfprintf_internal_r+0x194>
 2001c0c:	88c0100c 	andi	r3,r17,64
 2001c10:	18006b26 	beq	r3,zero,2001dc0 <___vfprintf_internal_r+0x1990>
 2001c14:	dac02d17 	ldw	r11,180(sp)
 2001c18:	14c0000b 	ldhu	r19,0(r2)
 2001c1c:	0039883a 	mov	fp,zero
 2001c20:	5ac00104 	addi	r11,r11,4
 2001c24:	dac02d15 	stw	r11,180(sp)
 2001c28:	003cb206 	br	2000ef4 <___vfprintf_internal_r+0xac4>
 2001c2c:	01008074 	movhi	r4,513
 2001c30:	213bfe84 	addi	r4,r4,-4102
 2001c34:	d9002c15 	stw	r4,176(sp)
 2001c38:	dac02c17 	ldw	r11,176(sp)
 2001c3c:	1c87883a 	add	r3,r3,r18
 2001c40:	10800044 	addi	r2,r2,1
 2001c44:	42c00015 	stw	r11,0(r8)
 2001c48:	44800115 	stw	r18,4(r8)
 2001c4c:	d8c02015 	stw	r3,128(sp)
 2001c50:	d8801f15 	stw	r2,124(sp)
 2001c54:	010001c4 	movi	r4,7
 2001c58:	20bee016 	blt	r4,r2,20017dc <___vfprintf_internal_r+0x13ac>
 2001c5c:	42000204 	addi	r8,r8,8
 2001c60:	003ee506 	br	20017f8 <___vfprintf_internal_r+0x13c8>
 2001c64:	01008074 	movhi	r4,513
 2001c68:	213bfe84 	addi	r4,r4,-4102
 2001c6c:	d9002c15 	stw	r4,176(sp)
 2001c70:	003bbe06 	br	2000b6c <___vfprintf_internal_r+0x73c>
 2001c74:	b009883a 	mov	r4,r22
 2001c78:	b80b883a 	mov	r5,r23
 2001c7c:	d9801e04 	addi	r6,sp,120
 2001c80:	20076f80 	call	20076f8 <__sprint_r>
 2001c84:	103ade1e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 2001c88:	d8c02017 	ldw	r3,128(sp)
 2001c8c:	da000404 	addi	r8,sp,16
 2001c90:	003d6b06 	br	2001240 <___vfprintf_internal_r+0xe10>
 2001c94:	d8801f17 	ldw	r2,124(sp)
 2001c98:	03008074 	movhi	r12,513
 2001c9c:	01000044 	movi	r4,1
 2001ca0:	18c00044 	addi	r3,r3,1
 2001ca4:	10800044 	addi	r2,r2,1
 2001ca8:	633bfe04 	addi	r12,r12,-4104
 2001cac:	41000115 	stw	r4,4(r8)
 2001cb0:	43000015 	stw	r12,0(r8)
 2001cb4:	d8c02015 	stw	r3,128(sp)
 2001cb8:	d8801f15 	stw	r2,124(sp)
 2001cbc:	010001c4 	movi	r4,7
 2001cc0:	20804916 	blt	r4,r2,2001de8 <___vfprintf_internal_r+0x19b8>
 2001cc4:	42000204 	addi	r8,r8,8
 2001cc8:	8000041e 	bne	r16,zero,2001cdc <___vfprintf_internal_r+0x18ac>
 2001ccc:	dac03317 	ldw	r11,204(sp)
 2001cd0:	5800021e 	bne	r11,zero,2001cdc <___vfprintf_internal_r+0x18ac>
 2001cd4:	8880004c 	andi	r2,r17,1
 2001cd8:	103bbb26 	beq	r2,zero,2000bc8 <___vfprintf_internal_r+0x798>
 2001cdc:	db003817 	ldw	r12,224(sp)
 2001ce0:	d8801f17 	ldw	r2,124(sp)
 2001ce4:	dac03517 	ldw	r11,212(sp)
 2001ce8:	1b07883a 	add	r3,r3,r12
 2001cec:	10800044 	addi	r2,r2,1
 2001cf0:	42c00015 	stw	r11,0(r8)
 2001cf4:	43000115 	stw	r12,4(r8)
 2001cf8:	d8c02015 	stw	r3,128(sp)
 2001cfc:	d8801f15 	stw	r2,124(sp)
 2001d00:	010001c4 	movi	r4,7
 2001d04:	20812e16 	blt	r4,r2,20021c0 <___vfprintf_internal_r+0x1d90>
 2001d08:	42000204 	addi	r8,r8,8
 2001d0c:	0421c83a 	sub	r16,zero,r16
 2001d10:	04005c0e 	bge	zero,r16,2001e84 <___vfprintf_internal_r+0x1a54>
 2001d14:	04800404 	movi	r18,16
 2001d18:	94009f0e 	bge	r18,r16,2001f98 <___vfprintf_internal_r+0x1b68>
 2001d1c:	01008074 	movhi	r4,513
 2001d20:	213bfe84 	addi	r4,r4,-4102
 2001d24:	d9002c15 	stw	r4,176(sp)
 2001d28:	054001c4 	movi	r21,7
 2001d2c:	00000306 	br	2001d3c <___vfprintf_internal_r+0x190c>
 2001d30:	42000204 	addi	r8,r8,8
 2001d34:	843ffc04 	addi	r16,r16,-16
 2001d38:	94009a0e 	bge	r18,r16,2001fa4 <___vfprintf_internal_r+0x1b74>
 2001d3c:	18c00404 	addi	r3,r3,16
 2001d40:	10800044 	addi	r2,r2,1
 2001d44:	45000015 	stw	r20,0(r8)
 2001d48:	44800115 	stw	r18,4(r8)
 2001d4c:	d8c02015 	stw	r3,128(sp)
 2001d50:	d8801f15 	stw	r2,124(sp)
 2001d54:	a8bff60e 	bge	r21,r2,2001d30 <___vfprintf_internal_r+0x1900>
 2001d58:	b009883a 	mov	r4,r22
 2001d5c:	b80b883a 	mov	r5,r23
 2001d60:	d9801e04 	addi	r6,sp,120
 2001d64:	20076f80 	call	20076f8 <__sprint_r>
 2001d68:	103aa51e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 2001d6c:	d8c02017 	ldw	r3,128(sp)
 2001d70:	d8801f17 	ldw	r2,124(sp)
 2001d74:	da000404 	addi	r8,sp,16
 2001d78:	003fee06 	br	2001d34 <___vfprintf_internal_r+0x1904>
 2001d7c:	008011c4 	movi	r2,71
 2001d80:	1400be16 	blt	r2,r16,200207c <___vfprintf_internal_r+0x1c4c>
 2001d84:	03008074 	movhi	r12,513
 2001d88:	633bf004 	addi	r12,r12,-4160
 2001d8c:	db003115 	stw	r12,196(sp)
 2001d90:	00c000c4 	movi	r3,3
 2001d94:	00bfdfc4 	movi	r2,-129
 2001d98:	d8c02b15 	stw	r3,172(sp)
 2001d9c:	88a2703a 	and	r17,r17,r2
 2001da0:	dd402783 	ldbu	r21,158(sp)
 2001da4:	dcc02d15 	stw	r19,180(sp)
 2001da8:	1825883a 	mov	r18,r3
 2001dac:	d8003215 	stw	zero,200(sp)
 2001db0:	d8003415 	stw	zero,208(sp)
 2001db4:	003af106 	br	200097c <___vfprintf_internal_r+0x54c>
 2001db8:	4825883a 	mov	r18,r9
 2001dbc:	003c9306 	br	200100c <___vfprintf_internal_r+0xbdc>
 2001dc0:	db002d17 	ldw	r12,180(sp)
 2001dc4:	14c00017 	ldw	r19,0(r2)
 2001dc8:	0039883a 	mov	fp,zero
 2001dcc:	63000104 	addi	r12,r12,4
 2001dd0:	db002d15 	stw	r12,180(sp)
 2001dd4:	003c4706 	br	2000ef4 <___vfprintf_internal_r+0xac4>
 2001dd8:	00808074 	movhi	r2,513
 2001ddc:	10bbee04 	addi	r2,r2,-4168
 2001de0:	d8803115 	stw	r2,196(sp)
 2001de4:	003bf106 	br	2000dac <___vfprintf_internal_r+0x97c>
 2001de8:	b009883a 	mov	r4,r22
 2001dec:	b80b883a 	mov	r5,r23
 2001df0:	d9801e04 	addi	r6,sp,120
 2001df4:	20076f80 	call	20076f8 <__sprint_r>
 2001df8:	103a811e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 2001dfc:	dc002617 	ldw	r16,152(sp)
 2001e00:	d8c02017 	ldw	r3,128(sp)
 2001e04:	da000404 	addi	r8,sp,16
 2001e08:	003faf06 	br	2001cc8 <___vfprintf_internal_r+0x1898>
 2001e0c:	db002e17 	ldw	r12,184(sp)
 2001e10:	1805883a 	mov	r2,r3
 2001e14:	dac02d15 	stw	r11,180(sp)
 2001e18:	0319c83a 	sub	r12,zero,r12
 2001e1c:	db002e15 	stw	r12,184(sp)
 2001e20:	003a8206 	br	200082c <___vfprintf_internal_r+0x3fc>
 2001e24:	18800044 	addi	r2,r3,1
 2001e28:	8c400814 	ori	r17,r17,32
 2001e2c:	1c000047 	ldb	r16,1(r3)
 2001e30:	0039e406 	br	20005c4 <___vfprintf_internal_r+0x194>
 2001e34:	b009883a 	mov	r4,r22
 2001e38:	b80b883a 	mov	r5,r23
 2001e3c:	d9801e04 	addi	r6,sp,120
 2001e40:	20076f80 	call	20076f8 <__sprint_r>
 2001e44:	103a6e1e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 2001e48:	d8c02017 	ldw	r3,128(sp)
 2001e4c:	da000404 	addi	r8,sp,16
 2001e50:	003d0c06 	br	2001284 <___vfprintf_internal_r+0xe54>
 2001e54:	db002817 	ldw	r12,160(sp)
 2001e58:	d8c03117 	ldw	r3,196(sp)
 2001e5c:	60e5c83a 	sub	r18,r12,r3
 2001e60:	003ac106 	br	2000968 <___vfprintf_internal_r+0x538>
 2001e64:	b009883a 	mov	r4,r22
 2001e68:	b80b883a 	mov	r5,r23
 2001e6c:	d9801e04 	addi	r6,sp,120
 2001e70:	20076f80 	call	20076f8 <__sprint_r>
 2001e74:	103a621e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 2001e78:	d8c02017 	ldw	r3,128(sp)
 2001e7c:	d8801f17 	ldw	r2,124(sp)
 2001e80:	da000404 	addi	r8,sp,16
 2001e84:	db003317 	ldw	r12,204(sp)
 2001e88:	dac03117 	ldw	r11,196(sp)
 2001e8c:	10800044 	addi	r2,r2,1
 2001e90:	1b07883a 	add	r3,r3,r12
 2001e94:	42c00015 	stw	r11,0(r8)
 2001e98:	43000115 	stw	r12,4(r8)
 2001e9c:	d8c02015 	stw	r3,128(sp)
 2001ea0:	d8801f15 	stw	r2,124(sp)
 2001ea4:	010001c4 	movi	r4,7
 2001ea8:	20bb460e 	bge	r4,r2,2000bc4 <___vfprintf_internal_r+0x794>
 2001eac:	003d8506 	br	20014c4 <___vfprintf_internal_r+0x1094>
 2001eb0:	da003f15 	stw	r8,252(sp)
 2001eb4:	20003980 	call	2000398 <strlen>
 2001eb8:	1025883a 	mov	r18,r2
 2001ebc:	da003f17 	ldw	r8,252(sp)
 2001ec0:	903c540e 	bge	r18,zero,2001014 <___vfprintf_internal_r+0xbe4>
 2001ec4:	0005883a 	mov	r2,zero
 2001ec8:	003c5206 	br	2001014 <___vfprintf_internal_r+0xbe4>
 2001ecc:	01008074 	movhi	r4,513
 2001ed0:	213c0284 	addi	r4,r4,-4086
 2001ed4:	d9003615 	stw	r4,216(sp)
 2001ed8:	003adc06 	br	2000a4c <___vfprintf_internal_r+0x61c>
 2001edc:	d8802604 	addi	r2,sp,152
 2001ee0:	d8800115 	stw	r2,4(sp)
 2001ee4:	d9403717 	ldw	r5,220(sp)
 2001ee8:	d8802504 	addi	r2,sp,148
 2001eec:	d8800215 	stw	r2,8(sp)
 2001ef0:	d8802104 	addi	r2,sp,132
 2001ef4:	da400015 	stw	r9,0(sp)
 2001ef8:	d8800315 	stw	r2,12(sp)
 2001efc:	b009883a 	mov	r4,r22
 2001f00:	900d883a 	mov	r6,r18
 2001f04:	01c000c4 	movi	r7,3
 2001f08:	da003f15 	stw	r8,252(sp)
 2001f0c:	da403e15 	stw	r9,248(sp)
 2001f10:	20027b40 	call	20027b4 <_dtoa_r>
 2001f14:	da403e17 	ldw	r9,248(sp)
 2001f18:	da003f17 	ldw	r8,252(sp)
 2001f1c:	d8803115 	stw	r2,196(sp)
 2001f20:	4839883a 	mov	fp,r9
 2001f24:	dac03117 	ldw	r11,196(sp)
 2001f28:	00801184 	movi	r2,70
 2001f2c:	5f15883a 	add	r10,r11,fp
 2001f30:	a8bef01e 	bne	r21,r2,2001af4 <___vfprintf_internal_r+0x16c4>
 2001f34:	59000007 	ldb	r4,0(r11)
 2001f38:	00800c04 	movi	r2,48
 2001f3c:	2080d526 	beq	r4,r2,2002294 <___vfprintf_internal_r+0x1e64>
 2001f40:	d8c02617 	ldw	r3,152(sp)
 2001f44:	50d5883a 	add	r10,r10,r3
 2001f48:	003eea06 	br	2001af4 <___vfprintf_internal_r+0x16c4>
 2001f4c:	0025883a 	mov	r18,zero
 2001f50:	003db306 	br	2001620 <___vfprintf_internal_r+0x11f0>
 2001f54:	b009883a 	mov	r4,r22
 2001f58:	b80b883a 	mov	r5,r23
 2001f5c:	d9801e04 	addi	r6,sp,120
 2001f60:	20076f80 	call	20076f8 <__sprint_r>
 2001f64:	103a261e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 2001f68:	d8c02017 	ldw	r3,128(sp)
 2001f6c:	da000404 	addi	r8,sp,16
 2001f70:	003daa06 	br	200161c <___vfprintf_internal_r+0x11ec>
 2001f74:	b009883a 	mov	r4,r22
 2001f78:	b80b883a 	mov	r5,r23
 2001f7c:	d9801e04 	addi	r6,sp,120
 2001f80:	20076f80 	call	20076f8 <__sprint_r>
 2001f84:	103a1e1e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 2001f88:	d8802617 	ldw	r2,152(sp)
 2001f8c:	d8c02017 	ldw	r3,128(sp)
 2001f90:	da000404 	addi	r8,sp,16
 2001f94:	003e2c06 	br	2001848 <___vfprintf_internal_r+0x1418>
 2001f98:	03008074 	movhi	r12,513
 2001f9c:	633bfe84 	addi	r12,r12,-4102
 2001fa0:	db002c15 	stw	r12,176(sp)
 2001fa4:	dac02c17 	ldw	r11,176(sp)
 2001fa8:	1c07883a 	add	r3,r3,r16
 2001fac:	10800044 	addi	r2,r2,1
 2001fb0:	42c00015 	stw	r11,0(r8)
 2001fb4:	44000115 	stw	r16,4(r8)
 2001fb8:	d8c02015 	stw	r3,128(sp)
 2001fbc:	d8801f15 	stw	r2,124(sp)
 2001fc0:	010001c4 	movi	r4,7
 2001fc4:	20bfa716 	blt	r4,r2,2001e64 <___vfprintf_internal_r+0x1a34>
 2001fc8:	42000204 	addi	r8,r8,8
 2001fcc:	003fad06 	br	2001e84 <___vfprintf_internal_r+0x1a54>
 2001fd0:	00800184 	movi	r2,6
 2001fd4:	1240012e 	bgeu	r2,r9,2001fdc <___vfprintf_internal_r+0x1bac>
 2001fd8:	1013883a 	mov	r9,r2
 2001fdc:	4825883a 	mov	r18,r9
 2001fe0:	4805883a 	mov	r2,r9
 2001fe4:	4800c216 	blt	r9,zero,20022f0 <___vfprintf_internal_r+0x1ec0>
 2001fe8:	d8802b15 	stw	r2,172(sp)
 2001fec:	00808074 	movhi	r2,513
 2001ff0:	10bbfc04 	addi	r2,r2,-4112
 2001ff4:	d8803115 	stw	r2,196(sp)
 2001ff8:	dcc02d15 	stw	r19,180(sp)
 2001ffc:	d8003215 	stw	zero,200(sp)
 2002000:	d8003415 	stw	zero,208(sp)
 2002004:	0005883a 	mov	r2,zero
 2002008:	003a6306 	br	2000998 <___vfprintf_internal_r+0x568>
 200200c:	0021883a 	mov	r16,zero
 2002010:	003e1f06 	br	2001890 <___vfprintf_internal_r+0x1460>
 2002014:	b009883a 	mov	r4,r22
 2002018:	b80b883a 	mov	r5,r23
 200201c:	d9801e04 	addi	r6,sp,120
 2002020:	20076f80 	call	20076f8 <__sprint_r>
 2002024:	1039f61e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 2002028:	d8802617 	ldw	r2,152(sp)
 200202c:	db003317 	ldw	r12,204(sp)
 2002030:	d8c02017 	ldw	r3,128(sp)
 2002034:	da000404 	addi	r8,sp,16
 2002038:	6085c83a 	sub	r2,r12,r2
 200203c:	003e1306 	br	200188c <___vfprintf_internal_r+0x145c>
 2002040:	03008074 	movhi	r12,513
 2002044:	633c0284 	addi	r12,r12,-4086
 2002048:	db003615 	stw	r12,216(sp)
 200204c:	003b0206 	br	2000c58 <___vfprintf_internal_r+0x828>
 2002050:	00c00b44 	movi	r3,45
 2002054:	d8802b15 	stw	r2,172(sp)
 2002058:	dc402d17 	ldw	r17,180(sp)
 200205c:	d8c02785 	stb	r3,158(sp)
 2002060:	dcc02d15 	stw	r19,180(sp)
 2002064:	d8003215 	stw	zero,200(sp)
 2002068:	00800b44 	movi	r2,45
 200206c:	003a4706 	br	200098c <___vfprintf_internal_r+0x55c>
 2002070:	05400b44 	movi	r21,45
 2002074:	dd402785 	stb	r21,158(sp)
 2002078:	003b4706 	br	2000d98 <___vfprintf_internal_r+0x968>
 200207c:	00808074 	movhi	r2,513
 2002080:	10bbf104 	addi	r2,r2,-4156
 2002084:	d8803115 	stw	r2,196(sp)
 2002088:	003f4106 	br	2001d90 <___vfprintf_internal_r+0x1960>
 200208c:	d8c02617 	ldw	r3,152(sp)
 2002090:	00bfff44 	movi	r2,-3
 2002094:	18801116 	blt	r3,r2,20020dc <___vfprintf_internal_r+0x1cac>
 2002098:	48c01016 	blt	r9,r3,20020dc <___vfprintf_internal_r+0x1cac>
 200209c:	d8c03415 	stw	r3,208(sp)
 20020a0:	040019c4 	movi	r16,103
 20020a4:	003eb206 	br	2001b70 <___vfprintf_internal_r+0x1740>
 20020a8:	01008074 	movhi	r4,513
 20020ac:	213bfe84 	addi	r4,r4,-4102
 20020b0:	d9002c15 	stw	r4,176(sp)
 20020b4:	003cb106 	br	200137c <___vfprintf_internal_r+0xf4c>
 20020b8:	5005883a 	mov	r2,r10
 20020bc:	003ea106 	br	2001b44 <___vfprintf_internal_r+0x1714>
 20020c0:	da402b15 	stw	r9,172(sp)
 20020c4:	dd402783 	ldbu	r21,158(sp)
 20020c8:	4825883a 	mov	r18,r9
 20020cc:	dcc02d15 	stw	r19,180(sp)
 20020d0:	d8003215 	stw	zero,200(sp)
 20020d4:	d8003415 	stw	zero,208(sp)
 20020d8:	003a2806 	br	200097c <___vfprintf_internal_r+0x54c>
 20020dc:	843fff84 	addi	r16,r16,-2
 20020e0:	1f3fffc4 	addi	fp,r3,-1
 20020e4:	df002615 	stw	fp,152(sp)
 20020e8:	dc0022c5 	stb	r16,139(sp)
 20020ec:	e0009816 	blt	fp,zero,2002350 <___vfprintf_internal_r+0x1f20>
 20020f0:	00800ac4 	movi	r2,43
 20020f4:	d8802305 	stb	r2,140(sp)
 20020f8:	00800244 	movi	r2,9
 20020fc:	1700750e 	bge	r2,fp,20022d4 <___vfprintf_internal_r+0x1ea4>
 2002100:	dd4022c4 	addi	r21,sp,139
 2002104:	dc002c15 	stw	r16,176(sp)
 2002108:	4025883a 	mov	r18,r8
 200210c:	a821883a 	mov	r16,r21
 2002110:	e009883a 	mov	r4,fp
 2002114:	01400284 	movi	r5,10
 2002118:	2009fc80 	call	2009fc8 <__modsi3>
 200211c:	10800c04 	addi	r2,r2,48
 2002120:	843fffc4 	addi	r16,r16,-1
 2002124:	e009883a 	mov	r4,fp
 2002128:	01400284 	movi	r5,10
 200212c:	80800005 	stb	r2,0(r16)
 2002130:	2009f740 	call	2009f74 <__divsi3>
 2002134:	1039883a 	mov	fp,r2
 2002138:	00800244 	movi	r2,9
 200213c:	173ff416 	blt	r2,fp,2002110 <___vfprintf_internal_r+0x1ce0>
 2002140:	9011883a 	mov	r8,r18
 2002144:	e0800c04 	addi	r2,fp,48
 2002148:	8025883a 	mov	r18,r16
 200214c:	913fffc4 	addi	r4,r18,-1
 2002150:	90bfffc5 	stb	r2,-1(r18)
 2002154:	dc002c17 	ldw	r16,176(sp)
 2002158:	2540852e 	bgeu	r4,r21,2002370 <___vfprintf_internal_r+0x1f40>
 200215c:	d9402384 	addi	r5,sp,142
 2002160:	2c8bc83a 	sub	r5,r5,r18
 2002164:	d8c02344 	addi	r3,sp,141
 2002168:	a94b883a 	add	r5,r21,r5
 200216c:	00000106 	br	2002174 <___vfprintf_internal_r+0x1d44>
 2002170:	20800003 	ldbu	r2,0(r4)
 2002174:	18800005 	stb	r2,0(r3)
 2002178:	18c00044 	addi	r3,r3,1
 200217c:	21000044 	addi	r4,r4,1
 2002180:	197ffb1e 	bne	r3,r5,2002170 <___vfprintf_internal_r+0x1d40>
 2002184:	d8802304 	addi	r2,sp,140
 2002188:	1485c83a 	sub	r2,r2,r18
 200218c:	d8c02344 	addi	r3,sp,141
 2002190:	1885883a 	add	r2,r3,r2
 2002194:	dac03317 	ldw	r11,204(sp)
 2002198:	156bc83a 	sub	r21,r2,r21
 200219c:	dd403a15 	stw	r21,232(sp)
 20021a0:	00800044 	movi	r2,1
 20021a4:	5d65883a 	add	r18,r11,r21
 20021a8:	12c0660e 	bge	r2,r11,2002344 <___vfprintf_internal_r+0x1f14>
 20021ac:	94800044 	addi	r18,r18,1
 20021b0:	9005883a 	mov	r2,r18
 20021b4:	90006116 	blt	r18,zero,200233c <___vfprintf_internal_r+0x1f0c>
 20021b8:	d8003415 	stw	zero,208(sp)
 20021bc:	003e7406 	br	2001b90 <___vfprintf_internal_r+0x1760>
 20021c0:	b009883a 	mov	r4,r22
 20021c4:	b80b883a 	mov	r5,r23
 20021c8:	d9801e04 	addi	r6,sp,120
 20021cc:	20076f80 	call	20076f8 <__sprint_r>
 20021d0:	10398b1e 	bne	r2,zero,2000800 <___vfprintf_internal_r+0x3d0>
 20021d4:	dc002617 	ldw	r16,152(sp)
 20021d8:	d8c02017 	ldw	r3,128(sp)
 20021dc:	d8801f17 	ldw	r2,124(sp)
 20021e0:	da000404 	addi	r8,sp,16
 20021e4:	003ec906 	br	2001d0c <___vfprintf_internal_r+0x18dc>
 20021e8:	483e1c1e 	bne	r9,zero,2001a5c <___vfprintf_internal_r+0x162c>
 20021ec:	9013883a 	mov	r9,r18
 20021f0:	003e1a06 	br	2001a5c <___vfprintf_internal_r+0x162c>
 20021f4:	02400184 	movi	r9,6
 20021f8:	003e1806 	br	2001a5c <___vfprintf_internal_r+0x162c>
 20021fc:	d8c03417 	ldw	r3,208(sp)
 2002200:	00c04b0e 	bge	zero,r3,2002330 <___vfprintf_internal_r+0x1f00>
 2002204:	04800044 	movi	r18,1
 2002208:	dac03317 	ldw	r11,204(sp)
 200220c:	92e5883a 	add	r18,r18,r11
 2002210:	9005883a 	mov	r2,r18
 2002214:	903e5e0e 	bge	r18,zero,2001b90 <___vfprintf_internal_r+0x1760>
 2002218:	0005883a 	mov	r2,zero
 200221c:	003e5c06 	br	2001b90 <___vfprintf_internal_r+0x1760>
 2002220:	00c00b44 	movi	r3,45
 2002224:	64a0003c 	xorhi	r18,r12,32768
 2002228:	d8c02b05 	stb	r3,172(sp)
 200222c:	003e1106 	br	2001a74 <___vfprintf_internal_r+0x1644>
 2002230:	4f000044 	addi	fp,r9,1
 2002234:	003e1606 	br	2001a90 <___vfprintf_internal_r+0x1660>
 2002238:	d8c02617 	ldw	r3,152(sp)
 200223c:	d8c03415 	stw	r3,208(sp)
 2002240:	00c0350e 	bge	zero,r3,2002318 <___vfprintf_internal_r+0x1ee8>
 2002244:	4800081e 	bne	r9,zero,2002268 <___vfprintf_internal_r+0x1e38>
 2002248:	8c40004c 	andi	r17,r17,1
 200224c:	8800061e 	bne	r17,zero,2002268 <___vfprintf_internal_r+0x1e38>
 2002250:	1805883a 	mov	r2,r3
 2002254:	183e4d0e 	bge	r3,zero,2001b8c <___vfprintf_internal_r+0x175c>
 2002258:	0005883a 	mov	r2,zero
 200225c:	003e4b06 	br	2001b8c <___vfprintf_internal_r+0x175c>
 2002260:	d8802117 	ldw	r2,132(sp)
 2002264:	003e3706 	br	2001b44 <___vfprintf_internal_r+0x1714>
 2002268:	dac03417 	ldw	r11,208(sp)
 200226c:	4a400044 	addi	r9,r9,1
 2002270:	5a65883a 	add	r18,r11,r9
 2002274:	9005883a 	mov	r2,r18
 2002278:	903e450e 	bge	r18,zero,2001b90 <___vfprintf_internal_r+0x1760>
 200227c:	003fe606 	br	2002218 <___vfprintf_internal_r+0x1de8>
 2002280:	db003417 	ldw	r12,208(sp)
 2002284:	64800044 	addi	r18,r12,1
 2002288:	9005883a 	mov	r2,r18
 200228c:	903e400e 	bge	r18,zero,2001b90 <___vfprintf_internal_r+0x1760>
 2002290:	003fe106 	br	2002218 <___vfprintf_internal_r+0x1de8>
 2002294:	d9003717 	ldw	r4,220(sp)
 2002298:	900b883a 	mov	r5,r18
 200229c:	000d883a 	mov	r6,zero
 20022a0:	000f883a 	mov	r7,zero
 20022a4:	da003f15 	stw	r8,252(sp)
 20022a8:	da403e15 	stw	r9,248(sp)
 20022ac:	da803d15 	stw	r10,244(sp)
 20022b0:	200b19c0 	call	200b19c <__eqdf2>
 20022b4:	da003f17 	ldw	r8,252(sp)
 20022b8:	da403e17 	ldw	r9,248(sp)
 20022bc:	da803d17 	ldw	r10,244(sp)
 20022c0:	103f1f26 	beq	r2,zero,2001f40 <___vfprintf_internal_r+0x1b10>
 20022c4:	00800044 	movi	r2,1
 20022c8:	1707c83a 	sub	r3,r2,fp
 20022cc:	d8c02615 	stw	r3,152(sp)
 20022d0:	003f1c06 	br	2001f44 <___vfprintf_internal_r+0x1b14>
 20022d4:	00800c04 	movi	r2,48
 20022d8:	e0c00c04 	addi	r3,fp,48
 20022dc:	d8802345 	stb	r2,141(sp)
 20022e0:	d8c02385 	stb	r3,142(sp)
 20022e4:	d88023c4 	addi	r2,sp,143
 20022e8:	dd4022c4 	addi	r21,sp,139
 20022ec:	003fa906 	br	2002194 <___vfprintf_internal_r+0x1d64>
 20022f0:	0005883a 	mov	r2,zero
 20022f4:	003f3c06 	br	2001fe8 <___vfprintf_internal_r+0x1bb8>
 20022f8:	dac02d17 	ldw	r11,180(sp)
 20022fc:	5a400017 	ldw	r9,0(r11)
 2002300:	5ac00104 	addi	r11,r11,4
 2002304:	dac02d15 	stw	r11,180(sp)
 2002308:	483ec80e 	bge	r9,zero,2001e2c <___vfprintf_internal_r+0x19fc>
 200230c:	027fffc4 	movi	r9,-1
 2002310:	1c000047 	ldb	r16,1(r3)
 2002314:	0038ab06 	br	20005c4 <___vfprintf_internal_r+0x194>
 2002318:	4800111e 	bne	r9,zero,2002360 <___vfprintf_internal_r+0x1f30>
 200231c:	8c40004c 	andi	r17,r17,1
 2002320:	88000f1e 	bne	r17,zero,2002360 <___vfprintf_internal_r+0x1f30>
 2002324:	00800044 	movi	r2,1
 2002328:	1025883a 	mov	r18,r2
 200232c:	003e1806 	br	2001b90 <___vfprintf_internal_r+0x1760>
 2002330:	04800084 	movi	r18,2
 2002334:	90e5c83a 	sub	r18,r18,r3
 2002338:	003fb306 	br	2002208 <___vfprintf_internal_r+0x1dd8>
 200233c:	0005883a 	mov	r2,zero
 2002340:	003f9d06 	br	20021b8 <___vfprintf_internal_r+0x1d88>
 2002344:	88a2703a 	and	r17,r17,r2
 2002348:	883f9926 	beq	r17,zero,20021b0 <___vfprintf_internal_r+0x1d80>
 200234c:	003f9706 	br	20021ac <___vfprintf_internal_r+0x1d7c>
 2002350:	00800b44 	movi	r2,45
 2002354:	0739c83a 	sub	fp,zero,fp
 2002358:	d8802305 	stb	r2,140(sp)
 200235c:	003f6606 	br	20020f8 <___vfprintf_internal_r+0x1cc8>
 2002360:	4c800084 	addi	r18,r9,2
 2002364:	9005883a 	mov	r2,r18
 2002368:	903e090e 	bge	r18,zero,2001b90 <___vfprintf_internal_r+0x1760>
 200236c:	003faa06 	br	2002218 <___vfprintf_internal_r+0x1de8>
 2002370:	d8802344 	addi	r2,sp,141
 2002374:	003f8706 	br	2002194 <___vfprintf_internal_r+0x1d64>
 2002378:	d8c02617 	ldw	r3,152(sp)
 200237c:	003f5806 	br	20020e0 <___vfprintf_internal_r+0x1cb0>

02002380 <__vfprintf_internal>:
 2002380:	2007883a 	mov	r3,r4
 2002384:	01008074 	movhi	r4,513
 2002388:	21035704 	addi	r4,r4,3420
 200238c:	21000017 	ldw	r4,0(r4)
 2002390:	2805883a 	mov	r2,r5
 2002394:	300f883a 	mov	r7,r6
 2002398:	180b883a 	mov	r5,r3
 200239c:	100d883a 	mov	r6,r2
 20023a0:	20004301 	jmpi	2000430 <___vfprintf_internal_r>

020023a4 <__sbprintf>:
 20023a4:	2880030b 	ldhu	r2,12(r5)
 20023a8:	2ac01917 	ldw	r11,100(r5)
 20023ac:	2a80038b 	ldhu	r10,14(r5)
 20023b0:	2a400717 	ldw	r9,28(r5)
 20023b4:	2a000917 	ldw	r8,36(r5)
 20023b8:	defee204 	addi	sp,sp,-1144
 20023bc:	00c10004 	movi	r3,1024
 20023c0:	dc011a15 	stw	r16,1128(sp)
 20023c4:	10bfff4c 	andi	r2,r2,65533
 20023c8:	2821883a 	mov	r16,r5
 20023cc:	d8cb883a 	add	r5,sp,r3
 20023d0:	dc811c15 	stw	r18,1136(sp)
 20023d4:	dc411b15 	stw	r17,1132(sp)
 20023d8:	dfc11d15 	stw	ra,1140(sp)
 20023dc:	2025883a 	mov	r18,r4
 20023e0:	d881030d 	sth	r2,1036(sp)
 20023e4:	dac11915 	stw	r11,1124(sp)
 20023e8:	da81038d 	sth	r10,1038(sp)
 20023ec:	da410715 	stw	r9,1052(sp)
 20023f0:	da010915 	stw	r8,1060(sp)
 20023f4:	dec10015 	stw	sp,1024(sp)
 20023f8:	dec10415 	stw	sp,1040(sp)
 20023fc:	d8c10215 	stw	r3,1032(sp)
 2002400:	d8c10515 	stw	r3,1044(sp)
 2002404:	d8010615 	stw	zero,1048(sp)
 2002408:	20004300 	call	2000430 <___vfprintf_internal_r>
 200240c:	1023883a 	mov	r17,r2
 2002410:	10000416 	blt	r2,zero,2002424 <__sbprintf+0x80>
 2002414:	9009883a 	mov	r4,r18
 2002418:	d9410004 	addi	r5,sp,1024
 200241c:	20040e40 	call	20040e4 <_fflush_r>
 2002420:	10000d1e 	bne	r2,zero,2002458 <__sbprintf+0xb4>
 2002424:	d8c1030b 	ldhu	r3,1036(sp)
 2002428:	18c0100c 	andi	r3,r3,64
 200242c:	18000326 	beq	r3,zero,200243c <__sbprintf+0x98>
 2002430:	8080030b 	ldhu	r2,12(r16)
 2002434:	10801014 	ori	r2,r2,64
 2002438:	8080030d 	sth	r2,12(r16)
 200243c:	8805883a 	mov	r2,r17
 2002440:	dfc11d17 	ldw	ra,1140(sp)
 2002444:	dc811c17 	ldw	r18,1136(sp)
 2002448:	dc411b17 	ldw	r17,1132(sp)
 200244c:	dc011a17 	ldw	r16,1128(sp)
 2002450:	dec11e04 	addi	sp,sp,1144
 2002454:	f800283a 	ret
 2002458:	047fffc4 	movi	r17,-1
 200245c:	003ff106 	br	2002424 <__sbprintf+0x80>

02002460 <__swsetup_r>:
 2002460:	00808074 	movhi	r2,513
 2002464:	defffd04 	addi	sp,sp,-12
 2002468:	10835704 	addi	r2,r2,3420
 200246c:	dc400115 	stw	r17,4(sp)
 2002470:	2023883a 	mov	r17,r4
 2002474:	11000017 	ldw	r4,0(r2)
 2002478:	dc000015 	stw	r16,0(sp)
 200247c:	dfc00215 	stw	ra,8(sp)
 2002480:	2821883a 	mov	r16,r5
 2002484:	20000226 	beq	r4,zero,2002490 <__swsetup_r+0x30>
 2002488:	20c00e17 	ldw	r3,56(r4)
 200248c:	18003126 	beq	r3,zero,2002554 <__swsetup_r+0xf4>
 2002490:	8080030b 	ldhu	r2,12(r16)
 2002494:	10c0020c 	andi	r3,r2,8
 2002498:	100d883a 	mov	r6,r2
 200249c:	18000f26 	beq	r3,zero,20024dc <__swsetup_r+0x7c>
 20024a0:	80c00417 	ldw	r3,16(r16)
 20024a4:	18001526 	beq	r3,zero,20024fc <__swsetup_r+0x9c>
 20024a8:	1100004c 	andi	r4,r2,1
 20024ac:	20001c1e 	bne	r4,zero,2002520 <__swsetup_r+0xc0>
 20024b0:	1080008c 	andi	r2,r2,2
 20024b4:	1000291e 	bne	r2,zero,200255c <__swsetup_r+0xfc>
 20024b8:	80800517 	ldw	r2,20(r16)
 20024bc:	80800215 	stw	r2,8(r16)
 20024c0:	18001c26 	beq	r3,zero,2002534 <__swsetup_r+0xd4>
 20024c4:	0005883a 	mov	r2,zero
 20024c8:	dfc00217 	ldw	ra,8(sp)
 20024cc:	dc400117 	ldw	r17,4(sp)
 20024d0:	dc000017 	ldw	r16,0(sp)
 20024d4:	dec00304 	addi	sp,sp,12
 20024d8:	f800283a 	ret
 20024dc:	3080040c 	andi	r2,r6,16
 20024e0:	10002e26 	beq	r2,zero,200259c <__swsetup_r+0x13c>
 20024e4:	3080010c 	andi	r2,r6,4
 20024e8:	10001e1e 	bne	r2,zero,2002564 <__swsetup_r+0x104>
 20024ec:	80c00417 	ldw	r3,16(r16)
 20024f0:	30800214 	ori	r2,r6,8
 20024f4:	8080030d 	sth	r2,12(r16)
 20024f8:	183feb1e 	bne	r3,zero,20024a8 <__swsetup_r+0x48>
 20024fc:	1140a00c 	andi	r5,r2,640
 2002500:	01008004 	movi	r4,512
 2002504:	293fe826 	beq	r5,r4,20024a8 <__swsetup_r+0x48>
 2002508:	8809883a 	mov	r4,r17
 200250c:	800b883a 	mov	r5,r16
 2002510:	200504c0 	call	200504c <__smakebuf_r>
 2002514:	8080030b 	ldhu	r2,12(r16)
 2002518:	80c00417 	ldw	r3,16(r16)
 200251c:	003fe206 	br	20024a8 <__swsetup_r+0x48>
 2002520:	80800517 	ldw	r2,20(r16)
 2002524:	80000215 	stw	zero,8(r16)
 2002528:	0085c83a 	sub	r2,zero,r2
 200252c:	80800615 	stw	r2,24(r16)
 2002530:	183fe41e 	bne	r3,zero,20024c4 <__swsetup_r+0x64>
 2002534:	80c0030b 	ldhu	r3,12(r16)
 2002538:	0005883a 	mov	r2,zero
 200253c:	1900200c 	andi	r4,r3,128
 2002540:	203fe126 	beq	r4,zero,20024c8 <__swsetup_r+0x68>
 2002544:	18c01014 	ori	r3,r3,64
 2002548:	80c0030d 	sth	r3,12(r16)
 200254c:	00bfffc4 	movi	r2,-1
 2002550:	003fdd06 	br	20024c8 <__swsetup_r+0x68>
 2002554:	20044c00 	call	20044c0 <__sinit>
 2002558:	003fcd06 	br	2002490 <__swsetup_r+0x30>
 200255c:	0005883a 	mov	r2,zero
 2002560:	003fd606 	br	20024bc <__swsetup_r+0x5c>
 2002564:	81400c17 	ldw	r5,48(r16)
 2002568:	28000626 	beq	r5,zero,2002584 <__swsetup_r+0x124>
 200256c:	80801004 	addi	r2,r16,64
 2002570:	28800326 	beq	r5,r2,2002580 <__swsetup_r+0x120>
 2002574:	8809883a 	mov	r4,r17
 2002578:	20046340 	call	2004634 <_free_r>
 200257c:	8180030b 	ldhu	r6,12(r16)
 2002580:	80000c15 	stw	zero,48(r16)
 2002584:	80c00417 	ldw	r3,16(r16)
 2002588:	00bff6c4 	movi	r2,-37
 200258c:	118c703a 	and	r6,r2,r6
 2002590:	80000115 	stw	zero,4(r16)
 2002594:	80c00015 	stw	r3,0(r16)
 2002598:	003fd506 	br	20024f0 <__swsetup_r+0x90>
 200259c:	00800244 	movi	r2,9
 20025a0:	88800015 	stw	r2,0(r17)
 20025a4:	30801014 	ori	r2,r6,64
 20025a8:	8080030d 	sth	r2,12(r16)
 20025ac:	00bfffc4 	movi	r2,-1
 20025b0:	003fc506 	br	20024c8 <__swsetup_r+0x68>

020025b4 <quorem>:
 20025b4:	defff704 	addi	sp,sp,-36
 20025b8:	dc800215 	stw	r18,8(sp)
 20025bc:	20800417 	ldw	r2,16(r4)
 20025c0:	2c800417 	ldw	r18,16(r5)
 20025c4:	dfc00815 	stw	ra,32(sp)
 20025c8:	ddc00715 	stw	r23,28(sp)
 20025cc:	dd800615 	stw	r22,24(sp)
 20025d0:	dd400515 	stw	r21,20(sp)
 20025d4:	dd000415 	stw	r20,16(sp)
 20025d8:	dcc00315 	stw	r19,12(sp)
 20025dc:	dc400115 	stw	r17,4(sp)
 20025e0:	dc000015 	stw	r16,0(sp)
 20025e4:	14807116 	blt	r2,r18,20027ac <quorem+0x1f8>
 20025e8:	94bfffc4 	addi	r18,r18,-1
 20025ec:	94ad883a 	add	r22,r18,r18
 20025f0:	b5ad883a 	add	r22,r22,r22
 20025f4:	2c400504 	addi	r17,r5,20
 20025f8:	8da9883a 	add	r20,r17,r22
 20025fc:	25400504 	addi	r21,r4,20
 2002600:	282f883a 	mov	r23,r5
 2002604:	adad883a 	add	r22,r21,r22
 2002608:	a1400017 	ldw	r5,0(r20)
 200260c:	2021883a 	mov	r16,r4
 2002610:	b1000017 	ldw	r4,0(r22)
 2002614:	29400044 	addi	r5,r5,1
 2002618:	200a0240 	call	200a024 <__udivsi3>
 200261c:	1027883a 	mov	r19,r2
 2002620:	10002c26 	beq	r2,zero,20026d4 <quorem+0x120>
 2002624:	a813883a 	mov	r9,r21
 2002628:	8811883a 	mov	r8,r17
 200262c:	0009883a 	mov	r4,zero
 2002630:	000d883a 	mov	r6,zero
 2002634:	41c00017 	ldw	r7,0(r8)
 2002638:	49400017 	ldw	r5,0(r9)
 200263c:	42000104 	addi	r8,r8,4
 2002640:	38bfffcc 	andi	r2,r7,65535
 2002644:	14c5383a 	mul	r2,r2,r19
 2002648:	380ed43a 	srli	r7,r7,16
 200264c:	28ffffcc 	andi	r3,r5,65535
 2002650:	2085883a 	add	r2,r4,r2
 2002654:	1008d43a 	srli	r4,r2,16
 2002658:	3ccf383a 	mul	r7,r7,r19
 200265c:	198d883a 	add	r6,r3,r6
 2002660:	10ffffcc 	andi	r3,r2,65535
 2002664:	30c7c83a 	sub	r3,r6,r3
 2002668:	280ad43a 	srli	r5,r5,16
 200266c:	21c9883a 	add	r4,r4,r7
 2002670:	180dd43a 	srai	r6,r3,16
 2002674:	20bfffcc 	andi	r2,r4,65535
 2002678:	288bc83a 	sub	r5,r5,r2
 200267c:	298b883a 	add	r5,r5,r6
 2002680:	280e943a 	slli	r7,r5,16
 2002684:	18ffffcc 	andi	r3,r3,65535
 2002688:	2008d43a 	srli	r4,r4,16
 200268c:	38ceb03a 	or	r7,r7,r3
 2002690:	49c00015 	stw	r7,0(r9)
 2002694:	280dd43a 	srai	r6,r5,16
 2002698:	4a400104 	addi	r9,r9,4
 200269c:	a23fe52e 	bgeu	r20,r8,2002634 <quorem+0x80>
 20026a0:	b0800017 	ldw	r2,0(r22)
 20026a4:	10000b1e 	bne	r2,zero,20026d4 <quorem+0x120>
 20026a8:	b0bfff04 	addi	r2,r22,-4
 20026ac:	a880082e 	bgeu	r21,r2,20026d0 <quorem+0x11c>
 20026b0:	b0ffff17 	ldw	r3,-4(r22)
 20026b4:	18000326 	beq	r3,zero,20026c4 <quorem+0x110>
 20026b8:	00000506 	br	20026d0 <quorem+0x11c>
 20026bc:	10c00017 	ldw	r3,0(r2)
 20026c0:	1800031e 	bne	r3,zero,20026d0 <quorem+0x11c>
 20026c4:	10bfff04 	addi	r2,r2,-4
 20026c8:	94bfffc4 	addi	r18,r18,-1
 20026cc:	a8bffb36 	bltu	r21,r2,20026bc <quorem+0x108>
 20026d0:	84800415 	stw	r18,16(r16)
 20026d4:	8009883a 	mov	r4,r16
 20026d8:	b80b883a 	mov	r5,r23
 20026dc:	20067200 	call	2006720 <__mcmp>
 20026e0:	10002616 	blt	r2,zero,200277c <quorem+0x1c8>
 20026e4:	9cc00044 	addi	r19,r19,1
 20026e8:	a80d883a 	mov	r6,r21
 20026ec:	000b883a 	mov	r5,zero
 20026f0:	31000017 	ldw	r4,0(r6)
 20026f4:	88800017 	ldw	r2,0(r17)
 20026f8:	31800104 	addi	r6,r6,4
 20026fc:	20ffffcc 	andi	r3,r4,65535
 2002700:	194b883a 	add	r5,r3,r5
 2002704:	10ffffcc 	andi	r3,r2,65535
 2002708:	28c7c83a 	sub	r3,r5,r3
 200270c:	1004d43a 	srli	r2,r2,16
 2002710:	2008d43a 	srli	r4,r4,16
 2002714:	180bd43a 	srai	r5,r3,16
 2002718:	18ffffcc 	andi	r3,r3,65535
 200271c:	2089c83a 	sub	r4,r4,r2
 2002720:	2149883a 	add	r4,r4,r5
 2002724:	2004943a 	slli	r2,r4,16
 2002728:	8c400104 	addi	r17,r17,4
 200272c:	200bd43a 	srai	r5,r4,16
 2002730:	10c6b03a 	or	r3,r2,r3
 2002734:	30ffff15 	stw	r3,-4(r6)
 2002738:	a47fed2e 	bgeu	r20,r17,20026f0 <quorem+0x13c>
 200273c:	9485883a 	add	r2,r18,r18
 2002740:	1085883a 	add	r2,r2,r2
 2002744:	a887883a 	add	r3,r21,r2
 2002748:	18800017 	ldw	r2,0(r3)
 200274c:	10000b1e 	bne	r2,zero,200277c <quorem+0x1c8>
 2002750:	18bfff04 	addi	r2,r3,-4
 2002754:	a880082e 	bgeu	r21,r2,2002778 <quorem+0x1c4>
 2002758:	18ffff17 	ldw	r3,-4(r3)
 200275c:	18000326 	beq	r3,zero,200276c <quorem+0x1b8>
 2002760:	00000506 	br	2002778 <quorem+0x1c4>
 2002764:	10c00017 	ldw	r3,0(r2)
 2002768:	1800031e 	bne	r3,zero,2002778 <quorem+0x1c4>
 200276c:	10bfff04 	addi	r2,r2,-4
 2002770:	94bfffc4 	addi	r18,r18,-1
 2002774:	a8bffb36 	bltu	r21,r2,2002764 <quorem+0x1b0>
 2002778:	84800415 	stw	r18,16(r16)
 200277c:	9805883a 	mov	r2,r19
 2002780:	dfc00817 	ldw	ra,32(sp)
 2002784:	ddc00717 	ldw	r23,28(sp)
 2002788:	dd800617 	ldw	r22,24(sp)
 200278c:	dd400517 	ldw	r21,20(sp)
 2002790:	dd000417 	ldw	r20,16(sp)
 2002794:	dcc00317 	ldw	r19,12(sp)
 2002798:	dc800217 	ldw	r18,8(sp)
 200279c:	dc400117 	ldw	r17,4(sp)
 20027a0:	dc000017 	ldw	r16,0(sp)
 20027a4:	dec00904 	addi	sp,sp,36
 20027a8:	f800283a 	ret
 20027ac:	0005883a 	mov	r2,zero
 20027b0:	003ff306 	br	2002780 <quorem+0x1cc>

020027b4 <_dtoa_r>:
 20027b4:	20801017 	ldw	r2,64(r4)
 20027b8:	deffde04 	addi	sp,sp,-136
 20027bc:	dd401d15 	stw	r21,116(sp)
 20027c0:	dcc01b15 	stw	r19,108(sp)
 20027c4:	dc801a15 	stw	r18,104(sp)
 20027c8:	dc401915 	stw	r17,100(sp)
 20027cc:	dc001815 	stw	r16,96(sp)
 20027d0:	dfc02115 	stw	ra,132(sp)
 20027d4:	df002015 	stw	fp,128(sp)
 20027d8:	ddc01f15 	stw	r23,124(sp)
 20027dc:	dd801e15 	stw	r22,120(sp)
 20027e0:	dd001c15 	stw	r20,112(sp)
 20027e4:	d9c00315 	stw	r7,12(sp)
 20027e8:	2021883a 	mov	r16,r4
 20027ec:	302b883a 	mov	r21,r6
 20027f0:	2825883a 	mov	r18,r5
 20027f4:	dc402417 	ldw	r17,144(sp)
 20027f8:	3027883a 	mov	r19,r6
 20027fc:	10000826 	beq	r2,zero,2002820 <_dtoa_r+0x6c>
 2002800:	21801117 	ldw	r6,68(r4)
 2002804:	00c00044 	movi	r3,1
 2002808:	100b883a 	mov	r5,r2
 200280c:	1986983a 	sll	r3,r3,r6
 2002810:	11800115 	stw	r6,4(r2)
 2002814:	10c00215 	stw	r3,8(r2)
 2002818:	2005ef40 	call	2005ef4 <_Bfree>
 200281c:	80001015 	stw	zero,64(r16)
 2002820:	a8002d16 	blt	r21,zero,20028d8 <_dtoa_r+0x124>
 2002824:	88000015 	stw	zero,0(r17)
 2002828:	a8dffc2c 	andhi	r3,r21,32752
 200282c:	009ffc34 	movhi	r2,32752
 2002830:	18801b26 	beq	r3,r2,20028a0 <_dtoa_r+0xec>
 2002834:	9009883a 	mov	r4,r18
 2002838:	980b883a 	mov	r5,r19
 200283c:	000d883a 	mov	r6,zero
 2002840:	000f883a 	mov	r7,zero
 2002844:	200b19c0 	call	200b19c <__eqdf2>
 2002848:	10002a1e 	bne	r2,zero,20028f4 <_dtoa_r+0x140>
 200284c:	d8c02317 	ldw	r3,140(sp)
 2002850:	d9002517 	ldw	r4,148(sp)
 2002854:	00800044 	movi	r2,1
 2002858:	18800015 	stw	r2,0(r3)
 200285c:	2001a226 	beq	r4,zero,2002ee8 <_dtoa_r+0x734>
 2002860:	00808074 	movhi	r2,513
 2002864:	10bbfe44 	addi	r2,r2,-4103
 2002868:	20800015 	stw	r2,0(r4)
 200286c:	10bfffc4 	addi	r2,r2,-1
 2002870:	dfc02117 	ldw	ra,132(sp)
 2002874:	df002017 	ldw	fp,128(sp)
 2002878:	ddc01f17 	ldw	r23,124(sp)
 200287c:	dd801e17 	ldw	r22,120(sp)
 2002880:	dd401d17 	ldw	r21,116(sp)
 2002884:	dd001c17 	ldw	r20,112(sp)
 2002888:	dcc01b17 	ldw	r19,108(sp)
 200288c:	dc801a17 	ldw	r18,104(sp)
 2002890:	dc401917 	ldw	r17,100(sp)
 2002894:	dc001817 	ldw	r16,96(sp)
 2002898:	dec02204 	addi	sp,sp,136
 200289c:	f800283a 	ret
 20028a0:	d8c02317 	ldw	r3,140(sp)
 20028a4:	0089c3c4 	movi	r2,9999
 20028a8:	18800015 	stw	r2,0(r3)
 20028ac:	90017c26 	beq	r18,zero,2002ea0 <_dtoa_r+0x6ec>
 20028b0:	00808074 	movhi	r2,513
 20028b4:	10bc0a04 	addi	r2,r2,-4056
 20028b8:	d9002517 	ldw	r4,148(sp)
 20028bc:	203fec26 	beq	r4,zero,2002870 <_dtoa_r+0xbc>
 20028c0:	10c000c7 	ldb	r3,3(r2)
 20028c4:	18017d1e 	bne	r3,zero,2002ebc <_dtoa_r+0x708>
 20028c8:	10c000c4 	addi	r3,r2,3
 20028cc:	d9802517 	ldw	r6,148(sp)
 20028d0:	30c00015 	stw	r3,0(r6)
 20028d4:	003fe606 	br	2002870 <_dtoa_r+0xbc>
 20028d8:	04e00034 	movhi	r19,32768
 20028dc:	9cffffc4 	addi	r19,r19,-1
 20028e0:	00800044 	movi	r2,1
 20028e4:	ace6703a 	and	r19,r21,r19
 20028e8:	88800015 	stw	r2,0(r17)
 20028ec:	982b883a 	mov	r21,r19
 20028f0:	003fcd06 	br	2002828 <_dtoa_r+0x74>
 20028f4:	d8800204 	addi	r2,sp,8
 20028f8:	a822d53a 	srli	r17,r21,20
 20028fc:	d8800015 	stw	r2,0(sp)
 2002900:	8009883a 	mov	r4,r16
 2002904:	900b883a 	mov	r5,r18
 2002908:	980d883a 	mov	r6,r19
 200290c:	d9c00104 	addi	r7,sp,4
 2002910:	2006a940 	call	2006a94 <__d2b>
 2002914:	1039883a 	mov	fp,r2
 2002918:	88016a1e 	bne	r17,zero,2002ec4 <_dtoa_r+0x710>
 200291c:	dd000217 	ldw	r20,8(sp)
 2002920:	dc400117 	ldw	r17,4(sp)
 2002924:	00befbc4 	movi	r2,-1041
 2002928:	a463883a 	add	r17,r20,r17
 200292c:	8882ea16 	blt	r17,r2,20034d8 <_dtoa_r+0xd24>
 2002930:	00bf0384 	movi	r2,-1010
 2002934:	1445c83a 	sub	r2,r2,r17
 2002938:	89010484 	addi	r4,r17,1042
 200293c:	a8aa983a 	sll	r21,r21,r2
 2002940:	9108d83a 	srl	r4,r18,r4
 2002944:	a908b03a 	or	r4,r21,r4
 2002948:	200c52c0 	call	200c52c <__floatunsidf>
 200294c:	017f8434 	movhi	r5,65040
 2002950:	01800044 	movi	r6,1
 2002954:	1009883a 	mov	r4,r2
 2002958:	194b883a 	add	r5,r3,r5
 200295c:	8c7fffc4 	addi	r17,r17,-1
 2002960:	d9800f15 	stw	r6,60(sp)
 2002964:	000d883a 	mov	r6,zero
 2002968:	01cffe34 	movhi	r7,16376
 200296c:	200bb040 	call	200bb04 <__subdf3>
 2002970:	0198dbf4 	movhi	r6,25455
 2002974:	01cff4f4 	movhi	r7,16339
 2002978:	1009883a 	mov	r4,r2
 200297c:	180b883a 	mov	r5,r3
 2002980:	3190d844 	addi	r6,r6,17249
 2002984:	39e1e9c4 	addi	r7,r7,-30809
 2002988:	200b3e00 	call	200b3e0 <__muldf3>
 200298c:	01a2d874 	movhi	r6,35681
 2002990:	01cff1f4 	movhi	r7,16327
 2002994:	180b883a 	mov	r5,r3
 2002998:	31b22cc4 	addi	r6,r6,-14157
 200299c:	39e28a04 	addi	r7,r7,-30168
 20029a0:	1009883a 	mov	r4,r2
 20029a4:	200a0340 	call	200a034 <__adddf3>
 20029a8:	8809883a 	mov	r4,r17
 20029ac:	102d883a 	mov	r22,r2
 20029b0:	182b883a 	mov	r21,r3
 20029b4:	200c45c0 	call	200c45c <__floatsidf>
 20029b8:	019427f4 	movhi	r6,20639
 20029bc:	01cff4f4 	movhi	r7,16339
 20029c0:	1009883a 	mov	r4,r2
 20029c4:	180b883a 	mov	r5,r3
 20029c8:	319e7ec4 	addi	r6,r6,31227
 20029cc:	39d104c4 	addi	r7,r7,17427
 20029d0:	200b3e00 	call	200b3e0 <__muldf3>
 20029d4:	b009883a 	mov	r4,r22
 20029d8:	a80b883a 	mov	r5,r21
 20029dc:	100d883a 	mov	r6,r2
 20029e0:	180f883a 	mov	r7,r3
 20029e4:	200a0340 	call	200a034 <__adddf3>
 20029e8:	1009883a 	mov	r4,r2
 20029ec:	180b883a 	mov	r5,r3
 20029f0:	102d883a 	mov	r22,r2
 20029f4:	182b883a 	mov	r21,r3
 20029f8:	200c3d40 	call	200c3d4 <__fixdfsi>
 20029fc:	b009883a 	mov	r4,r22
 2002a00:	a80b883a 	mov	r5,r21
 2002a04:	000d883a 	mov	r6,zero
 2002a08:	000f883a 	mov	r7,zero
 2002a0c:	d8800515 	stw	r2,20(sp)
 2002a10:	200b3000 	call	200b300 <__ledf2>
 2002a14:	10023116 	blt	r2,zero,20032dc <_dtoa_r+0xb28>
 2002a18:	d8c00517 	ldw	r3,20(sp)
 2002a1c:	00800584 	movi	r2,22
 2002a20:	10c21f36 	bltu	r2,r3,20032a0 <_dtoa_r+0xaec>
 2002a24:	180490fa 	slli	r2,r3,3
 2002a28:	00c08074 	movhi	r3,513
 2002a2c:	18fc2604 	addi	r3,r3,-3944
 2002a30:	1885883a 	add	r2,r3,r2
 2002a34:	11000017 	ldw	r4,0(r2)
 2002a38:	11400117 	ldw	r5,4(r2)
 2002a3c:	900d883a 	mov	r6,r18
 2002a40:	980f883a 	mov	r7,r19
 2002a44:	200b2200 	call	200b220 <__gedf2>
 2002a48:	0082a70e 	bge	zero,r2,20034e8 <_dtoa_r+0xd34>
 2002a4c:	d9000517 	ldw	r4,20(sp)
 2002a50:	d8000d15 	stw	zero,52(sp)
 2002a54:	213fffc4 	addi	r4,r4,-1
 2002a58:	d9000515 	stw	r4,20(sp)
 2002a5c:	a463c83a 	sub	r17,r20,r17
 2002a60:	8dbfffc4 	addi	r22,r17,-1
 2002a64:	b0021916 	blt	r22,zero,20032cc <_dtoa_r+0xb18>
 2002a68:	d8000815 	stw	zero,32(sp)
 2002a6c:	d8800517 	ldw	r2,20(sp)
 2002a70:	10020e16 	blt	r2,zero,20032ac <_dtoa_r+0xaf8>
 2002a74:	b0ad883a 	add	r22,r22,r2
 2002a78:	d8800a15 	stw	r2,40(sp)
 2002a7c:	d8000915 	stw	zero,36(sp)
 2002a80:	d8c00317 	ldw	r3,12(sp)
 2002a84:	00800244 	movi	r2,9
 2002a88:	10c11a36 	bltu	r2,r3,2002ef4 <_dtoa_r+0x740>
 2002a8c:	00800144 	movi	r2,5
 2002a90:	10c4fc0e 	bge	r2,r3,2003e84 <_dtoa_r+0x16d0>
 2002a94:	18ffff04 	addi	r3,r3,-4
 2002a98:	d8c00315 	stw	r3,12(sp)
 2002a9c:	0029883a 	mov	r20,zero
 2002aa0:	d9800317 	ldw	r6,12(sp)
 2002aa4:	008000c4 	movi	r2,3
 2002aa8:	3083bd26 	beq	r6,r2,20039a0 <_dtoa_r+0x11ec>
 2002aac:	1183670e 	bge	r2,r6,200384c <_dtoa_r+0x1098>
 2002ab0:	d8c00317 	ldw	r3,12(sp)
 2002ab4:	00800104 	movi	r2,4
 2002ab8:	1882e726 	beq	r3,r2,2003658 <_dtoa_r+0xea4>
 2002abc:	00800144 	movi	r2,5
 2002ac0:	1884f21e 	bne	r3,r2,2003e8c <_dtoa_r+0x16d8>
 2002ac4:	00800044 	movi	r2,1
 2002ac8:	d8800b15 	stw	r2,44(sp)
 2002acc:	d8c02217 	ldw	r3,136(sp)
 2002ad0:	d9000517 	ldw	r4,20(sp)
 2002ad4:	1907883a 	add	r3,r3,r4
 2002ad8:	19800044 	addi	r6,r3,1
 2002adc:	d8c00c15 	stw	r3,48(sp)
 2002ae0:	d9800615 	stw	r6,24(sp)
 2002ae4:	0183c30e 	bge	zero,r6,20039f4 <_dtoa_r+0x1240>
 2002ae8:	d9800617 	ldw	r6,24(sp)
 2002aec:	3023883a 	mov	r17,r6
 2002af0:	80001115 	stw	zero,68(r16)
 2002af4:	008005c4 	movi	r2,23
 2002af8:	1184f62e 	bgeu	r2,r6,2003ed4 <_dtoa_r+0x1720>
 2002afc:	00c00044 	movi	r3,1
 2002b00:	00800104 	movi	r2,4
 2002b04:	1085883a 	add	r2,r2,r2
 2002b08:	11000504 	addi	r4,r2,20
 2002b0c:	180b883a 	mov	r5,r3
 2002b10:	18c00044 	addi	r3,r3,1
 2002b14:	313ffb2e 	bgeu	r6,r4,2002b04 <_dtoa_r+0x350>
 2002b18:	81401115 	stw	r5,68(r16)
 2002b1c:	8009883a 	mov	r4,r16
 2002b20:	2005e4c0 	call	2005e4c <_Balloc>
 2002b24:	d8800715 	stw	r2,28(sp)
 2002b28:	80801015 	stw	r2,64(r16)
 2002b2c:	00800384 	movi	r2,14
 2002b30:	1440fd36 	bltu	r2,r17,2002f28 <_dtoa_r+0x774>
 2002b34:	a000fc26 	beq	r20,zero,2002f28 <_dtoa_r+0x774>
 2002b38:	d8800517 	ldw	r2,20(sp)
 2002b3c:	0083b90e 	bge	zero,r2,2003a24 <_dtoa_r+0x1270>
 2002b40:	d8c00517 	ldw	r3,20(sp)
 2002b44:	108003cc 	andi	r2,r2,15
 2002b48:	100490fa 	slli	r2,r2,3
 2002b4c:	182fd13a 	srai	r23,r3,4
 2002b50:	00c08074 	movhi	r3,513
 2002b54:	18fc2604 	addi	r3,r3,-3944
 2002b58:	1885883a 	add	r2,r3,r2
 2002b5c:	b8c0040c 	andi	r3,r23,16
 2002b60:	12c00017 	ldw	r11,0(r2)
 2002b64:	12800117 	ldw	r10,4(r2)
 2002b68:	18039726 	beq	r3,zero,20039c8 <_dtoa_r+0x1214>
 2002b6c:	00808074 	movhi	r2,513
 2002b70:	10bc1c04 	addi	r2,r2,-3984
 2002b74:	11800817 	ldw	r6,32(r2)
 2002b78:	11c00917 	ldw	r7,36(r2)
 2002b7c:	9009883a 	mov	r4,r18
 2002b80:	980b883a 	mov	r5,r19
 2002b84:	da801615 	stw	r10,88(sp)
 2002b88:	dac01515 	stw	r11,84(sp)
 2002b8c:	200a8d00 	call	200a8d0 <__divdf3>
 2002b90:	da801617 	ldw	r10,88(sp)
 2002b94:	dac01517 	ldw	r11,84(sp)
 2002b98:	bdc003cc 	andi	r23,r23,15
 2002b9c:	044000c4 	movi	r17,3
 2002ba0:	d8800e15 	stw	r2,56(sp)
 2002ba4:	182b883a 	mov	r21,r3
 2002ba8:	b8001126 	beq	r23,zero,2002bf0 <_dtoa_r+0x43c>
 2002bac:	05008074 	movhi	r20,513
 2002bb0:	a53c1c04 	addi	r20,r20,-3984
 2002bb4:	5805883a 	mov	r2,r11
 2002bb8:	5007883a 	mov	r3,r10
 2002bbc:	b980004c 	andi	r6,r23,1
 2002bc0:	1009883a 	mov	r4,r2
 2002bc4:	b82fd07a 	srai	r23,r23,1
 2002bc8:	180b883a 	mov	r5,r3
 2002bcc:	30000426 	beq	r6,zero,2002be0 <_dtoa_r+0x42c>
 2002bd0:	a1800017 	ldw	r6,0(r20)
 2002bd4:	a1c00117 	ldw	r7,4(r20)
 2002bd8:	8c400044 	addi	r17,r17,1
 2002bdc:	200b3e00 	call	200b3e0 <__muldf3>
 2002be0:	a5000204 	addi	r20,r20,8
 2002be4:	b83ff51e 	bne	r23,zero,2002bbc <_dtoa_r+0x408>
 2002be8:	1017883a 	mov	r11,r2
 2002bec:	1815883a 	mov	r10,r3
 2002bf0:	d9000e17 	ldw	r4,56(sp)
 2002bf4:	a80b883a 	mov	r5,r21
 2002bf8:	580d883a 	mov	r6,r11
 2002bfc:	500f883a 	mov	r7,r10
 2002c00:	200a8d00 	call	200a8d0 <__divdf3>
 2002c04:	1029883a 	mov	r20,r2
 2002c08:	182b883a 	mov	r21,r3
 2002c0c:	d9800d17 	ldw	r6,52(sp)
 2002c10:	30000626 	beq	r6,zero,2002c2c <_dtoa_r+0x478>
 2002c14:	a009883a 	mov	r4,r20
 2002c18:	a80b883a 	mov	r5,r21
 2002c1c:	000d883a 	mov	r6,zero
 2002c20:	01cffc34 	movhi	r7,16368
 2002c24:	200b3000 	call	200b300 <__ledf2>
 2002c28:	10043216 	blt	r2,zero,2003cf4 <_dtoa_r+0x1540>
 2002c2c:	8809883a 	mov	r4,r17
 2002c30:	200c45c0 	call	200c45c <__floatsidf>
 2002c34:	1009883a 	mov	r4,r2
 2002c38:	180b883a 	mov	r5,r3
 2002c3c:	a00d883a 	mov	r6,r20
 2002c40:	a80f883a 	mov	r7,r21
 2002c44:	200b3e00 	call	200b3e0 <__muldf3>
 2002c48:	000d883a 	mov	r6,zero
 2002c4c:	1009883a 	mov	r4,r2
 2002c50:	180b883a 	mov	r5,r3
 2002c54:	01d00734 	movhi	r7,16412
 2002c58:	200a0340 	call	200a034 <__adddf3>
 2002c5c:	1023883a 	mov	r17,r2
 2002c60:	d9800617 	ldw	r6,24(sp)
 2002c64:	00bf3034 	movhi	r2,64704
 2002c68:	1885883a 	add	r2,r3,r2
 2002c6c:	d8800e15 	stw	r2,56(sp)
 2002c70:	30032e26 	beq	r6,zero,200392c <_dtoa_r+0x1178>
 2002c74:	d8c00517 	ldw	r3,20(sp)
 2002c78:	da800617 	ldw	r10,24(sp)
 2002c7c:	d8c01215 	stw	r3,72(sp)
 2002c80:	d9000b17 	ldw	r4,44(sp)
 2002c84:	2003b026 	beq	r4,zero,2003b48 <_dtoa_r+0x1394>
 2002c88:	50bfffc4 	addi	r2,r10,-1
 2002c8c:	100490fa 	slli	r2,r2,3
 2002c90:	00c08074 	movhi	r3,513
 2002c94:	18fc2604 	addi	r3,r3,-3944
 2002c98:	1885883a 	add	r2,r3,r2
 2002c9c:	11800017 	ldw	r6,0(r2)
 2002ca0:	11c00117 	ldw	r7,4(r2)
 2002ca4:	d8800717 	ldw	r2,28(sp)
 2002ca8:	0009883a 	mov	r4,zero
 2002cac:	014ff834 	movhi	r5,16352
 2002cb0:	da801615 	stw	r10,88(sp)
 2002cb4:	15c00044 	addi	r23,r2,1
 2002cb8:	200a8d00 	call	200a8d0 <__divdf3>
 2002cbc:	d9c00e17 	ldw	r7,56(sp)
 2002cc0:	880d883a 	mov	r6,r17
 2002cc4:	1009883a 	mov	r4,r2
 2002cc8:	180b883a 	mov	r5,r3
 2002ccc:	200bb040 	call	200bb04 <__subdf3>
 2002cd0:	a80b883a 	mov	r5,r21
 2002cd4:	a009883a 	mov	r4,r20
 2002cd8:	d8c01015 	stw	r3,64(sp)
 2002cdc:	d8800e15 	stw	r2,56(sp)
 2002ce0:	200c3d40 	call	200c3d4 <__fixdfsi>
 2002ce4:	1009883a 	mov	r4,r2
 2002ce8:	d8801715 	stw	r2,92(sp)
 2002cec:	200c45c0 	call	200c45c <__floatsidf>
 2002cf0:	a009883a 	mov	r4,r20
 2002cf4:	a80b883a 	mov	r5,r21
 2002cf8:	100d883a 	mov	r6,r2
 2002cfc:	180f883a 	mov	r7,r3
 2002d00:	200bb040 	call	200bb04 <__subdf3>
 2002d04:	da001717 	ldw	r8,92(sp)
 2002d08:	1829883a 	mov	r20,r3
 2002d0c:	d8c00717 	ldw	r3,28(sp)
 2002d10:	d9000e17 	ldw	r4,56(sp)
 2002d14:	d9401017 	ldw	r5,64(sp)
 2002d18:	42000c04 	addi	r8,r8,48
 2002d1c:	1023883a 	mov	r17,r2
 2002d20:	1a000005 	stb	r8,0(r3)
 2002d24:	880d883a 	mov	r6,r17
 2002d28:	a00f883a 	mov	r7,r20
 2002d2c:	402b883a 	mov	r21,r8
 2002d30:	200b2200 	call	200b220 <__gedf2>
 2002d34:	00844516 	blt	zero,r2,2003e4c <_dtoa_r+0x1698>
 2002d38:	0009883a 	mov	r4,zero
 2002d3c:	014ffc34 	movhi	r5,16368
 2002d40:	880d883a 	mov	r6,r17
 2002d44:	a00f883a 	mov	r7,r20
 2002d48:	200bb040 	call	200bb04 <__subdf3>
 2002d4c:	d9000e17 	ldw	r4,56(sp)
 2002d50:	d9401017 	ldw	r5,64(sp)
 2002d54:	100d883a 	mov	r6,r2
 2002d58:	180f883a 	mov	r7,r3
 2002d5c:	200b2200 	call	200b220 <__gedf2>
 2002d60:	da801617 	ldw	r10,88(sp)
 2002d64:	00843616 	blt	zero,r2,2003e40 <_dtoa_r+0x168c>
 2002d68:	00800044 	movi	r2,1
 2002d6c:	12806e0e 	bge	r2,r10,2002f28 <_dtoa_r+0x774>
 2002d70:	d9000717 	ldw	r4,28(sp)
 2002d74:	dd801315 	stw	r22,76(sp)
 2002d78:	dc001115 	stw	r16,68(sp)
 2002d7c:	2295883a 	add	r10,r4,r10
 2002d80:	dcc01415 	stw	r19,80(sp)
 2002d84:	502d883a 	mov	r22,r10
 2002d88:	dcc01017 	ldw	r19,64(sp)
 2002d8c:	b821883a 	mov	r16,r23
 2002d90:	dc801015 	stw	r18,64(sp)
 2002d94:	dc800e17 	ldw	r18,56(sp)
 2002d98:	00000906 	br	2002dc0 <_dtoa_r+0x60c>
 2002d9c:	200bb040 	call	200bb04 <__subdf3>
 2002da0:	1009883a 	mov	r4,r2
 2002da4:	180b883a 	mov	r5,r3
 2002da8:	900d883a 	mov	r6,r18
 2002dac:	980f883a 	mov	r7,r19
 2002db0:	200b3000 	call	200b300 <__ledf2>
 2002db4:	10040e16 	blt	r2,zero,2003df0 <_dtoa_r+0x163c>
 2002db8:	b821883a 	mov	r16,r23
 2002dbc:	bd841026 	beq	r23,r22,2003e00 <_dtoa_r+0x164c>
 2002dc0:	9009883a 	mov	r4,r18
 2002dc4:	980b883a 	mov	r5,r19
 2002dc8:	000d883a 	mov	r6,zero
 2002dcc:	01d00934 	movhi	r7,16420
 2002dd0:	200b3e00 	call	200b3e0 <__muldf3>
 2002dd4:	000d883a 	mov	r6,zero
 2002dd8:	01d00934 	movhi	r7,16420
 2002ddc:	8809883a 	mov	r4,r17
 2002de0:	a00b883a 	mov	r5,r20
 2002de4:	1025883a 	mov	r18,r2
 2002de8:	1827883a 	mov	r19,r3
 2002dec:	200b3e00 	call	200b3e0 <__muldf3>
 2002df0:	180b883a 	mov	r5,r3
 2002df4:	1009883a 	mov	r4,r2
 2002df8:	1823883a 	mov	r17,r3
 2002dfc:	1029883a 	mov	r20,r2
 2002e00:	200c3d40 	call	200c3d4 <__fixdfsi>
 2002e04:	1009883a 	mov	r4,r2
 2002e08:	102b883a 	mov	r21,r2
 2002e0c:	200c45c0 	call	200c45c <__floatsidf>
 2002e10:	a009883a 	mov	r4,r20
 2002e14:	880b883a 	mov	r5,r17
 2002e18:	100d883a 	mov	r6,r2
 2002e1c:	180f883a 	mov	r7,r3
 2002e20:	200bb040 	call	200bb04 <__subdf3>
 2002e24:	ad400c04 	addi	r21,r21,48
 2002e28:	1009883a 	mov	r4,r2
 2002e2c:	180b883a 	mov	r5,r3
 2002e30:	900d883a 	mov	r6,r18
 2002e34:	980f883a 	mov	r7,r19
 2002e38:	85400005 	stb	r21,0(r16)
 2002e3c:	1023883a 	mov	r17,r2
 2002e40:	1829883a 	mov	r20,r3
 2002e44:	200b3000 	call	200b300 <__ledf2>
 2002e48:	bdc00044 	addi	r23,r23,1
 2002e4c:	0009883a 	mov	r4,zero
 2002e50:	014ffc34 	movhi	r5,16368
 2002e54:	880d883a 	mov	r6,r17
 2002e58:	a00f883a 	mov	r7,r20
 2002e5c:	103fcf0e 	bge	r2,zero,2002d9c <_dtoa_r+0x5e8>
 2002e60:	d9801217 	ldw	r6,72(sp)
 2002e64:	dc001117 	ldw	r16,68(sp)
 2002e68:	d9800515 	stw	r6,20(sp)
 2002e6c:	8009883a 	mov	r4,r16
 2002e70:	e00b883a 	mov	r5,fp
 2002e74:	2005ef40 	call	2005ef4 <_Bfree>
 2002e78:	d8c00517 	ldw	r3,20(sp)
 2002e7c:	d9002317 	ldw	r4,140(sp)
 2002e80:	d9802517 	ldw	r6,148(sp)
 2002e84:	b8000005 	stb	zero,0(r23)
 2002e88:	18800044 	addi	r2,r3,1
 2002e8c:	20800015 	stw	r2,0(r4)
 2002e90:	30027226 	beq	r6,zero,200385c <_dtoa_r+0x10a8>
 2002e94:	35c00015 	stw	r23,0(r6)
 2002e98:	d8800717 	ldw	r2,28(sp)
 2002e9c:	003e7406 	br	2002870 <_dtoa_r+0xbc>
 2002ea0:	00800434 	movhi	r2,16
 2002ea4:	10bfffc4 	addi	r2,r2,-1
 2002ea8:	a8aa703a 	and	r21,r21,r2
 2002eac:	a83e801e 	bne	r21,zero,20028b0 <_dtoa_r+0xfc>
 2002eb0:	00808074 	movhi	r2,513
 2002eb4:	10bc0704 	addi	r2,r2,-4068
 2002eb8:	003e7f06 	br	20028b8 <_dtoa_r+0x104>
 2002ebc:	10c00204 	addi	r3,r2,8
 2002ec0:	003e8206 	br	20028cc <_dtoa_r+0x118>
 2002ec4:	01400434 	movhi	r5,16
 2002ec8:	297fffc4 	addi	r5,r5,-1
 2002ecc:	994a703a 	and	r5,r19,r5
 2002ed0:	9009883a 	mov	r4,r18
 2002ed4:	8c7f0044 	addi	r17,r17,-1023
 2002ed8:	294ffc34 	orhi	r5,r5,16368
 2002edc:	dd000217 	ldw	r20,8(sp)
 2002ee0:	d8000f15 	stw	zero,60(sp)
 2002ee4:	003e9f06 	br	2002964 <_dtoa_r+0x1b0>
 2002ee8:	00808074 	movhi	r2,513
 2002eec:	10bbfe04 	addi	r2,r2,-4104
 2002ef0:	003e5f06 	br	2002870 <_dtoa_r+0xbc>
 2002ef4:	80001115 	stw	zero,68(r16)
 2002ef8:	8009883a 	mov	r4,r16
 2002efc:	000b883a 	mov	r5,zero
 2002f00:	2005e4c0 	call	2005e4c <_Balloc>
 2002f04:	01bfffc4 	movi	r6,-1
 2002f08:	d8800715 	stw	r2,28(sp)
 2002f0c:	80801015 	stw	r2,64(r16)
 2002f10:	00800044 	movi	r2,1
 2002f14:	d9800c15 	stw	r6,48(sp)
 2002f18:	d8800b15 	stw	r2,44(sp)
 2002f1c:	d9800615 	stw	r6,24(sp)
 2002f20:	d8002215 	stw	zero,136(sp)
 2002f24:	d8000315 	stw	zero,12(sp)
 2002f28:	d8800117 	ldw	r2,4(sp)
 2002f2c:	10008e16 	blt	r2,zero,2003168 <_dtoa_r+0x9b4>
 2002f30:	d9000517 	ldw	r4,20(sp)
 2002f34:	00c00384 	movi	r3,14
 2002f38:	19008b16 	blt	r3,r4,2003168 <_dtoa_r+0x9b4>
 2002f3c:	200490fa 	slli	r2,r4,3
 2002f40:	00c08074 	movhi	r3,513
 2002f44:	d9802217 	ldw	r6,136(sp)
 2002f48:	18fc2604 	addi	r3,r3,-3944
 2002f4c:	1885883a 	add	r2,r3,r2
 2002f50:	14400017 	ldw	r17,0(r2)
 2002f54:	15000117 	ldw	r20,4(r2)
 2002f58:	3001c716 	blt	r6,zero,2003678 <_dtoa_r+0xec4>
 2002f5c:	880d883a 	mov	r6,r17
 2002f60:	a00f883a 	mov	r7,r20
 2002f64:	9009883a 	mov	r4,r18
 2002f68:	980b883a 	mov	r5,r19
 2002f6c:	200a8d00 	call	200a8d0 <__divdf3>
 2002f70:	180b883a 	mov	r5,r3
 2002f74:	1009883a 	mov	r4,r2
 2002f78:	200c3d40 	call	200c3d4 <__fixdfsi>
 2002f7c:	1009883a 	mov	r4,r2
 2002f80:	102d883a 	mov	r22,r2
 2002f84:	200c45c0 	call	200c45c <__floatsidf>
 2002f88:	1009883a 	mov	r4,r2
 2002f8c:	180b883a 	mov	r5,r3
 2002f90:	880d883a 	mov	r6,r17
 2002f94:	a00f883a 	mov	r7,r20
 2002f98:	200b3e00 	call	200b3e0 <__muldf3>
 2002f9c:	9009883a 	mov	r4,r18
 2002fa0:	980b883a 	mov	r5,r19
 2002fa4:	100d883a 	mov	r6,r2
 2002fa8:	180f883a 	mov	r7,r3
 2002fac:	200bb040 	call	200bb04 <__subdf3>
 2002fb0:	d9000717 	ldw	r4,28(sp)
 2002fb4:	d9800617 	ldw	r6,24(sp)
 2002fb8:	180b883a 	mov	r5,r3
 2002fbc:	b0c00c04 	addi	r3,r22,48
 2002fc0:	20c00005 	stb	r3,0(r4)
 2002fc4:	25c00044 	addi	r23,r4,1
 2002fc8:	01000044 	movi	r4,1
 2002fcc:	1011883a 	mov	r8,r2
 2002fd0:	2807883a 	mov	r3,r5
 2002fd4:	31003d26 	beq	r6,r4,20030cc <_dtoa_r+0x918>
 2002fd8:	000d883a 	mov	r6,zero
 2002fdc:	01d00934 	movhi	r7,16420
 2002fe0:	1009883a 	mov	r4,r2
 2002fe4:	200b3e00 	call	200b3e0 <__muldf3>
 2002fe8:	1009883a 	mov	r4,r2
 2002fec:	180b883a 	mov	r5,r3
 2002ff0:	000d883a 	mov	r6,zero
 2002ff4:	000f883a 	mov	r7,zero
 2002ff8:	1027883a 	mov	r19,r2
 2002ffc:	182b883a 	mov	r21,r3
 2003000:	200b19c0 	call	200b19c <__eqdf2>
 2003004:	103f9926 	beq	r2,zero,2002e6c <_dtoa_r+0x6b8>
 2003008:	d8c00617 	ldw	r3,24(sp)
 200300c:	d9000717 	ldw	r4,28(sp)
 2003010:	b825883a 	mov	r18,r23
 2003014:	18bfffc4 	addi	r2,r3,-1
 2003018:	20ad883a 	add	r22,r4,r2
 200301c:	dc000315 	stw	r16,12(sp)
 2003020:	00000a06 	br	200304c <_dtoa_r+0x898>
 2003024:	200b3e00 	call	200b3e0 <__muldf3>
 2003028:	1009883a 	mov	r4,r2
 200302c:	180b883a 	mov	r5,r3
 2003030:	000d883a 	mov	r6,zero
 2003034:	000f883a 	mov	r7,zero
 2003038:	1027883a 	mov	r19,r2
 200303c:	182b883a 	mov	r21,r3
 2003040:	b825883a 	mov	r18,r23
 2003044:	200b19c0 	call	200b19c <__eqdf2>
 2003048:	10022626 	beq	r2,zero,20038e4 <_dtoa_r+0x1130>
 200304c:	880d883a 	mov	r6,r17
 2003050:	a00f883a 	mov	r7,r20
 2003054:	9809883a 	mov	r4,r19
 2003058:	a80b883a 	mov	r5,r21
 200305c:	200a8d00 	call	200a8d0 <__divdf3>
 2003060:	180b883a 	mov	r5,r3
 2003064:	1009883a 	mov	r4,r2
 2003068:	200c3d40 	call	200c3d4 <__fixdfsi>
 200306c:	1009883a 	mov	r4,r2
 2003070:	1021883a 	mov	r16,r2
 2003074:	200c45c0 	call	200c45c <__floatsidf>
 2003078:	1009883a 	mov	r4,r2
 200307c:	180b883a 	mov	r5,r3
 2003080:	880d883a 	mov	r6,r17
 2003084:	a00f883a 	mov	r7,r20
 2003088:	200b3e00 	call	200b3e0 <__muldf3>
 200308c:	9809883a 	mov	r4,r19
 2003090:	a80b883a 	mov	r5,r21
 2003094:	100d883a 	mov	r6,r2
 2003098:	180f883a 	mov	r7,r3
 200309c:	200bb040 	call	200bb04 <__subdf3>
 20030a0:	82000c04 	addi	r8,r16,48
 20030a4:	92000005 	stb	r8,0(r18)
 20030a8:	1009883a 	mov	r4,r2
 20030ac:	180b883a 	mov	r5,r3
 20030b0:	000d883a 	mov	r6,zero
 20030b4:	01d00934 	movhi	r7,16420
 20030b8:	1011883a 	mov	r8,r2
 20030bc:	bdc00044 	addi	r23,r23,1
 20030c0:	95bfd81e 	bne	r18,r22,2003024 <_dtoa_r+0x870>
 20030c4:	802d883a 	mov	r22,r16
 20030c8:	dc000317 	ldw	r16,12(sp)
 20030cc:	4009883a 	mov	r4,r8
 20030d0:	180b883a 	mov	r5,r3
 20030d4:	400d883a 	mov	r6,r8
 20030d8:	180f883a 	mov	r7,r3
 20030dc:	200a0340 	call	200a034 <__adddf3>
 20030e0:	8809883a 	mov	r4,r17
 20030e4:	a00b883a 	mov	r5,r20
 20030e8:	100d883a 	mov	r6,r2
 20030ec:	180f883a 	mov	r7,r3
 20030f0:	1027883a 	mov	r19,r2
 20030f4:	1825883a 	mov	r18,r3
 20030f8:	200b3000 	call	200b300 <__ledf2>
 20030fc:	10000816 	blt	r2,zero,2003120 <_dtoa_r+0x96c>
 2003100:	8809883a 	mov	r4,r17
 2003104:	a00b883a 	mov	r5,r20
 2003108:	980d883a 	mov	r6,r19
 200310c:	900f883a 	mov	r7,r18
 2003110:	200b19c0 	call	200b19c <__eqdf2>
 2003114:	103f551e 	bne	r2,zero,2002e6c <_dtoa_r+0x6b8>
 2003118:	b580004c 	andi	r22,r22,1
 200311c:	b03f5326 	beq	r22,zero,2002e6c <_dtoa_r+0x6b8>
 2003120:	bd7fffc3 	ldbu	r21,-1(r23)
 2003124:	b8bfffc4 	addi	r2,r23,-1
 2003128:	1007883a 	mov	r3,r2
 200312c:	01400e44 	movi	r5,57
 2003130:	d9800717 	ldw	r6,28(sp)
 2003134:	00000506 	br	200314c <_dtoa_r+0x998>
 2003138:	18ffffc4 	addi	r3,r3,-1
 200313c:	30825e26 	beq	r6,r2,2003ab8 <_dtoa_r+0x1304>
 2003140:	1d400003 	ldbu	r21,0(r3)
 2003144:	102f883a 	mov	r23,r2
 2003148:	10bfffc4 	addi	r2,r2,-1
 200314c:	a9003fcc 	andi	r4,r21,255
 2003150:	2100201c 	xori	r4,r4,128
 2003154:	213fe004 	addi	r4,r4,-128
 2003158:	217ff726 	beq	r4,r5,2003138 <_dtoa_r+0x984>
 200315c:	aa000044 	addi	r8,r21,1
 2003160:	12000005 	stb	r8,0(r2)
 2003164:	003f4106 	br	2002e6c <_dtoa_r+0x6b8>
 2003168:	d8c00b17 	ldw	r3,44(sp)
 200316c:	18006726 	beq	r3,zero,200330c <_dtoa_r+0xb58>
 2003170:	d9000317 	ldw	r4,12(sp)
 2003174:	00c00044 	movi	r3,1
 2003178:	19016a0e 	bge	r3,r4,2003724 <_dtoa_r+0xf70>
 200317c:	d8800617 	ldw	r2,24(sp)
 2003180:	d8c00917 	ldw	r3,36(sp)
 2003184:	157fffc4 	addi	r21,r2,-1
 2003188:	1d420716 	blt	r3,r21,20039a8 <_dtoa_r+0x11f4>
 200318c:	1d6bc83a 	sub	r21,r3,r21
 2003190:	d8800617 	ldw	r2,24(sp)
 2003194:	1002c716 	blt	r2,zero,2003cb4 <_dtoa_r+0x1500>
 2003198:	dd000817 	ldw	r20,32(sp)
 200319c:	d8800617 	ldw	r2,24(sp)
 20031a0:	d9800817 	ldw	r6,32(sp)
 20031a4:	8009883a 	mov	r4,r16
 20031a8:	01400044 	movi	r5,1
 20031ac:	308d883a 	add	r6,r6,r2
 20031b0:	d9800815 	stw	r6,32(sp)
 20031b4:	b0ad883a 	add	r22,r22,r2
 20031b8:	20062580 	call	2006258 <__i2b>
 20031bc:	1023883a 	mov	r17,r2
 20031c0:	a0000826 	beq	r20,zero,20031e4 <_dtoa_r+0xa30>
 20031c4:	0580070e 	bge	zero,r22,20031e4 <_dtoa_r+0xa30>
 20031c8:	b005883a 	mov	r2,r22
 20031cc:	a5812016 	blt	r20,r22,2003650 <_dtoa_r+0xe9c>
 20031d0:	d8c00817 	ldw	r3,32(sp)
 20031d4:	a0a9c83a 	sub	r20,r20,r2
 20031d8:	b0adc83a 	sub	r22,r22,r2
 20031dc:	1887c83a 	sub	r3,r3,r2
 20031e0:	d8c00815 	stw	r3,32(sp)
 20031e4:	d9000917 	ldw	r4,36(sp)
 20031e8:	0100140e 	bge	zero,r4,200323c <_dtoa_r+0xa88>
 20031ec:	d9800b17 	ldw	r6,44(sp)
 20031f0:	3001e526 	beq	r6,zero,2003988 <_dtoa_r+0x11d4>
 20031f4:	05400e0e 	bge	zero,r21,2003230 <_dtoa_r+0xa7c>
 20031f8:	880b883a 	mov	r5,r17
 20031fc:	8009883a 	mov	r4,r16
 2003200:	a80d883a 	mov	r6,r21
 2003204:	20064900 	call	2006490 <__pow5mult>
 2003208:	e00d883a 	mov	r6,fp
 200320c:	8009883a 	mov	r4,r16
 2003210:	100b883a 	mov	r5,r2
 2003214:	1023883a 	mov	r17,r2
 2003218:	20062940 	call	2006294 <__multiply>
 200321c:	102f883a 	mov	r23,r2
 2003220:	e00b883a 	mov	r5,fp
 2003224:	8009883a 	mov	r4,r16
 2003228:	2005ef40 	call	2005ef4 <_Bfree>
 200322c:	b839883a 	mov	fp,r23
 2003230:	d8800917 	ldw	r2,36(sp)
 2003234:	154dc83a 	sub	r6,r2,r21
 2003238:	3001281e 	bne	r6,zero,20036dc <_dtoa_r+0xf28>
 200323c:	05c00044 	movi	r23,1
 2003240:	8009883a 	mov	r4,r16
 2003244:	b80b883a 	mov	r5,r23
 2003248:	20062580 	call	2006258 <__i2b>
 200324c:	d8c00a17 	ldw	r3,40(sp)
 2003250:	102b883a 	mov	r21,r2
 2003254:	00c0310e 	bge	zero,r3,200331c <_dtoa_r+0xb68>
 2003258:	8009883a 	mov	r4,r16
 200325c:	100b883a 	mov	r5,r2
 2003260:	180d883a 	mov	r6,r3
 2003264:	20064900 	call	2006490 <__pow5mult>
 2003268:	d9000317 	ldw	r4,12(sp)
 200326c:	102b883a 	mov	r21,r2
 2003270:	b9011f0e 	bge	r23,r4,20036f0 <_dtoa_r+0xf3c>
 2003274:	0027883a 	mov	r19,zero
 2003278:	a8800417 	ldw	r2,16(r21)
 200327c:	10800104 	addi	r2,r2,4
 2003280:	1085883a 	add	r2,r2,r2
 2003284:	1085883a 	add	r2,r2,r2
 2003288:	a885883a 	add	r2,r21,r2
 200328c:	11000017 	ldw	r4,0(r2)
 2003290:	20061400 	call	2006140 <__hi0bits>
 2003294:	00c00804 	movi	r3,32
 2003298:	1885c83a 	sub	r2,r3,r2
 200329c:	00002506 	br	2003334 <_dtoa_r+0xb80>
 20032a0:	01800044 	movi	r6,1
 20032a4:	d9800d15 	stw	r6,52(sp)
 20032a8:	003dec06 	br	2002a5c <_dtoa_r+0x2a8>
 20032ac:	d8c00817 	ldw	r3,32(sp)
 20032b0:	d9000517 	ldw	r4,20(sp)
 20032b4:	d8000a15 	stw	zero,40(sp)
 20032b8:	1907c83a 	sub	r3,r3,r4
 20032bc:	010dc83a 	sub	r6,zero,r4
 20032c0:	d8c00815 	stw	r3,32(sp)
 20032c4:	d9800915 	stw	r6,36(sp)
 20032c8:	003ded06 	br	2002a80 <_dtoa_r+0x2cc>
 20032cc:	05adc83a 	sub	r22,zero,r22
 20032d0:	dd800815 	stw	r22,32(sp)
 20032d4:	002d883a 	mov	r22,zero
 20032d8:	003de406 	br	2002a6c <_dtoa_r+0x2b8>
 20032dc:	d9000517 	ldw	r4,20(sp)
 20032e0:	200c45c0 	call	200c45c <__floatsidf>
 20032e4:	1009883a 	mov	r4,r2
 20032e8:	180b883a 	mov	r5,r3
 20032ec:	b00d883a 	mov	r6,r22
 20032f0:	a80f883a 	mov	r7,r21
 20032f4:	200b19c0 	call	200b19c <__eqdf2>
 20032f8:	103dc726 	beq	r2,zero,2002a18 <_dtoa_r+0x264>
 20032fc:	d8800517 	ldw	r2,20(sp)
 2003300:	10bfffc4 	addi	r2,r2,-1
 2003304:	d8800515 	stw	r2,20(sp)
 2003308:	003dc306 	br	2002a18 <_dtoa_r+0x264>
 200330c:	dd400917 	ldw	r21,36(sp)
 2003310:	dd000817 	ldw	r20,32(sp)
 2003314:	0023883a 	mov	r17,zero
 2003318:	003fa906 	br	20031c0 <_dtoa_r+0xa0c>
 200331c:	d9800317 	ldw	r6,12(sp)
 2003320:	b981670e 	bge	r23,r6,20038c0 <_dtoa_r+0x110c>
 2003324:	0027883a 	mov	r19,zero
 2003328:	d8c00a17 	ldw	r3,40(sp)
 200332c:	183fd21e 	bne	r3,zero,2003278 <_dtoa_r+0xac4>
 2003330:	00800044 	movi	r2,1
 2003334:	1585883a 	add	r2,r2,r22
 2003338:	108007cc 	andi	r2,r2,31
 200333c:	10005f26 	beq	r2,zero,20034bc <_dtoa_r+0xd08>
 2003340:	00c00804 	movi	r3,32
 2003344:	1887c83a 	sub	r3,r3,r2
 2003348:	01000104 	movi	r4,4
 200334c:	20c2dd0e 	bge	r4,r3,2003ec4 <_dtoa_r+0x1710>
 2003350:	d9000817 	ldw	r4,32(sp)
 2003354:	00c00704 	movi	r3,28
 2003358:	1885c83a 	sub	r2,r3,r2
 200335c:	2089883a 	add	r4,r4,r2
 2003360:	d9000815 	stw	r4,32(sp)
 2003364:	a0a9883a 	add	r20,r20,r2
 2003368:	b0ad883a 	add	r22,r22,r2
 200336c:	d8800817 	ldw	r2,32(sp)
 2003370:	0080050e 	bge	zero,r2,2003388 <_dtoa_r+0xbd4>
 2003374:	e00b883a 	mov	r5,fp
 2003378:	8009883a 	mov	r4,r16
 200337c:	100d883a 	mov	r6,r2
 2003380:	20065d00 	call	20065d0 <__lshift>
 2003384:	1039883a 	mov	fp,r2
 2003388:	0580050e 	bge	zero,r22,20033a0 <_dtoa_r+0xbec>
 200338c:	a80b883a 	mov	r5,r21
 2003390:	8009883a 	mov	r4,r16
 2003394:	b00d883a 	mov	r6,r22
 2003398:	20065d00 	call	20065d0 <__lshift>
 200339c:	102b883a 	mov	r21,r2
 20033a0:	d8c00d17 	ldw	r3,52(sp)
 20033a4:	1801161e 	bne	r3,zero,2003800 <_dtoa_r+0x104c>
 20033a8:	d8c00617 	ldw	r3,24(sp)
 20033ac:	00c12d0e 	bge	zero,r3,2003864 <_dtoa_r+0x10b0>
 20033b0:	d8c00b17 	ldw	r3,44(sp)
 20033b4:	1800571e 	bne	r3,zero,2003514 <_dtoa_r+0xd60>
 20033b8:	dc800717 	ldw	r18,28(sp)
 20033bc:	dcc00617 	ldw	r19,24(sp)
 20033c0:	9029883a 	mov	r20,r18
 20033c4:	00000206 	br	20033d0 <_dtoa_r+0xc1c>
 20033c8:	2005f1c0 	call	2005f1c <__multadd>
 20033cc:	1039883a 	mov	fp,r2
 20033d0:	e009883a 	mov	r4,fp
 20033d4:	a80b883a 	mov	r5,r21
 20033d8:	20025b40 	call	20025b4 <quorem>
 20033dc:	10800c04 	addi	r2,r2,48
 20033e0:	90800005 	stb	r2,0(r18)
 20033e4:	94800044 	addi	r18,r18,1
 20033e8:	9507c83a 	sub	r3,r18,r20
 20033ec:	8009883a 	mov	r4,r16
 20033f0:	e00b883a 	mov	r5,fp
 20033f4:	01800284 	movi	r6,10
 20033f8:	000f883a 	mov	r7,zero
 20033fc:	1cfff216 	blt	r3,r19,20033c8 <_dtoa_r+0xc14>
 2003400:	1011883a 	mov	r8,r2
 2003404:	d8800617 	ldw	r2,24(sp)
 2003408:	00822e0e 	bge	zero,r2,2003cc4 <_dtoa_r+0x1510>
 200340c:	d9000717 	ldw	r4,28(sp)
 2003410:	0025883a 	mov	r18,zero
 2003414:	20af883a 	add	r23,r4,r2
 2003418:	e00b883a 	mov	r5,fp
 200341c:	01800044 	movi	r6,1
 2003420:	8009883a 	mov	r4,r16
 2003424:	da001715 	stw	r8,92(sp)
 2003428:	20065d00 	call	20065d0 <__lshift>
 200342c:	1009883a 	mov	r4,r2
 2003430:	a80b883a 	mov	r5,r21
 2003434:	1039883a 	mov	fp,r2
 2003438:	20067200 	call	2006720 <__mcmp>
 200343c:	da001717 	ldw	r8,92(sp)
 2003440:	00816e0e 	bge	zero,r2,20039fc <_dtoa_r+0x1248>
 2003444:	b93fffc3 	ldbu	r4,-1(r23)
 2003448:	b8bfffc4 	addi	r2,r23,-1
 200344c:	1007883a 	mov	r3,r2
 2003450:	01800e44 	movi	r6,57
 2003454:	d9c00717 	ldw	r7,28(sp)
 2003458:	00000506 	br	2003470 <_dtoa_r+0xcbc>
 200345c:	18ffffc4 	addi	r3,r3,-1
 2003460:	38811926 	beq	r7,r2,20038c8 <_dtoa_r+0x1114>
 2003464:	19000003 	ldbu	r4,0(r3)
 2003468:	102f883a 	mov	r23,r2
 200346c:	10bfffc4 	addi	r2,r2,-1
 2003470:	21403fcc 	andi	r5,r4,255
 2003474:	2940201c 	xori	r5,r5,128
 2003478:	297fe004 	addi	r5,r5,-128
 200347c:	29bff726 	beq	r5,r6,200345c <_dtoa_r+0xca8>
 2003480:	21000044 	addi	r4,r4,1
 2003484:	11000005 	stb	r4,0(r2)
 2003488:	8009883a 	mov	r4,r16
 200348c:	a80b883a 	mov	r5,r21
 2003490:	2005ef40 	call	2005ef4 <_Bfree>
 2003494:	883e7526 	beq	r17,zero,2002e6c <_dtoa_r+0x6b8>
 2003498:	90000426 	beq	r18,zero,20034ac <_dtoa_r+0xcf8>
 200349c:	94400326 	beq	r18,r17,20034ac <_dtoa_r+0xcf8>
 20034a0:	8009883a 	mov	r4,r16
 20034a4:	900b883a 	mov	r5,r18
 20034a8:	2005ef40 	call	2005ef4 <_Bfree>
 20034ac:	8009883a 	mov	r4,r16
 20034b0:	880b883a 	mov	r5,r17
 20034b4:	2005ef40 	call	2005ef4 <_Bfree>
 20034b8:	003e6c06 	br	2002e6c <_dtoa_r+0x6b8>
 20034bc:	00800704 	movi	r2,28
 20034c0:	d9800817 	ldw	r6,32(sp)
 20034c4:	a0a9883a 	add	r20,r20,r2
 20034c8:	b0ad883a 	add	r22,r22,r2
 20034cc:	308d883a 	add	r6,r6,r2
 20034d0:	d9800815 	stw	r6,32(sp)
 20034d4:	003fa506 	br	200336c <_dtoa_r+0xbb8>
 20034d8:	013efb84 	movi	r4,-1042
 20034dc:	246bc83a 	sub	r21,r4,r17
 20034e0:	9548983a 	sll	r4,r18,r21
 20034e4:	003d1806 	br	2002948 <_dtoa_r+0x194>
 20034e8:	d8000d15 	stw	zero,52(sp)
 20034ec:	003d5b06 	br	2002a5c <_dtoa_r+0x2a8>
 20034f0:	880b883a 	mov	r5,r17
 20034f4:	8009883a 	mov	r4,r16
 20034f8:	01800284 	movi	r6,10
 20034fc:	000f883a 	mov	r7,zero
 2003500:	2005f1c0 	call	2005f1c <__multadd>
 2003504:	1023883a 	mov	r17,r2
 2003508:	d8800c17 	ldw	r2,48(sp)
 200350c:	0082550e 	bge	zero,r2,2003e64 <_dtoa_r+0x16b0>
 2003510:	d8800615 	stw	r2,24(sp)
 2003514:	0500050e 	bge	zero,r20,200352c <_dtoa_r+0xd78>
 2003518:	880b883a 	mov	r5,r17
 200351c:	8009883a 	mov	r4,r16
 2003520:	a00d883a 	mov	r6,r20
 2003524:	20065d00 	call	20065d0 <__lshift>
 2003528:	1023883a 	mov	r17,r2
 200352c:	98016a1e 	bne	r19,zero,2003ad8 <_dtoa_r+0x1324>
 2003530:	8829883a 	mov	r20,r17
 2003534:	d9000617 	ldw	r4,24(sp)
 2003538:	dcc00717 	ldw	r19,28(sp)
 200353c:	9480004c 	andi	r18,r18,1
 2003540:	20bfffc4 	addi	r2,r4,-1
 2003544:	9885883a 	add	r2,r19,r2
 2003548:	d8800415 	stw	r2,16(sp)
 200354c:	dc800615 	stw	r18,24(sp)
 2003550:	e009883a 	mov	r4,fp
 2003554:	a80b883a 	mov	r5,r21
 2003558:	20025b40 	call	20025b4 <quorem>
 200355c:	e009883a 	mov	r4,fp
 2003560:	880b883a 	mov	r5,r17
 2003564:	102f883a 	mov	r23,r2
 2003568:	20067200 	call	2006720 <__mcmp>
 200356c:	8009883a 	mov	r4,r16
 2003570:	a80b883a 	mov	r5,r21
 2003574:	a00d883a 	mov	r6,r20
 2003578:	102d883a 	mov	r22,r2
 200357c:	20067800 	call	2006780 <__mdiff>
 2003580:	1007883a 	mov	r3,r2
 2003584:	10800317 	ldw	r2,12(r2)
 2003588:	bc800c04 	addi	r18,r23,48
 200358c:	1000971e 	bne	r2,zero,20037ec <_dtoa_r+0x1038>
 2003590:	180b883a 	mov	r5,r3
 2003594:	e009883a 	mov	r4,fp
 2003598:	d8c01515 	stw	r3,84(sp)
 200359c:	20067200 	call	2006720 <__mcmp>
 20035a0:	d8c01517 	ldw	r3,84(sp)
 20035a4:	8009883a 	mov	r4,r16
 20035a8:	d8801515 	stw	r2,84(sp)
 20035ac:	180b883a 	mov	r5,r3
 20035b0:	2005ef40 	call	2005ef4 <_Bfree>
 20035b4:	d8801517 	ldw	r2,84(sp)
 20035b8:	1000041e 	bne	r2,zero,20035cc <_dtoa_r+0xe18>
 20035bc:	d9800317 	ldw	r6,12(sp)
 20035c0:	3000021e 	bne	r6,zero,20035cc <_dtoa_r+0xe18>
 20035c4:	d8c00617 	ldw	r3,24(sp)
 20035c8:	18007626 	beq	r3,zero,20037a4 <_dtoa_r+0xff0>
 20035cc:	b0005b16 	blt	r22,zero,200373c <_dtoa_r+0xf88>
 20035d0:	b000041e 	bne	r22,zero,20035e4 <_dtoa_r+0xe30>
 20035d4:	d9000317 	ldw	r4,12(sp)
 20035d8:	2000021e 	bne	r4,zero,20035e4 <_dtoa_r+0xe30>
 20035dc:	d8c00617 	ldw	r3,24(sp)
 20035e0:	18005626 	beq	r3,zero,200373c <_dtoa_r+0xf88>
 20035e4:	00814d16 	blt	zero,r2,2003b1c <_dtoa_r+0x1368>
 20035e8:	d8c00417 	ldw	r3,16(sp)
 20035ec:	9d800044 	addi	r22,r19,1
 20035f0:	9c800005 	stb	r18,0(r19)
 20035f4:	b02f883a 	mov	r23,r22
 20035f8:	98c14c26 	beq	r19,r3,2003b2c <_dtoa_r+0x1378>
 20035fc:	e00b883a 	mov	r5,fp
 2003600:	8009883a 	mov	r4,r16
 2003604:	01800284 	movi	r6,10
 2003608:	000f883a 	mov	r7,zero
 200360c:	2005f1c0 	call	2005f1c <__multadd>
 2003610:	1039883a 	mov	fp,r2
 2003614:	8d006d26 	beq	r17,r20,20037cc <_dtoa_r+0x1018>
 2003618:	880b883a 	mov	r5,r17
 200361c:	01800284 	movi	r6,10
 2003620:	000f883a 	mov	r7,zero
 2003624:	8009883a 	mov	r4,r16
 2003628:	2005f1c0 	call	2005f1c <__multadd>
 200362c:	a00b883a 	mov	r5,r20
 2003630:	8009883a 	mov	r4,r16
 2003634:	01800284 	movi	r6,10
 2003638:	000f883a 	mov	r7,zero
 200363c:	1023883a 	mov	r17,r2
 2003640:	2005f1c0 	call	2005f1c <__multadd>
 2003644:	1029883a 	mov	r20,r2
 2003648:	b027883a 	mov	r19,r22
 200364c:	003fc006 	br	2003550 <_dtoa_r+0xd9c>
 2003650:	a005883a 	mov	r2,r20
 2003654:	003ede06 	br	20031d0 <_dtoa_r+0xa1c>
 2003658:	01000044 	movi	r4,1
 200365c:	d9000b15 	stw	r4,44(sp)
 2003660:	d9802217 	ldw	r6,136(sp)
 2003664:	0180dc0e 	bge	zero,r6,20039d8 <_dtoa_r+0x1224>
 2003668:	3023883a 	mov	r17,r6
 200366c:	d9800c15 	stw	r6,48(sp)
 2003670:	d9800615 	stw	r6,24(sp)
 2003674:	003d1e06 	br	2002af0 <_dtoa_r+0x33c>
 2003678:	d8800617 	ldw	r2,24(sp)
 200367c:	00be3716 	blt	zero,r2,2002f5c <_dtoa_r+0x7a8>
 2003680:	1000be1e 	bne	r2,zero,200397c <_dtoa_r+0x11c8>
 2003684:	8809883a 	mov	r4,r17
 2003688:	a00b883a 	mov	r5,r20
 200368c:	000d883a 	mov	r6,zero
 2003690:	01d00534 	movhi	r7,16404
 2003694:	200b3e00 	call	200b3e0 <__muldf3>
 2003698:	1009883a 	mov	r4,r2
 200369c:	180b883a 	mov	r5,r3
 20036a0:	900d883a 	mov	r6,r18
 20036a4:	980f883a 	mov	r7,r19
 20036a8:	200b2200 	call	200b220 <__gedf2>
 20036ac:	002b883a 	mov	r21,zero
 20036b0:	0023883a 	mov	r17,zero
 20036b4:	10007a16 	blt	r2,zero,20038a0 <_dtoa_r+0x10ec>
 20036b8:	d9002217 	ldw	r4,136(sp)
 20036bc:	ddc00717 	ldw	r23,28(sp)
 20036c0:	0108303a 	nor	r4,zero,r4
 20036c4:	d9000515 	stw	r4,20(sp)
 20036c8:	8009883a 	mov	r4,r16
 20036cc:	a80b883a 	mov	r5,r21
 20036d0:	2005ef40 	call	2005ef4 <_Bfree>
 20036d4:	883f751e 	bne	r17,zero,20034ac <_dtoa_r+0xcf8>
 20036d8:	003de406 	br	2002e6c <_dtoa_r+0x6b8>
 20036dc:	e00b883a 	mov	r5,fp
 20036e0:	8009883a 	mov	r4,r16
 20036e4:	20064900 	call	2006490 <__pow5mult>
 20036e8:	1039883a 	mov	fp,r2
 20036ec:	003ed306 	br	200323c <_dtoa_r+0xa88>
 20036f0:	903ee01e 	bne	r18,zero,2003274 <_dtoa_r+0xac0>
 20036f4:	00800434 	movhi	r2,16
 20036f8:	10bfffc4 	addi	r2,r2,-1
 20036fc:	9884703a 	and	r2,r19,r2
 2003700:	103f081e 	bne	r2,zero,2003324 <_dtoa_r+0xb70>
 2003704:	9cdffc2c 	andhi	r19,r19,32752
 2003708:	983f0626 	beq	r19,zero,2003324 <_dtoa_r+0xb70>
 200370c:	d8800817 	ldw	r2,32(sp)
 2003710:	b5800044 	addi	r22,r22,1
 2003714:	04c00044 	movi	r19,1
 2003718:	10800044 	addi	r2,r2,1
 200371c:	d8800815 	stw	r2,32(sp)
 2003720:	003f0106 	br	2003328 <_dtoa_r+0xb74>
 2003724:	d9800f17 	ldw	r6,60(sp)
 2003728:	30016826 	beq	r6,zero,2003ccc <_dtoa_r+0x1518>
 200372c:	10810cc4 	addi	r2,r2,1075
 2003730:	dd400917 	ldw	r21,36(sp)
 2003734:	dd000817 	ldw	r20,32(sp)
 2003738:	003e9906 	br	20031a0 <_dtoa_r+0x9ec>
 200373c:	9011883a 	mov	r8,r18
 2003740:	4007883a 	mov	r3,r8
 2003744:	e02d883a 	mov	r22,fp
 2003748:	0080100e 	bge	zero,r2,200378c <_dtoa_r+0xfd8>
 200374c:	01800044 	movi	r6,1
 2003750:	8009883a 	mov	r4,r16
 2003754:	e00b883a 	mov	r5,fp
 2003758:	da001515 	stw	r8,84(sp)
 200375c:	da001715 	stw	r8,92(sp)
 2003760:	20065d00 	call	20065d0 <__lshift>
 2003764:	1009883a 	mov	r4,r2
 2003768:	a80b883a 	mov	r5,r21
 200376c:	102d883a 	mov	r22,r2
 2003770:	20067200 	call	2006720 <__mcmp>
 2003774:	d8c01517 	ldw	r3,84(sp)
 2003778:	da001717 	ldw	r8,92(sp)
 200377c:	0081a50e 	bge	zero,r2,2003e14 <_dtoa_r+0x1660>
 2003780:	00800e44 	movi	r2,57
 2003784:	40817b26 	beq	r8,r2,2003d74 <_dtoa_r+0x15c0>
 2003788:	40c00044 	addi	r3,r8,1
 200378c:	8825883a 	mov	r18,r17
 2003790:	9dc00044 	addi	r23,r19,1
 2003794:	98c00005 	stb	r3,0(r19)
 2003798:	a023883a 	mov	r17,r20
 200379c:	b039883a 	mov	fp,r22
 20037a0:	003f3906 	br	2003488 <_dtoa_r+0xcd4>
 20037a4:	00800e44 	movi	r2,57
 20037a8:	9011883a 	mov	r8,r18
 20037ac:	90817226 	beq	r18,r2,2003d78 <_dtoa_r+0x15c4>
 20037b0:	0580010e 	bge	zero,r22,20037b8 <_dtoa_r+0x1004>
 20037b4:	ba000c44 	addi	r8,r23,49
 20037b8:	8825883a 	mov	r18,r17
 20037bc:	9dc00044 	addi	r23,r19,1
 20037c0:	9a000005 	stb	r8,0(r19)
 20037c4:	a023883a 	mov	r17,r20
 20037c8:	003f2f06 	br	2003488 <_dtoa_r+0xcd4>
 20037cc:	880b883a 	mov	r5,r17
 20037d0:	8009883a 	mov	r4,r16
 20037d4:	01800284 	movi	r6,10
 20037d8:	000f883a 	mov	r7,zero
 20037dc:	2005f1c0 	call	2005f1c <__multadd>
 20037e0:	1023883a 	mov	r17,r2
 20037e4:	1029883a 	mov	r20,r2
 20037e8:	003f9706 	br	2003648 <_dtoa_r+0xe94>
 20037ec:	8009883a 	mov	r4,r16
 20037f0:	180b883a 	mov	r5,r3
 20037f4:	2005ef40 	call	2005ef4 <_Bfree>
 20037f8:	00800044 	movi	r2,1
 20037fc:	003f7306 	br	20035cc <_dtoa_r+0xe18>
 2003800:	e009883a 	mov	r4,fp
 2003804:	a80b883a 	mov	r5,r21
 2003808:	20067200 	call	2006720 <__mcmp>
 200380c:	103ee60e 	bge	r2,zero,20033a8 <_dtoa_r+0xbf4>
 2003810:	8009883a 	mov	r4,r16
 2003814:	e00b883a 	mov	r5,fp
 2003818:	01800284 	movi	r6,10
 200381c:	000f883a 	mov	r7,zero
 2003820:	2005f1c0 	call	2005f1c <__multadd>
 2003824:	d9000517 	ldw	r4,20(sp)
 2003828:	d9800b17 	ldw	r6,44(sp)
 200382c:	1039883a 	mov	fp,r2
 2003830:	213fffc4 	addi	r4,r4,-1
 2003834:	d9000515 	stw	r4,20(sp)
 2003838:	303f2d1e 	bne	r6,zero,20034f0 <_dtoa_r+0xd3c>
 200383c:	d9000c17 	ldw	r4,48(sp)
 2003840:	0101780e 	bge	zero,r4,2003e24 <_dtoa_r+0x1670>
 2003844:	d9000615 	stw	r4,24(sp)
 2003848:	003edb06 	br	20033b8 <_dtoa_r+0xc04>
 200384c:	00800084 	movi	r2,2
 2003850:	30818e1e 	bne	r6,r2,2003e8c <_dtoa_r+0x16d8>
 2003854:	d8000b15 	stw	zero,44(sp)
 2003858:	003f8106 	br	2003660 <_dtoa_r+0xeac>
 200385c:	d8800717 	ldw	r2,28(sp)
 2003860:	003c0306 	br	2002870 <_dtoa_r+0xbc>
 2003864:	d9000317 	ldw	r4,12(sp)
 2003868:	00800084 	movi	r2,2
 200386c:	113ed00e 	bge	r2,r4,20033b0 <_dtoa_r+0xbfc>
 2003870:	d8c00617 	ldw	r3,24(sp)
 2003874:	183f901e 	bne	r3,zero,20036b8 <_dtoa_r+0xf04>
 2003878:	a80b883a 	mov	r5,r21
 200387c:	8009883a 	mov	r4,r16
 2003880:	01800144 	movi	r6,5
 2003884:	000f883a 	mov	r7,zero
 2003888:	2005f1c0 	call	2005f1c <__multadd>
 200388c:	e009883a 	mov	r4,fp
 2003890:	100b883a 	mov	r5,r2
 2003894:	102b883a 	mov	r21,r2
 2003898:	20067200 	call	2006720 <__mcmp>
 200389c:	00bf860e 	bge	zero,r2,20036b8 <_dtoa_r+0xf04>
 20038a0:	d9800717 	ldw	r6,28(sp)
 20038a4:	00800c44 	movi	r2,49
 20038a8:	30800005 	stb	r2,0(r6)
 20038ac:	d8800517 	ldw	r2,20(sp)
 20038b0:	35c00044 	addi	r23,r6,1
 20038b4:	10800044 	addi	r2,r2,1
 20038b8:	d8800515 	stw	r2,20(sp)
 20038bc:	003f8206 	br	20036c8 <_dtoa_r+0xf14>
 20038c0:	903e981e 	bne	r18,zero,2003324 <_dtoa_r+0xb70>
 20038c4:	003f8b06 	br	20036f4 <_dtoa_r+0xf40>
 20038c8:	d9800517 	ldw	r6,20(sp)
 20038cc:	d8c00717 	ldw	r3,28(sp)
 20038d0:	00800c44 	movi	r2,49
 20038d4:	31800044 	addi	r6,r6,1
 20038d8:	d9800515 	stw	r6,20(sp)
 20038dc:	18800005 	stb	r2,0(r3)
 20038e0:	003ee906 	br	2003488 <_dtoa_r+0xcd4>
 20038e4:	dc000317 	ldw	r16,12(sp)
 20038e8:	003d6006 	br	2002e6c <_dtoa_r+0x6b8>
 20038ec:	8809883a 	mov	r4,r17
 20038f0:	200c45c0 	call	200c45c <__floatsidf>
 20038f4:	a009883a 	mov	r4,r20
 20038f8:	a80b883a 	mov	r5,r21
 20038fc:	100d883a 	mov	r6,r2
 2003900:	180f883a 	mov	r7,r3
 2003904:	200b3e00 	call	200b3e0 <__muldf3>
 2003908:	1009883a 	mov	r4,r2
 200390c:	180b883a 	mov	r5,r3
 2003910:	000d883a 	mov	r6,zero
 2003914:	01d00734 	movhi	r7,16412
 2003918:	200a0340 	call	200a034 <__adddf3>
 200391c:	1023883a 	mov	r17,r2
 2003920:	00bf3034 	movhi	r2,64704
 2003924:	1885883a 	add	r2,r3,r2
 2003928:	d8800e15 	stw	r2,56(sp)
 200392c:	a009883a 	mov	r4,r20
 2003930:	a80b883a 	mov	r5,r21
 2003934:	000d883a 	mov	r6,zero
 2003938:	01d00534 	movhi	r7,16404
 200393c:	200bb040 	call	200bb04 <__subdf3>
 2003940:	d9c00e17 	ldw	r7,56(sp)
 2003944:	1009883a 	mov	r4,r2
 2003948:	180b883a 	mov	r5,r3
 200394c:	880d883a 	mov	r6,r17
 2003950:	102b883a 	mov	r21,r2
 2003954:	1829883a 	mov	r20,r3
 2003958:	200b2200 	call	200b220 <__gedf2>
 200395c:	00807716 	blt	zero,r2,2003b3c <_dtoa_r+0x1388>
 2003960:	d8800e17 	ldw	r2,56(sp)
 2003964:	a809883a 	mov	r4,r21
 2003968:	a00b883a 	mov	r5,r20
 200396c:	11e0003c 	xorhi	r7,r2,32768
 2003970:	880d883a 	mov	r6,r17
 2003974:	200b3000 	call	200b300 <__ledf2>
 2003978:	103d6b0e 	bge	r2,zero,2002f28 <_dtoa_r+0x774>
 200397c:	002b883a 	mov	r21,zero
 2003980:	0023883a 	mov	r17,zero
 2003984:	003f4c06 	br	20036b8 <_dtoa_r+0xf04>
 2003988:	d9800917 	ldw	r6,36(sp)
 200398c:	e00b883a 	mov	r5,fp
 2003990:	8009883a 	mov	r4,r16
 2003994:	20064900 	call	2006490 <__pow5mult>
 2003998:	1039883a 	mov	fp,r2
 200399c:	003e2706 	br	200323c <_dtoa_r+0xa88>
 20039a0:	d8000b15 	stw	zero,44(sp)
 20039a4:	003c4906 	br	2002acc <_dtoa_r+0x318>
 20039a8:	d9000917 	ldw	r4,36(sp)
 20039ac:	d9800a17 	ldw	r6,40(sp)
 20039b0:	dd400915 	stw	r21,36(sp)
 20039b4:	a905c83a 	sub	r2,r21,r4
 20039b8:	308d883a 	add	r6,r6,r2
 20039bc:	d9800a15 	stw	r6,40(sp)
 20039c0:	002b883a 	mov	r21,zero
 20039c4:	003df206 	br	2003190 <_dtoa_r+0x9dc>
 20039c8:	dc800e15 	stw	r18,56(sp)
 20039cc:	982b883a 	mov	r21,r19
 20039d0:	04400084 	movi	r17,2
 20039d4:	003c7406 	br	2002ba8 <_dtoa_r+0x3f4>
 20039d8:	04400044 	movi	r17,1
 20039dc:	dc400c15 	stw	r17,48(sp)
 20039e0:	dc400615 	stw	r17,24(sp)
 20039e4:	dc402215 	stw	r17,136(sp)
 20039e8:	80001115 	stw	zero,68(r16)
 20039ec:	000b883a 	mov	r5,zero
 20039f0:	003c4a06 	br	2002b1c <_dtoa_r+0x368>
 20039f4:	3023883a 	mov	r17,r6
 20039f8:	003ffb06 	br	20039e8 <_dtoa_r+0x1234>
 20039fc:	1000021e 	bne	r2,zero,2003a08 <_dtoa_r+0x1254>
 2003a00:	4200004c 	andi	r8,r8,1
 2003a04:	403e8f1e 	bne	r8,zero,2003444 <_dtoa_r+0xc90>
 2003a08:	01000c04 	movi	r4,48
 2003a0c:	00000106 	br	2003a14 <_dtoa_r+0x1260>
 2003a10:	102f883a 	mov	r23,r2
 2003a14:	b8bfffc4 	addi	r2,r23,-1
 2003a18:	10c00007 	ldb	r3,0(r2)
 2003a1c:	193ffc26 	beq	r3,r4,2003a10 <_dtoa_r+0x125c>
 2003a20:	003e9906 	br	2003488 <_dtoa_r+0xcd4>
 2003a24:	d9000517 	ldw	r4,20(sp)
 2003a28:	012fc83a 	sub	r23,zero,r4
 2003a2c:	b800ad26 	beq	r23,zero,2003ce4 <_dtoa_r+0x1530>
 2003a30:	b88003cc 	andi	r2,r23,15
 2003a34:	100490fa 	slli	r2,r2,3
 2003a38:	00c08074 	movhi	r3,513
 2003a3c:	18fc2604 	addi	r3,r3,-3944
 2003a40:	1885883a 	add	r2,r3,r2
 2003a44:	11800017 	ldw	r6,0(r2)
 2003a48:	11c00117 	ldw	r7,4(r2)
 2003a4c:	b82fd13a 	srai	r23,r23,4
 2003a50:	9009883a 	mov	r4,r18
 2003a54:	980b883a 	mov	r5,r19
 2003a58:	200b3e00 	call	200b3e0 <__muldf3>
 2003a5c:	1029883a 	mov	r20,r2
 2003a60:	182b883a 	mov	r21,r3
 2003a64:	b800f426 	beq	r23,zero,2003e38 <_dtoa_r+0x1684>
 2003a68:	02008074 	movhi	r8,513
 2003a6c:	423c1c04 	addi	r8,r8,-3984
 2003a70:	8029883a 	mov	r20,r16
 2003a74:	04400084 	movi	r17,2
 2003a78:	4021883a 	mov	r16,r8
 2003a7c:	b980004c 	andi	r6,r23,1
 2003a80:	1009883a 	mov	r4,r2
 2003a84:	b82fd07a 	srai	r23,r23,1
 2003a88:	180b883a 	mov	r5,r3
 2003a8c:	30000426 	beq	r6,zero,2003aa0 <_dtoa_r+0x12ec>
 2003a90:	81800017 	ldw	r6,0(r16)
 2003a94:	81c00117 	ldw	r7,4(r16)
 2003a98:	8c400044 	addi	r17,r17,1
 2003a9c:	200b3e00 	call	200b3e0 <__muldf3>
 2003aa0:	84000204 	addi	r16,r16,8
 2003aa4:	b83ff51e 	bne	r23,zero,2003a7c <_dtoa_r+0x12c8>
 2003aa8:	a021883a 	mov	r16,r20
 2003aac:	182b883a 	mov	r21,r3
 2003ab0:	1029883a 	mov	r20,r2
 2003ab4:	003c5506 	br	2002c0c <_dtoa_r+0x458>
 2003ab8:	d9800517 	ldw	r6,20(sp)
 2003abc:	d9000717 	ldw	r4,28(sp)
 2003ac0:	00c00c04 	movi	r3,48
 2003ac4:	31800044 	addi	r6,r6,1
 2003ac8:	d9800515 	stw	r6,20(sp)
 2003acc:	20c00005 	stb	r3,0(r4)
 2003ad0:	02000c44 	movi	r8,49
 2003ad4:	003da206 	br	2003160 <_dtoa_r+0x9ac>
 2003ad8:	89400117 	ldw	r5,4(r17)
 2003adc:	8009883a 	mov	r4,r16
 2003ae0:	2005e4c0 	call	2005e4c <_Balloc>
 2003ae4:	89800417 	ldw	r6,16(r17)
 2003ae8:	11000304 	addi	r4,r2,12
 2003aec:	89400304 	addi	r5,r17,12
 2003af0:	31800084 	addi	r6,r6,2
 2003af4:	318d883a 	add	r6,r6,r6
 2003af8:	318d883a 	add	r6,r6,r6
 2003afc:	1027883a 	mov	r19,r2
 2003b00:	2005a940 	call	2005a94 <memcpy>
 2003b04:	8009883a 	mov	r4,r16
 2003b08:	980b883a 	mov	r5,r19
 2003b0c:	01800044 	movi	r6,1
 2003b10:	20065d00 	call	20065d0 <__lshift>
 2003b14:	1029883a 	mov	r20,r2
 2003b18:	003e8606 	br	2003534 <_dtoa_r+0xd80>
 2003b1c:	00800e44 	movi	r2,57
 2003b20:	90809526 	beq	r18,r2,2003d78 <_dtoa_r+0x15c4>
 2003b24:	92000044 	addi	r8,r18,1
 2003b28:	003f2306 	br	20037b8 <_dtoa_r+0x1004>
 2003b2c:	9011883a 	mov	r8,r18
 2003b30:	8825883a 	mov	r18,r17
 2003b34:	a023883a 	mov	r17,r20
 2003b38:	003e3706 	br	2003418 <_dtoa_r+0xc64>
 2003b3c:	002b883a 	mov	r21,zero
 2003b40:	0023883a 	mov	r17,zero
 2003b44:	003f5606 	br	20038a0 <_dtoa_r+0x10ec>
 2003b48:	51bfffc4 	addi	r6,r10,-1
 2003b4c:	300490fa 	slli	r2,r6,3
 2003b50:	00c08074 	movhi	r3,513
 2003b54:	18fc2604 	addi	r3,r3,-3944
 2003b58:	1885883a 	add	r2,r3,r2
 2003b5c:	d9c00e17 	ldw	r7,56(sp)
 2003b60:	11000017 	ldw	r4,0(r2)
 2003b64:	11400117 	ldw	r5,4(r2)
 2003b68:	d8800717 	ldw	r2,28(sp)
 2003b6c:	d9801015 	stw	r6,64(sp)
 2003b70:	880d883a 	mov	r6,r17
 2003b74:	da801615 	stw	r10,88(sp)
 2003b78:	15c00044 	addi	r23,r2,1
 2003b7c:	200b3e00 	call	200b3e0 <__muldf3>
 2003b80:	a80b883a 	mov	r5,r21
 2003b84:	a009883a 	mov	r4,r20
 2003b88:	d8c01115 	stw	r3,68(sp)
 2003b8c:	d8800e15 	stw	r2,56(sp)
 2003b90:	200c3d40 	call	200c3d4 <__fixdfsi>
 2003b94:	1009883a 	mov	r4,r2
 2003b98:	1023883a 	mov	r17,r2
 2003b9c:	200c45c0 	call	200c45c <__floatsidf>
 2003ba0:	a009883a 	mov	r4,r20
 2003ba4:	a80b883a 	mov	r5,r21
 2003ba8:	100d883a 	mov	r6,r2
 2003bac:	180f883a 	mov	r7,r3
 2003bb0:	200bb040 	call	200bb04 <__subdf3>
 2003bb4:	1813883a 	mov	r9,r3
 2003bb8:	d8c00717 	ldw	r3,28(sp)
 2003bbc:	8c400c04 	addi	r17,r17,48
 2003bc0:	1011883a 	mov	r8,r2
 2003bc4:	1c400005 	stb	r17,0(r3)
 2003bc8:	da801617 	ldw	r10,88(sp)
 2003bcc:	00800044 	movi	r2,1
 2003bd0:	50802326 	beq	r10,r2,2003c60 <_dtoa_r+0x14ac>
 2003bd4:	d8800717 	ldw	r2,28(sp)
 2003bd8:	b82b883a 	mov	r21,r23
 2003bdc:	dc001315 	stw	r16,76(sp)
 2003be0:	12a9883a 	add	r20,r2,r10
 2003be4:	4807883a 	mov	r3,r9
 2003be8:	4005883a 	mov	r2,r8
 2003bec:	dc801415 	stw	r18,80(sp)
 2003bf0:	000d883a 	mov	r6,zero
 2003bf4:	01d00934 	movhi	r7,16420
 2003bf8:	1009883a 	mov	r4,r2
 2003bfc:	180b883a 	mov	r5,r3
 2003c00:	200b3e00 	call	200b3e0 <__muldf3>
 2003c04:	180b883a 	mov	r5,r3
 2003c08:	1009883a 	mov	r4,r2
 2003c0c:	1821883a 	mov	r16,r3
 2003c10:	1025883a 	mov	r18,r2
 2003c14:	200c3d40 	call	200c3d4 <__fixdfsi>
 2003c18:	1009883a 	mov	r4,r2
 2003c1c:	1023883a 	mov	r17,r2
 2003c20:	200c45c0 	call	200c45c <__floatsidf>
 2003c24:	9009883a 	mov	r4,r18
 2003c28:	800b883a 	mov	r5,r16
 2003c2c:	100d883a 	mov	r6,r2
 2003c30:	180f883a 	mov	r7,r3
 2003c34:	8c400c04 	addi	r17,r17,48
 2003c38:	200bb040 	call	200bb04 <__subdf3>
 2003c3c:	ad400044 	addi	r21,r21,1
 2003c40:	ac7fffc5 	stb	r17,-1(r21)
 2003c44:	ad3fea1e 	bne	r21,r20,2003bf0 <_dtoa_r+0x143c>
 2003c48:	1813883a 	mov	r9,r3
 2003c4c:	d8c01017 	ldw	r3,64(sp)
 2003c50:	dc001317 	ldw	r16,76(sp)
 2003c54:	dc801417 	ldw	r18,80(sp)
 2003c58:	1011883a 	mov	r8,r2
 2003c5c:	b8ef883a 	add	r23,r23,r3
 2003c60:	d9000e17 	ldw	r4,56(sp)
 2003c64:	d9401117 	ldw	r5,68(sp)
 2003c68:	000d883a 	mov	r6,zero
 2003c6c:	01cff834 	movhi	r7,16352
 2003c70:	da001715 	stw	r8,92(sp)
 2003c74:	da401515 	stw	r9,84(sp)
 2003c78:	200a0340 	call	200a034 <__adddf3>
 2003c7c:	da001717 	ldw	r8,92(sp)
 2003c80:	da401517 	ldw	r9,84(sp)
 2003c84:	1009883a 	mov	r4,r2
 2003c88:	400d883a 	mov	r6,r8
 2003c8c:	480f883a 	mov	r7,r9
 2003c90:	180b883a 	mov	r5,r3
 2003c94:	200b3000 	call	200b300 <__ledf2>
 2003c98:	da001717 	ldw	r8,92(sp)
 2003c9c:	da401517 	ldw	r9,84(sp)
 2003ca0:	10003b0e 	bge	r2,zero,2003d90 <_dtoa_r+0x15dc>
 2003ca4:	d9001217 	ldw	r4,72(sp)
 2003ca8:	bd7fffc3 	ldbu	r21,-1(r23)
 2003cac:	d9000515 	stw	r4,20(sp)
 2003cb0:	003d1c06 	br	2003124 <_dtoa_r+0x970>
 2003cb4:	d8c00817 	ldw	r3,32(sp)
 2003cb8:	18a9c83a 	sub	r20,r3,r2
 2003cbc:	0005883a 	mov	r2,zero
 2003cc0:	003d3706 	br	20031a0 <_dtoa_r+0x9ec>
 2003cc4:	00800044 	movi	r2,1
 2003cc8:	003dd006 	br	200340c <_dtoa_r+0xc58>
 2003ccc:	d8c00217 	ldw	r3,8(sp)
 2003cd0:	00800d84 	movi	r2,54
 2003cd4:	dd400917 	ldw	r21,36(sp)
 2003cd8:	10c5c83a 	sub	r2,r2,r3
 2003cdc:	dd000817 	ldw	r20,32(sp)
 2003ce0:	003d2f06 	br	20031a0 <_dtoa_r+0x9ec>
 2003ce4:	9029883a 	mov	r20,r18
 2003ce8:	982b883a 	mov	r21,r19
 2003cec:	04400084 	movi	r17,2
 2003cf0:	003bc606 	br	2002c0c <_dtoa_r+0x458>
 2003cf4:	d8800617 	ldw	r2,24(sp)
 2003cf8:	103efc26 	beq	r2,zero,20038ec <_dtoa_r+0x1138>
 2003cfc:	d8c00c17 	ldw	r3,48(sp)
 2003d00:	00fc890e 	bge	zero,r3,2002f28 <_dtoa_r+0x774>
 2003d04:	a80b883a 	mov	r5,r21
 2003d08:	a009883a 	mov	r4,r20
 2003d0c:	000d883a 	mov	r6,zero
 2003d10:	01d00934 	movhi	r7,16420
 2003d14:	200b3e00 	call	200b3e0 <__muldf3>
 2003d18:	89000044 	addi	r4,r17,1
 2003d1c:	1029883a 	mov	r20,r2
 2003d20:	182b883a 	mov	r21,r3
 2003d24:	200c45c0 	call	200c45c <__floatsidf>
 2003d28:	a009883a 	mov	r4,r20
 2003d2c:	a80b883a 	mov	r5,r21
 2003d30:	100d883a 	mov	r6,r2
 2003d34:	180f883a 	mov	r7,r3
 2003d38:	200b3e00 	call	200b3e0 <__muldf3>
 2003d3c:	1009883a 	mov	r4,r2
 2003d40:	180b883a 	mov	r5,r3
 2003d44:	000d883a 	mov	r6,zero
 2003d48:	01d00734 	movhi	r7,16412
 2003d4c:	200a0340 	call	200a034 <__adddf3>
 2003d50:	d9000517 	ldw	r4,20(sp)
 2003d54:	1023883a 	mov	r17,r2
 2003d58:	00bf3034 	movhi	r2,64704
 2003d5c:	213fffc4 	addi	r4,r4,-1
 2003d60:	1885883a 	add	r2,r3,r2
 2003d64:	d9001215 	stw	r4,72(sp)
 2003d68:	d8800e15 	stw	r2,56(sp)
 2003d6c:	da800c17 	ldw	r10,48(sp)
 2003d70:	003bc306 	br	2002c80 <_dtoa_r+0x4cc>
 2003d74:	b039883a 	mov	fp,r22
 2003d78:	01000e44 	movi	r4,57
 2003d7c:	8825883a 	mov	r18,r17
 2003d80:	9dc00044 	addi	r23,r19,1
 2003d84:	99000005 	stb	r4,0(r19)
 2003d88:	a023883a 	mov	r17,r20
 2003d8c:	003dae06 	br	2003448 <_dtoa_r+0xc94>
 2003d90:	d9800e17 	ldw	r6,56(sp)
 2003d94:	d9c01117 	ldw	r7,68(sp)
 2003d98:	0009883a 	mov	r4,zero
 2003d9c:	014ff834 	movhi	r5,16352
 2003da0:	da001715 	stw	r8,92(sp)
 2003da4:	da401515 	stw	r9,84(sp)
 2003da8:	200bb040 	call	200bb04 <__subdf3>
 2003dac:	da001717 	ldw	r8,92(sp)
 2003db0:	da401517 	ldw	r9,84(sp)
 2003db4:	1009883a 	mov	r4,r2
 2003db8:	180b883a 	mov	r5,r3
 2003dbc:	400d883a 	mov	r6,r8
 2003dc0:	480f883a 	mov	r7,r9
 2003dc4:	200b2200 	call	200b220 <__gedf2>
 2003dc8:	00bc570e 	bge	zero,r2,2002f28 <_dtoa_r+0x774>
 2003dcc:	01000c04 	movi	r4,48
 2003dd0:	00000106 	br	2003dd8 <_dtoa_r+0x1624>
 2003dd4:	102f883a 	mov	r23,r2
 2003dd8:	b8bfffc4 	addi	r2,r23,-1
 2003ddc:	10c00007 	ldb	r3,0(r2)
 2003de0:	193ffc26 	beq	r3,r4,2003dd4 <_dtoa_r+0x1620>
 2003de4:	d9801217 	ldw	r6,72(sp)
 2003de8:	d9800515 	stw	r6,20(sp)
 2003dec:	003c1f06 	br	2002e6c <_dtoa_r+0x6b8>
 2003df0:	d8801217 	ldw	r2,72(sp)
 2003df4:	dc001117 	ldw	r16,68(sp)
 2003df8:	d8800515 	stw	r2,20(sp)
 2003dfc:	003cc906 	br	2003124 <_dtoa_r+0x970>
 2003e00:	dd801317 	ldw	r22,76(sp)
 2003e04:	dc001117 	ldw	r16,68(sp)
 2003e08:	dcc01417 	ldw	r19,80(sp)
 2003e0c:	dc801017 	ldw	r18,64(sp)
 2003e10:	003c4506 	br	2002f28 <_dtoa_r+0x774>
 2003e14:	103e5d1e 	bne	r2,zero,200378c <_dtoa_r+0xfd8>
 2003e18:	4080004c 	andi	r2,r8,1
 2003e1c:	103e5b26 	beq	r2,zero,200378c <_dtoa_r+0xfd8>
 2003e20:	003e5706 	br	2003780 <_dtoa_r+0xfcc>
 2003e24:	d8c00317 	ldw	r3,12(sp)
 2003e28:	00800084 	movi	r2,2
 2003e2c:	10c00a16 	blt	r2,r3,2003e58 <_dtoa_r+0x16a4>
 2003e30:	d9000c17 	ldw	r4,48(sp)
 2003e34:	003e8306 	br	2003844 <_dtoa_r+0x1090>
 2003e38:	04400084 	movi	r17,2
 2003e3c:	003b7306 	br	2002c0c <_dtoa_r+0x458>
 2003e40:	d9801217 	ldw	r6,72(sp)
 2003e44:	d9800515 	stw	r6,20(sp)
 2003e48:	003cb606 	br	2003124 <_dtoa_r+0x970>
 2003e4c:	d9001217 	ldw	r4,72(sp)
 2003e50:	d9000515 	stw	r4,20(sp)
 2003e54:	003c0506 	br	2002e6c <_dtoa_r+0x6b8>
 2003e58:	d9800c17 	ldw	r6,48(sp)
 2003e5c:	d9800615 	stw	r6,24(sp)
 2003e60:	003e8306 	br	2003870 <_dtoa_r+0x10bc>
 2003e64:	d9800317 	ldw	r6,12(sp)
 2003e68:	00800084 	movi	r2,2
 2003e6c:	11800216 	blt	r2,r6,2003e78 <_dtoa_r+0x16c4>
 2003e70:	d8800c17 	ldw	r2,48(sp)
 2003e74:	003da606 	br	2003510 <_dtoa_r+0xd5c>
 2003e78:	d8800c17 	ldw	r2,48(sp)
 2003e7c:	d8800615 	stw	r2,24(sp)
 2003e80:	003e7b06 	br	2003870 <_dtoa_r+0x10bc>
 2003e84:	05000044 	movi	r20,1
 2003e88:	003b0506 	br	2002aa0 <_dtoa_r+0x2ec>
 2003e8c:	8009883a 	mov	r4,r16
 2003e90:	80001115 	stw	zero,68(r16)
 2003e94:	000b883a 	mov	r5,zero
 2003e98:	2005e4c0 	call	2005e4c <_Balloc>
 2003e9c:	d8800715 	stw	r2,28(sp)
 2003ea0:	d8c00717 	ldw	r3,28(sp)
 2003ea4:	00bfffc4 	movi	r2,-1
 2003ea8:	01000044 	movi	r4,1
 2003eac:	d8800c15 	stw	r2,48(sp)
 2003eb0:	80c01015 	stw	r3,64(r16)
 2003eb4:	d9000b15 	stw	r4,44(sp)
 2003eb8:	d8800615 	stw	r2,24(sp)
 2003ebc:	d8002215 	stw	zero,136(sp)
 2003ec0:	003c1906 	br	2002f28 <_dtoa_r+0x774>
 2003ec4:	193d2926 	beq	r3,r4,200336c <_dtoa_r+0xbb8>
 2003ec8:	00c00f04 	movi	r3,60
 2003ecc:	1885c83a 	sub	r2,r3,r2
 2003ed0:	003d7b06 	br	20034c0 <_dtoa_r+0xd0c>
 2003ed4:	000b883a 	mov	r5,zero
 2003ed8:	003b1006 	br	2002b1c <_dtoa_r+0x368>

02003edc <__sflush_r>:
 2003edc:	2880030b 	ldhu	r2,12(r5)
 2003ee0:	defffb04 	addi	sp,sp,-20
 2003ee4:	dcc00315 	stw	r19,12(sp)
 2003ee8:	dc400115 	stw	r17,4(sp)
 2003eec:	dfc00415 	stw	ra,16(sp)
 2003ef0:	dc800215 	stw	r18,8(sp)
 2003ef4:	dc000015 	stw	r16,0(sp)
 2003ef8:	10c0020c 	andi	r3,r2,8
 2003efc:	2823883a 	mov	r17,r5
 2003f00:	2027883a 	mov	r19,r4
 2003f04:	1800311e 	bne	r3,zero,2003fcc <__sflush_r+0xf0>
 2003f08:	28c00117 	ldw	r3,4(r5)
 2003f0c:	10820014 	ori	r2,r2,2048
 2003f10:	2880030d 	sth	r2,12(r5)
 2003f14:	00c04b0e 	bge	zero,r3,2004044 <__sflush_r+0x168>
 2003f18:	8a000a17 	ldw	r8,40(r17)
 2003f1c:	40002326 	beq	r8,zero,2003fac <__sflush_r+0xd0>
 2003f20:	9c000017 	ldw	r16,0(r19)
 2003f24:	10c4000c 	andi	r3,r2,4096
 2003f28:	98000015 	stw	zero,0(r19)
 2003f2c:	18004826 	beq	r3,zero,2004050 <__sflush_r+0x174>
 2003f30:	89801417 	ldw	r6,80(r17)
 2003f34:	10c0010c 	andi	r3,r2,4
 2003f38:	18000626 	beq	r3,zero,2003f54 <__sflush_r+0x78>
 2003f3c:	88c00117 	ldw	r3,4(r17)
 2003f40:	88800c17 	ldw	r2,48(r17)
 2003f44:	30cdc83a 	sub	r6,r6,r3
 2003f48:	10000226 	beq	r2,zero,2003f54 <__sflush_r+0x78>
 2003f4c:	88800f17 	ldw	r2,60(r17)
 2003f50:	308dc83a 	sub	r6,r6,r2
 2003f54:	89400717 	ldw	r5,28(r17)
 2003f58:	9809883a 	mov	r4,r19
 2003f5c:	000f883a 	mov	r7,zero
 2003f60:	403ee83a 	callr	r8
 2003f64:	00ffffc4 	movi	r3,-1
 2003f68:	10c04426 	beq	r2,r3,200407c <__sflush_r+0x1a0>
 2003f6c:	88c0030b 	ldhu	r3,12(r17)
 2003f70:	89000417 	ldw	r4,16(r17)
 2003f74:	88000115 	stw	zero,4(r17)
 2003f78:	197dffcc 	andi	r5,r3,63487
 2003f7c:	8940030d 	sth	r5,12(r17)
 2003f80:	89000015 	stw	r4,0(r17)
 2003f84:	18c4000c 	andi	r3,r3,4096
 2003f88:	18002c1e 	bne	r3,zero,200403c <__sflush_r+0x160>
 2003f8c:	89400c17 	ldw	r5,48(r17)
 2003f90:	9c000015 	stw	r16,0(r19)
 2003f94:	28000526 	beq	r5,zero,2003fac <__sflush_r+0xd0>
 2003f98:	88801004 	addi	r2,r17,64
 2003f9c:	28800226 	beq	r5,r2,2003fa8 <__sflush_r+0xcc>
 2003fa0:	9809883a 	mov	r4,r19
 2003fa4:	20046340 	call	2004634 <_free_r>
 2003fa8:	88000c15 	stw	zero,48(r17)
 2003fac:	0005883a 	mov	r2,zero
 2003fb0:	dfc00417 	ldw	ra,16(sp)
 2003fb4:	dcc00317 	ldw	r19,12(sp)
 2003fb8:	dc800217 	ldw	r18,8(sp)
 2003fbc:	dc400117 	ldw	r17,4(sp)
 2003fc0:	dc000017 	ldw	r16,0(sp)
 2003fc4:	dec00504 	addi	sp,sp,20
 2003fc8:	f800283a 	ret
 2003fcc:	2c800417 	ldw	r18,16(r5)
 2003fd0:	903ff626 	beq	r18,zero,2003fac <__sflush_r+0xd0>
 2003fd4:	2c000017 	ldw	r16,0(r5)
 2003fd8:	108000cc 	andi	r2,r2,3
 2003fdc:	2c800015 	stw	r18,0(r5)
 2003fe0:	84a1c83a 	sub	r16,r16,r18
 2003fe4:	1000131e 	bne	r2,zero,2004034 <__sflush_r+0x158>
 2003fe8:	28800517 	ldw	r2,20(r5)
 2003fec:	88800215 	stw	r2,8(r17)
 2003ff0:	04000316 	blt	zero,r16,2004000 <__sflush_r+0x124>
 2003ff4:	003fed06 	br	2003fac <__sflush_r+0xd0>
 2003ff8:	90a5883a 	add	r18,r18,r2
 2003ffc:	043feb0e 	bge	zero,r16,2003fac <__sflush_r+0xd0>
 2004000:	88800917 	ldw	r2,36(r17)
 2004004:	89400717 	ldw	r5,28(r17)
 2004008:	800f883a 	mov	r7,r16
 200400c:	900d883a 	mov	r6,r18
 2004010:	9809883a 	mov	r4,r19
 2004014:	103ee83a 	callr	r2
 2004018:	80a1c83a 	sub	r16,r16,r2
 200401c:	00bff616 	blt	zero,r2,2003ff8 <__sflush_r+0x11c>
 2004020:	88c0030b 	ldhu	r3,12(r17)
 2004024:	00bfffc4 	movi	r2,-1
 2004028:	18c01014 	ori	r3,r3,64
 200402c:	88c0030d 	sth	r3,12(r17)
 2004030:	003fdf06 	br	2003fb0 <__sflush_r+0xd4>
 2004034:	0005883a 	mov	r2,zero
 2004038:	003fec06 	br	2003fec <__sflush_r+0x110>
 200403c:	88801415 	stw	r2,80(r17)
 2004040:	003fd206 	br	2003f8c <__sflush_r+0xb0>
 2004044:	28c00f17 	ldw	r3,60(r5)
 2004048:	00ffb316 	blt	zero,r3,2003f18 <__sflush_r+0x3c>
 200404c:	003fd706 	br	2003fac <__sflush_r+0xd0>
 2004050:	89400717 	ldw	r5,28(r17)
 2004054:	000d883a 	mov	r6,zero
 2004058:	9809883a 	mov	r4,r19
 200405c:	01c00044 	movi	r7,1
 2004060:	403ee83a 	callr	r8
 2004064:	100d883a 	mov	r6,r2
 2004068:	00bfffc4 	movi	r2,-1
 200406c:	30801426 	beq	r6,r2,20040c0 <__sflush_r+0x1e4>
 2004070:	8880030b 	ldhu	r2,12(r17)
 2004074:	8a000a17 	ldw	r8,40(r17)
 2004078:	003fae06 	br	2003f34 <__sflush_r+0x58>
 200407c:	98c00017 	ldw	r3,0(r19)
 2004080:	183fba26 	beq	r3,zero,2003f6c <__sflush_r+0x90>
 2004084:	01000744 	movi	r4,29
 2004088:	19000626 	beq	r3,r4,20040a4 <__sflush_r+0x1c8>
 200408c:	01000584 	movi	r4,22
 2004090:	19000426 	beq	r3,r4,20040a4 <__sflush_r+0x1c8>
 2004094:	88c0030b 	ldhu	r3,12(r17)
 2004098:	18c01014 	ori	r3,r3,64
 200409c:	88c0030d 	sth	r3,12(r17)
 20040a0:	003fc306 	br	2003fb0 <__sflush_r+0xd4>
 20040a4:	8880030b 	ldhu	r2,12(r17)
 20040a8:	88c00417 	ldw	r3,16(r17)
 20040ac:	88000115 	stw	zero,4(r17)
 20040b0:	10bdffcc 	andi	r2,r2,63487
 20040b4:	8880030d 	sth	r2,12(r17)
 20040b8:	88c00015 	stw	r3,0(r17)
 20040bc:	003fb306 	br	2003f8c <__sflush_r+0xb0>
 20040c0:	98800017 	ldw	r2,0(r19)
 20040c4:	103fea26 	beq	r2,zero,2004070 <__sflush_r+0x194>
 20040c8:	00c00744 	movi	r3,29
 20040cc:	10c00226 	beq	r2,r3,20040d8 <__sflush_r+0x1fc>
 20040d0:	00c00584 	movi	r3,22
 20040d4:	10ffd21e 	bne	r2,r3,2004020 <__sflush_r+0x144>
 20040d8:	9c000015 	stw	r16,0(r19)
 20040dc:	0005883a 	mov	r2,zero
 20040e0:	003fb306 	br	2003fb0 <__sflush_r+0xd4>

020040e4 <_fflush_r>:
 20040e4:	defffd04 	addi	sp,sp,-12
 20040e8:	dc000115 	stw	r16,4(sp)
 20040ec:	dfc00215 	stw	ra,8(sp)
 20040f0:	2021883a 	mov	r16,r4
 20040f4:	20000226 	beq	r4,zero,2004100 <_fflush_r+0x1c>
 20040f8:	20800e17 	ldw	r2,56(r4)
 20040fc:	10000c26 	beq	r2,zero,2004130 <_fflush_r+0x4c>
 2004100:	2880030f 	ldh	r2,12(r5)
 2004104:	1000051e 	bne	r2,zero,200411c <_fflush_r+0x38>
 2004108:	0005883a 	mov	r2,zero
 200410c:	dfc00217 	ldw	ra,8(sp)
 2004110:	dc000117 	ldw	r16,4(sp)
 2004114:	dec00304 	addi	sp,sp,12
 2004118:	f800283a 	ret
 200411c:	8009883a 	mov	r4,r16
 2004120:	dfc00217 	ldw	ra,8(sp)
 2004124:	dc000117 	ldw	r16,4(sp)
 2004128:	dec00304 	addi	sp,sp,12
 200412c:	2003edc1 	jmpi	2003edc <__sflush_r>
 2004130:	d9400015 	stw	r5,0(sp)
 2004134:	20044c00 	call	20044c0 <__sinit>
 2004138:	d9400017 	ldw	r5,0(sp)
 200413c:	003ff006 	br	2004100 <_fflush_r+0x1c>

02004140 <fflush>:
 2004140:	20000526 	beq	r4,zero,2004158 <fflush+0x18>
 2004144:	00808074 	movhi	r2,513
 2004148:	10835704 	addi	r2,r2,3420
 200414c:	200b883a 	mov	r5,r4
 2004150:	11000017 	ldw	r4,0(r2)
 2004154:	20040e41 	jmpi	20040e4 <_fflush_r>
 2004158:	00808074 	movhi	r2,513
 200415c:	10835604 	addi	r2,r2,3416
 2004160:	11000017 	ldw	r4,0(r2)
 2004164:	01408034 	movhi	r5,512
 2004168:	29503904 	addi	r5,r5,16612
 200416c:	2004ea81 	jmpi	2004ea8 <_fwalk_reent>

02004170 <__fp_lock>:
 2004170:	0005883a 	mov	r2,zero
 2004174:	f800283a 	ret

02004178 <__fp_unlock>:
 2004178:	0005883a 	mov	r2,zero
 200417c:	f800283a 	ret

02004180 <_cleanup_r>:
 2004180:	01408074 	movhi	r5,513
 2004184:	29630d04 	addi	r5,r5,-29644
 2004188:	2004ea81 	jmpi	2004ea8 <_fwalk_reent>

0200418c <__sinit.part.1>:
 200418c:	defff704 	addi	sp,sp,-36
 2004190:	00c08034 	movhi	r3,512
 2004194:	dfc00815 	stw	ra,32(sp)
 2004198:	ddc00715 	stw	r23,28(sp)
 200419c:	dd800615 	stw	r22,24(sp)
 20041a0:	dd400515 	stw	r21,20(sp)
 20041a4:	dd000415 	stw	r20,16(sp)
 20041a8:	dcc00315 	stw	r19,12(sp)
 20041ac:	dc800215 	stw	r18,8(sp)
 20041b0:	dc400115 	stw	r17,4(sp)
 20041b4:	dc000015 	stw	r16,0(sp)
 20041b8:	18d06004 	addi	r3,r3,16768
 20041bc:	24000117 	ldw	r16,4(r4)
 20041c0:	20c00f15 	stw	r3,60(r4)
 20041c4:	2080bb04 	addi	r2,r4,748
 20041c8:	00c000c4 	movi	r3,3
 20041cc:	20c0b915 	stw	r3,740(r4)
 20041d0:	2080ba15 	stw	r2,744(r4)
 20041d4:	2000b815 	stw	zero,736(r4)
 20041d8:	05c00204 	movi	r23,8
 20041dc:	00800104 	movi	r2,4
 20041e0:	2025883a 	mov	r18,r4
 20041e4:	b80d883a 	mov	r6,r23
 20041e8:	81001704 	addi	r4,r16,92
 20041ec:	000b883a 	mov	r5,zero
 20041f0:	80000015 	stw	zero,0(r16)
 20041f4:	80000115 	stw	zero,4(r16)
 20041f8:	80000215 	stw	zero,8(r16)
 20041fc:	8080030d 	sth	r2,12(r16)
 2004200:	80001915 	stw	zero,100(r16)
 2004204:	8000038d 	sth	zero,14(r16)
 2004208:	80000415 	stw	zero,16(r16)
 200420c:	80000515 	stw	zero,20(r16)
 2004210:	80000615 	stw	zero,24(r16)
 2004214:	2005d280 	call	2005d28 <memset>
 2004218:	05808034 	movhi	r22,512
 200421c:	94400217 	ldw	r17,8(r18)
 2004220:	05408034 	movhi	r21,512
 2004224:	05008034 	movhi	r20,512
 2004228:	04c08034 	movhi	r19,512
 200422c:	b59d0704 	addi	r22,r22,29724
 2004230:	ad5d1e04 	addi	r21,r21,29816
 2004234:	a51d3d04 	addi	r20,r20,29940
 2004238:	9cdd5404 	addi	r19,r19,30032
 200423c:	85800815 	stw	r22,32(r16)
 2004240:	85400915 	stw	r21,36(r16)
 2004244:	85000a15 	stw	r20,40(r16)
 2004248:	84c00b15 	stw	r19,44(r16)
 200424c:	84000715 	stw	r16,28(r16)
 2004250:	00800284 	movi	r2,10
 2004254:	8880030d 	sth	r2,12(r17)
 2004258:	00800044 	movi	r2,1
 200425c:	89001704 	addi	r4,r17,92
 2004260:	b80d883a 	mov	r6,r23
 2004264:	000b883a 	mov	r5,zero
 2004268:	88000015 	stw	zero,0(r17)
 200426c:	88000115 	stw	zero,4(r17)
 2004270:	88000215 	stw	zero,8(r17)
 2004274:	88001915 	stw	zero,100(r17)
 2004278:	8880038d 	sth	r2,14(r17)
 200427c:	88000415 	stw	zero,16(r17)
 2004280:	88000515 	stw	zero,20(r17)
 2004284:	88000615 	stw	zero,24(r17)
 2004288:	2005d280 	call	2005d28 <memset>
 200428c:	94000317 	ldw	r16,12(r18)
 2004290:	00800484 	movi	r2,18
 2004294:	8c400715 	stw	r17,28(r17)
 2004298:	8d800815 	stw	r22,32(r17)
 200429c:	8d400915 	stw	r21,36(r17)
 20042a0:	8d000a15 	stw	r20,40(r17)
 20042a4:	8cc00b15 	stw	r19,44(r17)
 20042a8:	8080030d 	sth	r2,12(r16)
 20042ac:	00800084 	movi	r2,2
 20042b0:	80000015 	stw	zero,0(r16)
 20042b4:	80000115 	stw	zero,4(r16)
 20042b8:	80000215 	stw	zero,8(r16)
 20042bc:	80001915 	stw	zero,100(r16)
 20042c0:	8080038d 	sth	r2,14(r16)
 20042c4:	80000415 	stw	zero,16(r16)
 20042c8:	80000515 	stw	zero,20(r16)
 20042cc:	80000615 	stw	zero,24(r16)
 20042d0:	81001704 	addi	r4,r16,92
 20042d4:	000b883a 	mov	r5,zero
 20042d8:	b80d883a 	mov	r6,r23
 20042dc:	2005d280 	call	2005d28 <memset>
 20042e0:	00800044 	movi	r2,1
 20042e4:	84000715 	stw	r16,28(r16)
 20042e8:	85800815 	stw	r22,32(r16)
 20042ec:	85400915 	stw	r21,36(r16)
 20042f0:	85000a15 	stw	r20,40(r16)
 20042f4:	84c00b15 	stw	r19,44(r16)
 20042f8:	90800e15 	stw	r2,56(r18)
 20042fc:	dfc00817 	ldw	ra,32(sp)
 2004300:	ddc00717 	ldw	r23,28(sp)
 2004304:	dd800617 	ldw	r22,24(sp)
 2004308:	dd400517 	ldw	r21,20(sp)
 200430c:	dd000417 	ldw	r20,16(sp)
 2004310:	dcc00317 	ldw	r19,12(sp)
 2004314:	dc800217 	ldw	r18,8(sp)
 2004318:	dc400117 	ldw	r17,4(sp)
 200431c:	dc000017 	ldw	r16,0(sp)
 2004320:	dec00904 	addi	sp,sp,36
 2004324:	f800283a 	ret

02004328 <__sfmoreglue>:
 2004328:	defffc04 	addi	sp,sp,-16
 200432c:	dc400115 	stw	r17,4(sp)
 2004330:	2c7fffc4 	addi	r17,r5,-1
 2004334:	8c401a24 	muli	r17,r17,104
 2004338:	dc800215 	stw	r18,8(sp)
 200433c:	2825883a 	mov	r18,r5
 2004340:	89401d04 	addi	r5,r17,116
 2004344:	dc000015 	stw	r16,0(sp)
 2004348:	dfc00315 	stw	ra,12(sp)
 200434c:	20052040 	call	2005204 <_malloc_r>
 2004350:	1021883a 	mov	r16,r2
 2004354:	10000726 	beq	r2,zero,2004374 <__sfmoreglue+0x4c>
 2004358:	11000304 	addi	r4,r2,12
 200435c:	10000015 	stw	zero,0(r2)
 2004360:	14800115 	stw	r18,4(r2)
 2004364:	11000215 	stw	r4,8(r2)
 2004368:	000b883a 	mov	r5,zero
 200436c:	89801a04 	addi	r6,r17,104
 2004370:	2005d280 	call	2005d28 <memset>
 2004374:	8005883a 	mov	r2,r16
 2004378:	dfc00317 	ldw	ra,12(sp)
 200437c:	dc800217 	ldw	r18,8(sp)
 2004380:	dc400117 	ldw	r17,4(sp)
 2004384:	dc000017 	ldw	r16,0(sp)
 2004388:	dec00404 	addi	sp,sp,16
 200438c:	f800283a 	ret

02004390 <__sfp>:
 2004390:	00808074 	movhi	r2,513
 2004394:	defffb04 	addi	sp,sp,-20
 2004398:	10835604 	addi	r2,r2,3416
 200439c:	dc800215 	stw	r18,8(sp)
 20043a0:	14800017 	ldw	r18,0(r2)
 20043a4:	dcc00315 	stw	r19,12(sp)
 20043a8:	dfc00415 	stw	ra,16(sp)
 20043ac:	90800e17 	ldw	r2,56(r18)
 20043b0:	dc400115 	stw	r17,4(sp)
 20043b4:	dc000015 	stw	r16,0(sp)
 20043b8:	2027883a 	mov	r19,r4
 20043bc:	1000021e 	bne	r2,zero,20043c8 <__sfp+0x38>
 20043c0:	9009883a 	mov	r4,r18
 20043c4:	200418c0 	call	200418c <__sinit.part.1>
 20043c8:	9480b804 	addi	r18,r18,736
 20043cc:	047fffc4 	movi	r17,-1
 20043d0:	91400117 	ldw	r5,4(r18)
 20043d4:	94000217 	ldw	r16,8(r18)
 20043d8:	297fffc4 	addi	r5,r5,-1
 20043dc:	28000a16 	blt	r5,zero,2004408 <__sfp+0x78>
 20043e0:	8080030f 	ldh	r2,12(r16)
 20043e4:	10000c26 	beq	r2,zero,2004418 <__sfp+0x88>
 20043e8:	80c01d04 	addi	r3,r16,116
 20043ec:	00000206 	br	20043f8 <__sfp+0x68>
 20043f0:	18bfe60f 	ldh	r2,-104(r3)
 20043f4:	10000826 	beq	r2,zero,2004418 <__sfp+0x88>
 20043f8:	297fffc4 	addi	r5,r5,-1
 20043fc:	1c3ffd04 	addi	r16,r3,-12
 2004400:	18c01a04 	addi	r3,r3,104
 2004404:	2c7ffa1e 	bne	r5,r17,20043f0 <__sfp+0x60>
 2004408:	90800017 	ldw	r2,0(r18)
 200440c:	10001d26 	beq	r2,zero,2004484 <__sfp+0xf4>
 2004410:	1025883a 	mov	r18,r2
 2004414:	003fee06 	br	20043d0 <__sfp+0x40>
 2004418:	00bfffc4 	movi	r2,-1
 200441c:	8080038d 	sth	r2,14(r16)
 2004420:	00800044 	movi	r2,1
 2004424:	8080030d 	sth	r2,12(r16)
 2004428:	80001915 	stw	zero,100(r16)
 200442c:	80000015 	stw	zero,0(r16)
 2004430:	80000215 	stw	zero,8(r16)
 2004434:	80000115 	stw	zero,4(r16)
 2004438:	80000415 	stw	zero,16(r16)
 200443c:	80000515 	stw	zero,20(r16)
 2004440:	80000615 	stw	zero,24(r16)
 2004444:	81001704 	addi	r4,r16,92
 2004448:	000b883a 	mov	r5,zero
 200444c:	01800204 	movi	r6,8
 2004450:	2005d280 	call	2005d28 <memset>
 2004454:	8005883a 	mov	r2,r16
 2004458:	80000c15 	stw	zero,48(r16)
 200445c:	80000d15 	stw	zero,52(r16)
 2004460:	80001115 	stw	zero,68(r16)
 2004464:	80001215 	stw	zero,72(r16)
 2004468:	dfc00417 	ldw	ra,16(sp)
 200446c:	dcc00317 	ldw	r19,12(sp)
 2004470:	dc800217 	ldw	r18,8(sp)
 2004474:	dc400117 	ldw	r17,4(sp)
 2004478:	dc000017 	ldw	r16,0(sp)
 200447c:	dec00504 	addi	sp,sp,20
 2004480:	f800283a 	ret
 2004484:	9809883a 	mov	r4,r19
 2004488:	01400104 	movi	r5,4
 200448c:	20043280 	call	2004328 <__sfmoreglue>
 2004490:	90800015 	stw	r2,0(r18)
 2004494:	103fde1e 	bne	r2,zero,2004410 <__sfp+0x80>
 2004498:	00800304 	movi	r2,12
 200449c:	98800015 	stw	r2,0(r19)
 20044a0:	0005883a 	mov	r2,zero
 20044a4:	003ff006 	br	2004468 <__sfp+0xd8>

020044a8 <_cleanup>:
 20044a8:	00808074 	movhi	r2,513
 20044ac:	10835604 	addi	r2,r2,3416
 20044b0:	11000017 	ldw	r4,0(r2)
 20044b4:	01408074 	movhi	r5,513
 20044b8:	29630d04 	addi	r5,r5,-29644
 20044bc:	2004ea81 	jmpi	2004ea8 <_fwalk_reent>

020044c0 <__sinit>:
 20044c0:	20800e17 	ldw	r2,56(r4)
 20044c4:	10000126 	beq	r2,zero,20044cc <__sinit+0xc>
 20044c8:	f800283a 	ret
 20044cc:	200418c1 	jmpi	200418c <__sinit.part.1>

020044d0 <__sfp_lock_acquire>:
 20044d0:	f800283a 	ret

020044d4 <__sfp_lock_release>:
 20044d4:	f800283a 	ret

020044d8 <__sinit_lock_acquire>:
 20044d8:	f800283a 	ret

020044dc <__sinit_lock_release>:
 20044dc:	f800283a 	ret

020044e0 <__fp_lock_all>:
 20044e0:	00808074 	movhi	r2,513
 20044e4:	10835704 	addi	r2,r2,3420
 20044e8:	11000017 	ldw	r4,0(r2)
 20044ec:	01408034 	movhi	r5,512
 20044f0:	29505c04 	addi	r5,r5,16752
 20044f4:	2004de41 	jmpi	2004de4 <_fwalk>

020044f8 <__fp_unlock_all>:
 20044f8:	00808074 	movhi	r2,513
 20044fc:	10835704 	addi	r2,r2,3420
 2004500:	11000017 	ldw	r4,0(r2)
 2004504:	01408034 	movhi	r5,512
 2004508:	29505e04 	addi	r5,r5,16760
 200450c:	2004de41 	jmpi	2004de4 <_fwalk>

02004510 <_malloc_trim_r>:
 2004510:	defffb04 	addi	sp,sp,-20
 2004514:	dcc00315 	stw	r19,12(sp)
 2004518:	04c08074 	movhi	r19,513
 200451c:	dc800215 	stw	r18,8(sp)
 2004520:	dc400115 	stw	r17,4(sp)
 2004524:	dc000015 	stw	r16,0(sp)
 2004528:	dfc00415 	stw	ra,16(sp)
 200452c:	2821883a 	mov	r16,r5
 2004530:	9cfdd204 	addi	r19,r19,-2232
 2004534:	2025883a 	mov	r18,r4
 2004538:	200cbf40 	call	200cbf4 <__malloc_lock>
 200453c:	98800217 	ldw	r2,8(r19)
 2004540:	14400117 	ldw	r17,4(r2)
 2004544:	00bfff04 	movi	r2,-4
 2004548:	88a2703a 	and	r17,r17,r2
 200454c:	8c21c83a 	sub	r16,r17,r16
 2004550:	8403fbc4 	addi	r16,r16,4079
 2004554:	8020d33a 	srli	r16,r16,12
 2004558:	0083ffc4 	movi	r2,4095
 200455c:	843fffc4 	addi	r16,r16,-1
 2004560:	8020933a 	slli	r16,r16,12
 2004564:	1400060e 	bge	r2,r16,2004580 <_malloc_trim_r+0x70>
 2004568:	9009883a 	mov	r4,r18
 200456c:	000b883a 	mov	r5,zero
 2004570:	20073c80 	call	20073c8 <_sbrk_r>
 2004574:	98c00217 	ldw	r3,8(r19)
 2004578:	1c47883a 	add	r3,r3,r17
 200457c:	10c00a26 	beq	r2,r3,20045a8 <_malloc_trim_r+0x98>
 2004580:	9009883a 	mov	r4,r18
 2004584:	200cc140 	call	200cc14 <__malloc_unlock>
 2004588:	0005883a 	mov	r2,zero
 200458c:	dfc00417 	ldw	ra,16(sp)
 2004590:	dcc00317 	ldw	r19,12(sp)
 2004594:	dc800217 	ldw	r18,8(sp)
 2004598:	dc400117 	ldw	r17,4(sp)
 200459c:	dc000017 	ldw	r16,0(sp)
 20045a0:	dec00504 	addi	sp,sp,20
 20045a4:	f800283a 	ret
 20045a8:	9009883a 	mov	r4,r18
 20045ac:	040bc83a 	sub	r5,zero,r16
 20045b0:	20073c80 	call	20073c8 <_sbrk_r>
 20045b4:	00ffffc4 	movi	r3,-1
 20045b8:	10c00d26 	beq	r2,r3,20045f0 <_malloc_trim_r+0xe0>
 20045bc:	00c08074 	movhi	r3,513
 20045c0:	18ca2e04 	addi	r3,r3,10424
 20045c4:	18800017 	ldw	r2,0(r3)
 20045c8:	99000217 	ldw	r4,8(r19)
 20045cc:	8c23c83a 	sub	r17,r17,r16
 20045d0:	8c400054 	ori	r17,r17,1
 20045d4:	1421c83a 	sub	r16,r2,r16
 20045d8:	24400115 	stw	r17,4(r4)
 20045dc:	9009883a 	mov	r4,r18
 20045e0:	1c000015 	stw	r16,0(r3)
 20045e4:	200cc140 	call	200cc14 <__malloc_unlock>
 20045e8:	00800044 	movi	r2,1
 20045ec:	003fe706 	br	200458c <_malloc_trim_r+0x7c>
 20045f0:	9009883a 	mov	r4,r18
 20045f4:	000b883a 	mov	r5,zero
 20045f8:	20073c80 	call	20073c8 <_sbrk_r>
 20045fc:	99000217 	ldw	r4,8(r19)
 2004600:	014003c4 	movi	r5,15
 2004604:	1107c83a 	sub	r3,r2,r4
 2004608:	28ffdd0e 	bge	r5,r3,2004580 <_malloc_trim_r+0x70>
 200460c:	01408074 	movhi	r5,513
 2004610:	29435904 	addi	r5,r5,3428
 2004614:	29400017 	ldw	r5,0(r5)
 2004618:	18c00054 	ori	r3,r3,1
 200461c:	20c00115 	stw	r3,4(r4)
 2004620:	00c08074 	movhi	r3,513
 2004624:	1145c83a 	sub	r2,r2,r5
 2004628:	18ca2e04 	addi	r3,r3,10424
 200462c:	18800015 	stw	r2,0(r3)
 2004630:	003fd306 	br	2004580 <_malloc_trim_r+0x70>

02004634 <_free_r>:
 2004634:	28004c26 	beq	r5,zero,2004768 <_free_r+0x134>
 2004638:	defffd04 	addi	sp,sp,-12
 200463c:	dc400115 	stw	r17,4(sp)
 2004640:	dc000015 	stw	r16,0(sp)
 2004644:	2023883a 	mov	r17,r4
 2004648:	2821883a 	mov	r16,r5
 200464c:	dfc00215 	stw	ra,8(sp)
 2004650:	200cbf40 	call	200cbf4 <__malloc_lock>
 2004654:	813fff17 	ldw	r4,-4(r16)
 2004658:	00bfff84 	movi	r2,-2
 200465c:	02408074 	movhi	r9,513
 2004660:	81bffe04 	addi	r6,r16,-8
 2004664:	2084703a 	and	r2,r4,r2
 2004668:	4a7dd204 	addi	r9,r9,-2232
 200466c:	308b883a 	add	r5,r6,r2
 2004670:	2a000117 	ldw	r8,4(r5)
 2004674:	49c00217 	ldw	r7,8(r9)
 2004678:	00ffff04 	movi	r3,-4
 200467c:	40c6703a 	and	r3,r8,r3
 2004680:	39405326 	beq	r7,r5,20047d0 <_free_r+0x19c>
 2004684:	28c00115 	stw	r3,4(r5)
 2004688:	2100004c 	andi	r4,r4,1
 200468c:	2000091e 	bne	r4,zero,20046b4 <_free_r+0x80>
 2004690:	81fffe17 	ldw	r7,-8(r16)
 2004694:	4a000204 	addi	r8,r9,8
 2004698:	31cdc83a 	sub	r6,r6,r7
 200469c:	31000217 	ldw	r4,8(r6)
 20046a0:	11c5883a 	add	r2,r2,r7
 20046a4:	22006126 	beq	r4,r8,200482c <_free_r+0x1f8>
 20046a8:	31c00317 	ldw	r7,12(r6)
 20046ac:	21c00315 	stw	r7,12(r4)
 20046b0:	39000215 	stw	r4,8(r7)
 20046b4:	28c9883a 	add	r4,r5,r3
 20046b8:	21c00117 	ldw	r7,4(r4)
 20046bc:	39c0004c 	andi	r7,r7,1
 20046c0:	38000d1e 	bne	r7,zero,20046f8 <_free_r+0xc4>
 20046c4:	29000217 	ldw	r4,8(r5)
 20046c8:	10c5883a 	add	r2,r2,r3
 20046cc:	00c08074 	movhi	r3,513
 20046d0:	18fdd404 	addi	r3,r3,-2224
 20046d4:	20c07526 	beq	r4,r3,20048ac <_free_r+0x278>
 20046d8:	29c00317 	ldw	r7,12(r5)
 20046dc:	11400054 	ori	r5,r2,1
 20046e0:	3087883a 	add	r3,r6,r2
 20046e4:	21c00315 	stw	r7,12(r4)
 20046e8:	39000215 	stw	r4,8(r7)
 20046ec:	31400115 	stw	r5,4(r6)
 20046f0:	18800015 	stw	r2,0(r3)
 20046f4:	00000406 	br	2004708 <_free_r+0xd4>
 20046f8:	10c00054 	ori	r3,r2,1
 20046fc:	30c00115 	stw	r3,4(r6)
 2004700:	3087883a 	add	r3,r6,r2
 2004704:	18800015 	stw	r2,0(r3)
 2004708:	00c07fc4 	movi	r3,511
 200470c:	18801736 	bltu	r3,r2,200476c <_free_r+0x138>
 2004710:	1004d0fa 	srli	r2,r2,3
 2004714:	01400044 	movi	r5,1
 2004718:	49000117 	ldw	r4,4(r9)
 200471c:	1087883a 	add	r3,r2,r2
 2004720:	18c7883a 	add	r3,r3,r3
 2004724:	1005d0ba 	srai	r2,r2,2
 2004728:	18c7883a 	add	r3,r3,r3
 200472c:	1a47883a 	add	r3,r3,r9
 2004730:	19c00217 	ldw	r7,8(r3)
 2004734:	2884983a 	sll	r2,r5,r2
 2004738:	30c00315 	stw	r3,12(r6)
 200473c:	31c00215 	stw	r7,8(r6)
 2004740:	1104b03a 	or	r2,r2,r4
 2004744:	19800215 	stw	r6,8(r3)
 2004748:	48800115 	stw	r2,4(r9)
 200474c:	39800315 	stw	r6,12(r7)
 2004750:	8809883a 	mov	r4,r17
 2004754:	dfc00217 	ldw	ra,8(sp)
 2004758:	dc400117 	ldw	r17,4(sp)
 200475c:	dc000017 	ldw	r16,0(sp)
 2004760:	dec00304 	addi	sp,sp,12
 2004764:	200cc141 	jmpi	200cc14 <__malloc_unlock>
 2004768:	f800283a 	ret
 200476c:	1006d27a 	srli	r3,r2,9
 2004770:	01000104 	movi	r4,4
 2004774:	20c04036 	bltu	r4,r3,2004878 <_free_r+0x244>
 2004778:	1006d1ba 	srli	r3,r2,6
 200477c:	19400e04 	addi	r5,r3,56
 2004780:	2947883a 	add	r3,r5,r5
 2004784:	18c7883a 	add	r3,r3,r3
 2004788:	18c7883a 	add	r3,r3,r3
 200478c:	1a49883a 	add	r4,r3,r9
 2004790:	20c00217 	ldw	r3,8(r4)
 2004794:	01c08074 	movhi	r7,513
 2004798:	39fdd204 	addi	r7,r7,-2232
 200479c:	19003b26 	beq	r3,r4,200488c <_free_r+0x258>
 20047a0:	01ffff04 	movi	r7,-4
 20047a4:	19400117 	ldw	r5,4(r3)
 20047a8:	29ca703a 	and	r5,r5,r7
 20047ac:	1140022e 	bgeu	r2,r5,20047b8 <_free_r+0x184>
 20047b0:	18c00217 	ldw	r3,8(r3)
 20047b4:	20fffb1e 	bne	r4,r3,20047a4 <_free_r+0x170>
 20047b8:	18800317 	ldw	r2,12(r3)
 20047bc:	30800315 	stw	r2,12(r6)
 20047c0:	30c00215 	stw	r3,8(r6)
 20047c4:	11800215 	stw	r6,8(r2)
 20047c8:	19800315 	stw	r6,12(r3)
 20047cc:	003fe006 	br	2004750 <_free_r+0x11c>
 20047d0:	2100004c 	andi	r4,r4,1
 20047d4:	1885883a 	add	r2,r3,r2
 20047d8:	2000071e 	bne	r4,zero,20047f8 <_free_r+0x1c4>
 20047dc:	817ffe17 	ldw	r5,-8(r16)
 20047e0:	314dc83a 	sub	r6,r6,r5
 20047e4:	30c00317 	ldw	r3,12(r6)
 20047e8:	31000217 	ldw	r4,8(r6)
 20047ec:	1145883a 	add	r2,r2,r5
 20047f0:	20c00315 	stw	r3,12(r4)
 20047f4:	19000215 	stw	r4,8(r3)
 20047f8:	10c00054 	ori	r3,r2,1
 20047fc:	30c00115 	stw	r3,4(r6)
 2004800:	00c08074 	movhi	r3,513
 2004804:	18c35a04 	addi	r3,r3,3432
 2004808:	18c00017 	ldw	r3,0(r3)
 200480c:	49800215 	stw	r6,8(r9)
 2004810:	10ffcf36 	bltu	r2,r3,2004750 <_free_r+0x11c>
 2004814:	00808074 	movhi	r2,513
 2004818:	108a2604 	addi	r2,r2,10392
 200481c:	11400017 	ldw	r5,0(r2)
 2004820:	8809883a 	mov	r4,r17
 2004824:	20045100 	call	2004510 <_malloc_trim_r>
 2004828:	003fc906 	br	2004750 <_free_r+0x11c>
 200482c:	28c9883a 	add	r4,r5,r3
 2004830:	21000117 	ldw	r4,4(r4)
 2004834:	2100004c 	andi	r4,r4,1
 2004838:	20000a1e 	bne	r4,zero,2004864 <_free_r+0x230>
 200483c:	29000317 	ldw	r4,12(r5)
 2004840:	29400217 	ldw	r5,8(r5)
 2004844:	10c5883a 	add	r2,r2,r3
 2004848:	10c00054 	ori	r3,r2,1
 200484c:	29000315 	stw	r4,12(r5)
 2004850:	21400215 	stw	r5,8(r4)
 2004854:	30c00115 	stw	r3,4(r6)
 2004858:	308d883a 	add	r6,r6,r2
 200485c:	30800015 	stw	r2,0(r6)
 2004860:	003fbb06 	br	2004750 <_free_r+0x11c>
 2004864:	10c00054 	ori	r3,r2,1
 2004868:	30c00115 	stw	r3,4(r6)
 200486c:	308d883a 	add	r6,r6,r2
 2004870:	30800015 	stw	r2,0(r6)
 2004874:	003fb606 	br	2004750 <_free_r+0x11c>
 2004878:	01000504 	movi	r4,20
 200487c:	20c01436 	bltu	r4,r3,20048d0 <_free_r+0x29c>
 2004880:	194016c4 	addi	r5,r3,91
 2004884:	2947883a 	add	r3,r5,r5
 2004888:	003fbe06 	br	2004784 <_free_r+0x150>
 200488c:	280bd0ba 	srai	r5,r5,2
 2004890:	00800044 	movi	r2,1
 2004894:	39000117 	ldw	r4,4(r7)
 2004898:	114a983a 	sll	r5,r2,r5
 200489c:	1805883a 	mov	r2,r3
 20048a0:	2908b03a 	or	r4,r5,r4
 20048a4:	39000115 	stw	r4,4(r7)
 20048a8:	003fc406 	br	20047bc <_free_r+0x188>
 20048ac:	49800515 	stw	r6,20(r9)
 20048b0:	49800415 	stw	r6,16(r9)
 20048b4:	10c00054 	ori	r3,r2,1
 20048b8:	31000315 	stw	r4,12(r6)
 20048bc:	31000215 	stw	r4,8(r6)
 20048c0:	30c00115 	stw	r3,4(r6)
 20048c4:	308d883a 	add	r6,r6,r2
 20048c8:	30800015 	stw	r2,0(r6)
 20048cc:	003fa006 	br	2004750 <_free_r+0x11c>
 20048d0:	01001504 	movi	r4,84
 20048d4:	20c00436 	bltu	r4,r3,20048e8 <_free_r+0x2b4>
 20048d8:	1006d33a 	srli	r3,r2,12
 20048dc:	19401b84 	addi	r5,r3,110
 20048e0:	2947883a 	add	r3,r5,r5
 20048e4:	003fa706 	br	2004784 <_free_r+0x150>
 20048e8:	01005504 	movi	r4,340
 20048ec:	20c00436 	bltu	r4,r3,2004900 <_free_r+0x2cc>
 20048f0:	1006d3fa 	srli	r3,r2,15
 20048f4:	19401dc4 	addi	r5,r3,119
 20048f8:	2947883a 	add	r3,r5,r5
 20048fc:	003fa106 	br	2004784 <_free_r+0x150>
 2004900:	01015504 	movi	r4,1364
 2004904:	20c00436 	bltu	r4,r3,2004918 <_free_r+0x2e4>
 2004908:	1006d4ba 	srli	r3,r2,18
 200490c:	19401f04 	addi	r5,r3,124
 2004910:	2947883a 	add	r3,r5,r5
 2004914:	003f9b06 	br	2004784 <_free_r+0x150>
 2004918:	00c03f04 	movi	r3,252
 200491c:	01401f84 	movi	r5,126
 2004920:	003f9806 	br	2004784 <_free_r+0x150>

02004924 <__sfvwrite_r>:
 2004924:	30800217 	ldw	r2,8(r6)
 2004928:	10006726 	beq	r2,zero,2004ac8 <__sfvwrite_r+0x1a4>
 200492c:	defff404 	addi	sp,sp,-48
 2004930:	dd000615 	stw	r20,24(sp)
 2004934:	2029883a 	mov	r20,r4
 2004938:	2900030b 	ldhu	r4,12(r5)
 200493c:	ddc00915 	stw	r23,36(sp)
 2004940:	dc000215 	stw	r16,8(sp)
 2004944:	dfc00b15 	stw	ra,44(sp)
 2004948:	df000a15 	stw	fp,40(sp)
 200494c:	dd800815 	stw	r22,32(sp)
 2004950:	dd400715 	stw	r21,28(sp)
 2004954:	dcc00515 	stw	r19,20(sp)
 2004958:	dc800415 	stw	r18,16(sp)
 200495c:	dc400315 	stw	r17,12(sp)
 2004960:	2080020c 	andi	r2,r4,8
 2004964:	2821883a 	mov	r16,r5
 2004968:	302f883a 	mov	r23,r6
 200496c:	10002726 	beq	r2,zero,2004a0c <__sfvwrite_r+0xe8>
 2004970:	28800417 	ldw	r2,16(r5)
 2004974:	10002526 	beq	r2,zero,2004a0c <__sfvwrite_r+0xe8>
 2004978:	2080008c 	andi	r2,r4,2
 200497c:	bc400017 	ldw	r17,0(r23)
 2004980:	10002a26 	beq	r2,zero,2004a2c <__sfvwrite_r+0x108>
 2004984:	05600034 	movhi	r21,32768
 2004988:	0027883a 	mov	r19,zero
 200498c:	0025883a 	mov	r18,zero
 2004990:	ad7f0004 	addi	r21,r21,-1024
 2004994:	980d883a 	mov	r6,r19
 2004998:	a009883a 	mov	r4,r20
 200499c:	90004626 	beq	r18,zero,2004ab8 <__sfvwrite_r+0x194>
 20049a0:	900f883a 	mov	r7,r18
 20049a4:	81400717 	ldw	r5,28(r16)
 20049a8:	ac80022e 	bgeu	r21,r18,20049b4 <__sfvwrite_r+0x90>
 20049ac:	01e00034 	movhi	r7,32768
 20049b0:	39ff0004 	addi	r7,r7,-1024
 20049b4:	80800917 	ldw	r2,36(r16)
 20049b8:	103ee83a 	callr	r2
 20049bc:	0080520e 	bge	zero,r2,2004b08 <__sfvwrite_r+0x1e4>
 20049c0:	b8c00217 	ldw	r3,8(r23)
 20049c4:	98a7883a 	add	r19,r19,r2
 20049c8:	90a5c83a 	sub	r18,r18,r2
 20049cc:	1885c83a 	sub	r2,r3,r2
 20049d0:	b8800215 	stw	r2,8(r23)
 20049d4:	103fef1e 	bne	r2,zero,2004994 <__sfvwrite_r+0x70>
 20049d8:	0005883a 	mov	r2,zero
 20049dc:	dfc00b17 	ldw	ra,44(sp)
 20049e0:	df000a17 	ldw	fp,40(sp)
 20049e4:	ddc00917 	ldw	r23,36(sp)
 20049e8:	dd800817 	ldw	r22,32(sp)
 20049ec:	dd400717 	ldw	r21,28(sp)
 20049f0:	dd000617 	ldw	r20,24(sp)
 20049f4:	dcc00517 	ldw	r19,20(sp)
 20049f8:	dc800417 	ldw	r18,16(sp)
 20049fc:	dc400317 	ldw	r17,12(sp)
 2004a00:	dc000217 	ldw	r16,8(sp)
 2004a04:	dec00c04 	addi	sp,sp,48
 2004a08:	f800283a 	ret
 2004a0c:	a009883a 	mov	r4,r20
 2004a10:	800b883a 	mov	r5,r16
 2004a14:	20024600 	call	2002460 <__swsetup_r>
 2004a18:	1000ec1e 	bne	r2,zero,2004dcc <__sfvwrite_r+0x4a8>
 2004a1c:	8100030b 	ldhu	r4,12(r16)
 2004a20:	bc400017 	ldw	r17,0(r23)
 2004a24:	2080008c 	andi	r2,r4,2
 2004a28:	103fd61e 	bne	r2,zero,2004984 <__sfvwrite_r+0x60>
 2004a2c:	2080004c 	andi	r2,r4,1
 2004a30:	10003a1e 	bne	r2,zero,2004b1c <__sfvwrite_r+0x1f8>
 2004a34:	0039883a 	mov	fp,zero
 2004a38:	0025883a 	mov	r18,zero
 2004a3c:	90001a26 	beq	r18,zero,2004aa8 <__sfvwrite_r+0x184>
 2004a40:	2080800c 	andi	r2,r4,512
 2004a44:	85800217 	ldw	r22,8(r16)
 2004a48:	10007626 	beq	r2,zero,2004c24 <__sfvwrite_r+0x300>
 2004a4c:	b027883a 	mov	r19,r22
 2004a50:	95809436 	bltu	r18,r22,2004ca4 <__sfvwrite_r+0x380>
 2004a54:	2081200c 	andi	r2,r4,1152
 2004a58:	10009f1e 	bne	r2,zero,2004cd8 <__sfvwrite_r+0x3b4>
 2004a5c:	81000017 	ldw	r4,0(r16)
 2004a60:	e00b883a 	mov	r5,fp
 2004a64:	980d883a 	mov	r6,r19
 2004a68:	2005bcc0 	call	2005bcc <memmove>
 2004a6c:	81000217 	ldw	r4,8(r16)
 2004a70:	81400017 	ldw	r5,0(r16)
 2004a74:	9005883a 	mov	r2,r18
 2004a78:	2587c83a 	sub	r3,r4,r22
 2004a7c:	2ce7883a 	add	r19,r5,r19
 2004a80:	80c00215 	stw	r3,8(r16)
 2004a84:	84c00015 	stw	r19,0(r16)
 2004a88:	b8c00217 	ldw	r3,8(r23)
 2004a8c:	e0b9883a 	add	fp,fp,r2
 2004a90:	90a5c83a 	sub	r18,r18,r2
 2004a94:	1885c83a 	sub	r2,r3,r2
 2004a98:	b8800215 	stw	r2,8(r23)
 2004a9c:	103fce26 	beq	r2,zero,20049d8 <__sfvwrite_r+0xb4>
 2004aa0:	8100030b 	ldhu	r4,12(r16)
 2004aa4:	903fe61e 	bne	r18,zero,2004a40 <__sfvwrite_r+0x11c>
 2004aa8:	8f000017 	ldw	fp,0(r17)
 2004aac:	8c800117 	ldw	r18,4(r17)
 2004ab0:	8c400204 	addi	r17,r17,8
 2004ab4:	003fe106 	br	2004a3c <__sfvwrite_r+0x118>
 2004ab8:	8cc00017 	ldw	r19,0(r17)
 2004abc:	8c800117 	ldw	r18,4(r17)
 2004ac0:	8c400204 	addi	r17,r17,8
 2004ac4:	003fb306 	br	2004994 <__sfvwrite_r+0x70>
 2004ac8:	0005883a 	mov	r2,zero
 2004acc:	f800283a 	ret
 2004ad0:	00a00034 	movhi	r2,32768
 2004ad4:	10bfffc4 	addi	r2,r2,-1
 2004ad8:	9009883a 	mov	r4,r18
 2004adc:	1480012e 	bgeu	r2,r18,2004ae4 <__sfvwrite_r+0x1c0>
 2004ae0:	1009883a 	mov	r4,r2
 2004ae4:	980b883a 	mov	r5,r19
 2004ae8:	2009f740 	call	2009f74 <__divsi3>
 2004aec:	81400717 	ldw	r5,28(r16)
 2004af0:	80c00917 	ldw	r3,36(r16)
 2004af4:	988f383a 	mul	r7,r19,r2
 2004af8:	a009883a 	mov	r4,r20
 2004afc:	e00d883a 	mov	r6,fp
 2004b00:	183ee83a 	callr	r3
 2004b04:	00bfe016 	blt	zero,r2,2004a88 <__sfvwrite_r+0x164>
 2004b08:	8080030b 	ldhu	r2,12(r16)
 2004b0c:	10801014 	ori	r2,r2,64
 2004b10:	8080030d 	sth	r2,12(r16)
 2004b14:	00bfffc4 	movi	r2,-1
 2004b18:	003fb006 	br	20049dc <__sfvwrite_r+0xb8>
 2004b1c:	0027883a 	mov	r19,zero
 2004b20:	0011883a 	mov	r8,zero
 2004b24:	0039883a 	mov	fp,zero
 2004b28:	0025883a 	mov	r18,zero
 2004b2c:	90001f26 	beq	r18,zero,2004bac <__sfvwrite_r+0x288>
 2004b30:	40006026 	beq	r8,zero,2004cb4 <__sfvwrite_r+0x390>
 2004b34:	982b883a 	mov	r21,r19
 2004b38:	94c0012e 	bgeu	r18,r19,2004b40 <__sfvwrite_r+0x21c>
 2004b3c:	902b883a 	mov	r21,r18
 2004b40:	81000017 	ldw	r4,0(r16)
 2004b44:	80800417 	ldw	r2,16(r16)
 2004b48:	a82d883a 	mov	r22,r21
 2004b4c:	81800217 	ldw	r6,8(r16)
 2004b50:	81c00517 	ldw	r7,20(r16)
 2004b54:	1100022e 	bgeu	r2,r4,2004b60 <__sfvwrite_r+0x23c>
 2004b58:	31c7883a 	add	r3,r6,r7
 2004b5c:	1d401816 	blt	r3,r21,2004bc0 <__sfvwrite_r+0x29c>
 2004b60:	a9c04416 	blt	r21,r7,2004c74 <__sfvwrite_r+0x350>
 2004b64:	80800917 	ldw	r2,36(r16)
 2004b68:	81400717 	ldw	r5,28(r16)
 2004b6c:	a009883a 	mov	r4,r20
 2004b70:	da000115 	stw	r8,4(sp)
 2004b74:	e00d883a 	mov	r6,fp
 2004b78:	103ee83a 	callr	r2
 2004b7c:	102d883a 	mov	r22,r2
 2004b80:	da000117 	ldw	r8,4(sp)
 2004b84:	00bfe00e 	bge	zero,r2,2004b08 <__sfvwrite_r+0x1e4>
 2004b88:	9da7c83a 	sub	r19,r19,r22
 2004b8c:	98001f26 	beq	r19,zero,2004c0c <__sfvwrite_r+0x2e8>
 2004b90:	b8800217 	ldw	r2,8(r23)
 2004b94:	e5b9883a 	add	fp,fp,r22
 2004b98:	95a5c83a 	sub	r18,r18,r22
 2004b9c:	15adc83a 	sub	r22,r2,r22
 2004ba0:	bd800215 	stw	r22,8(r23)
 2004ba4:	b03f8c26 	beq	r22,zero,20049d8 <__sfvwrite_r+0xb4>
 2004ba8:	903fe11e 	bne	r18,zero,2004b30 <__sfvwrite_r+0x20c>
 2004bac:	8f000017 	ldw	fp,0(r17)
 2004bb0:	8c800117 	ldw	r18,4(r17)
 2004bb4:	0011883a 	mov	r8,zero
 2004bb8:	8c400204 	addi	r17,r17,8
 2004bbc:	003fdb06 	br	2004b2c <__sfvwrite_r+0x208>
 2004bc0:	180d883a 	mov	r6,r3
 2004bc4:	e00b883a 	mov	r5,fp
 2004bc8:	da000115 	stw	r8,4(sp)
 2004bcc:	d8c00015 	stw	r3,0(sp)
 2004bd0:	2005bcc0 	call	2005bcc <memmove>
 2004bd4:	d8c00017 	ldw	r3,0(sp)
 2004bd8:	80800017 	ldw	r2,0(r16)
 2004bdc:	a009883a 	mov	r4,r20
 2004be0:	800b883a 	mov	r5,r16
 2004be4:	10c5883a 	add	r2,r2,r3
 2004be8:	80800015 	stw	r2,0(r16)
 2004bec:	d8c00015 	stw	r3,0(sp)
 2004bf0:	20040e40 	call	20040e4 <_fflush_r>
 2004bf4:	d8c00017 	ldw	r3,0(sp)
 2004bf8:	da000117 	ldw	r8,4(sp)
 2004bfc:	103fc21e 	bne	r2,zero,2004b08 <__sfvwrite_r+0x1e4>
 2004c00:	182d883a 	mov	r22,r3
 2004c04:	9da7c83a 	sub	r19,r19,r22
 2004c08:	983fe11e 	bne	r19,zero,2004b90 <__sfvwrite_r+0x26c>
 2004c0c:	a009883a 	mov	r4,r20
 2004c10:	800b883a 	mov	r5,r16
 2004c14:	20040e40 	call	20040e4 <_fflush_r>
 2004c18:	103fbb1e 	bne	r2,zero,2004b08 <__sfvwrite_r+0x1e4>
 2004c1c:	0011883a 	mov	r8,zero
 2004c20:	003fdb06 	br	2004b90 <__sfvwrite_r+0x26c>
 2004c24:	81000017 	ldw	r4,0(r16)
 2004c28:	80800417 	ldw	r2,16(r16)
 2004c2c:	11000236 	bltu	r2,r4,2004c38 <__sfvwrite_r+0x314>
 2004c30:	84c00517 	ldw	r19,20(r16)
 2004c34:	94ffa62e 	bgeu	r18,r19,2004ad0 <__sfvwrite_r+0x1ac>
 2004c38:	9027883a 	mov	r19,r18
 2004c3c:	b480012e 	bgeu	r22,r18,2004c44 <__sfvwrite_r+0x320>
 2004c40:	b027883a 	mov	r19,r22
 2004c44:	e00b883a 	mov	r5,fp
 2004c48:	980d883a 	mov	r6,r19
 2004c4c:	2005bcc0 	call	2005bcc <memmove>
 2004c50:	80800217 	ldw	r2,8(r16)
 2004c54:	80c00017 	ldw	r3,0(r16)
 2004c58:	14c5c83a 	sub	r2,r2,r19
 2004c5c:	1cc7883a 	add	r3,r3,r19
 2004c60:	80800215 	stw	r2,8(r16)
 2004c64:	80c00015 	stw	r3,0(r16)
 2004c68:	10004326 	beq	r2,zero,2004d78 <__sfvwrite_r+0x454>
 2004c6c:	9805883a 	mov	r2,r19
 2004c70:	003f8506 	br	2004a88 <__sfvwrite_r+0x164>
 2004c74:	a80d883a 	mov	r6,r21
 2004c78:	e00b883a 	mov	r5,fp
 2004c7c:	da000115 	stw	r8,4(sp)
 2004c80:	2005bcc0 	call	2005bcc <memmove>
 2004c84:	80800217 	ldw	r2,8(r16)
 2004c88:	80c00017 	ldw	r3,0(r16)
 2004c8c:	da000117 	ldw	r8,4(sp)
 2004c90:	1545c83a 	sub	r2,r2,r21
 2004c94:	1d6b883a 	add	r21,r3,r21
 2004c98:	80800215 	stw	r2,8(r16)
 2004c9c:	85400015 	stw	r21,0(r16)
 2004ca0:	003fb906 	br	2004b88 <__sfvwrite_r+0x264>
 2004ca4:	81000017 	ldw	r4,0(r16)
 2004ca8:	902d883a 	mov	r22,r18
 2004cac:	9027883a 	mov	r19,r18
 2004cb0:	003f6b06 	br	2004a60 <__sfvwrite_r+0x13c>
 2004cb4:	e009883a 	mov	r4,fp
 2004cb8:	01400284 	movi	r5,10
 2004cbc:	900d883a 	mov	r6,r18
 2004cc0:	20059ac0 	call	20059ac <memchr>
 2004cc4:	10003e26 	beq	r2,zero,2004dc0 <__sfvwrite_r+0x49c>
 2004cc8:	10800044 	addi	r2,r2,1
 2004ccc:	1727c83a 	sub	r19,r2,fp
 2004cd0:	02000044 	movi	r8,1
 2004cd4:	003f9706 	br	2004b34 <__sfvwrite_r+0x210>
 2004cd8:	80800517 	ldw	r2,20(r16)
 2004cdc:	81400417 	ldw	r5,16(r16)
 2004ce0:	80c00017 	ldw	r3,0(r16)
 2004ce4:	10a7883a 	add	r19,r2,r2
 2004ce8:	9885883a 	add	r2,r19,r2
 2004cec:	1026d7fa 	srli	r19,r2,31
 2004cf0:	196bc83a 	sub	r21,r3,r5
 2004cf4:	a9800044 	addi	r6,r21,1
 2004cf8:	9885883a 	add	r2,r19,r2
 2004cfc:	1027d07a 	srai	r19,r2,1
 2004d00:	3485883a 	add	r2,r6,r18
 2004d04:	980d883a 	mov	r6,r19
 2004d08:	9880022e 	bgeu	r19,r2,2004d14 <__sfvwrite_r+0x3f0>
 2004d0c:	1027883a 	mov	r19,r2
 2004d10:	100d883a 	mov	r6,r2
 2004d14:	2101000c 	andi	r4,r4,1024
 2004d18:	20001c26 	beq	r4,zero,2004d8c <__sfvwrite_r+0x468>
 2004d1c:	a009883a 	mov	r4,r20
 2004d20:	300b883a 	mov	r5,r6
 2004d24:	20052040 	call	2005204 <_malloc_r>
 2004d28:	102d883a 	mov	r22,r2
 2004d2c:	10002926 	beq	r2,zero,2004dd4 <__sfvwrite_r+0x4b0>
 2004d30:	81400417 	ldw	r5,16(r16)
 2004d34:	1009883a 	mov	r4,r2
 2004d38:	a80d883a 	mov	r6,r21
 2004d3c:	2005a940 	call	2005a94 <memcpy>
 2004d40:	8080030b 	ldhu	r2,12(r16)
 2004d44:	00fedfc4 	movi	r3,-1153
 2004d48:	10c4703a 	and	r2,r2,r3
 2004d4c:	10802014 	ori	r2,r2,128
 2004d50:	8080030d 	sth	r2,12(r16)
 2004d54:	b549883a 	add	r4,r22,r21
 2004d58:	9d4bc83a 	sub	r5,r19,r21
 2004d5c:	85800415 	stw	r22,16(r16)
 2004d60:	84c00515 	stw	r19,20(r16)
 2004d64:	81000015 	stw	r4,0(r16)
 2004d68:	902d883a 	mov	r22,r18
 2004d6c:	81400215 	stw	r5,8(r16)
 2004d70:	9027883a 	mov	r19,r18
 2004d74:	003f3a06 	br	2004a60 <__sfvwrite_r+0x13c>
 2004d78:	a009883a 	mov	r4,r20
 2004d7c:	800b883a 	mov	r5,r16
 2004d80:	20040e40 	call	20040e4 <_fflush_r>
 2004d84:	103fb926 	beq	r2,zero,2004c6c <__sfvwrite_r+0x348>
 2004d88:	003f5f06 	br	2004b08 <__sfvwrite_r+0x1e4>
 2004d8c:	a009883a 	mov	r4,r20
 2004d90:	2006dec0 	call	2006dec <_realloc_r>
 2004d94:	102d883a 	mov	r22,r2
 2004d98:	103fee1e 	bne	r2,zero,2004d54 <__sfvwrite_r+0x430>
 2004d9c:	81400417 	ldw	r5,16(r16)
 2004da0:	a009883a 	mov	r4,r20
 2004da4:	20046340 	call	2004634 <_free_r>
 2004da8:	8080030b 	ldhu	r2,12(r16)
 2004dac:	00ffdfc4 	movi	r3,-129
 2004db0:	1884703a 	and	r2,r3,r2
 2004db4:	00c00304 	movi	r3,12
 2004db8:	a0c00015 	stw	r3,0(r20)
 2004dbc:	003f5306 	br	2004b0c <__sfvwrite_r+0x1e8>
 2004dc0:	94c00044 	addi	r19,r18,1
 2004dc4:	02000044 	movi	r8,1
 2004dc8:	003f5a06 	br	2004b34 <__sfvwrite_r+0x210>
 2004dcc:	00bfffc4 	movi	r2,-1
 2004dd0:	003f0206 	br	20049dc <__sfvwrite_r+0xb8>
 2004dd4:	00800304 	movi	r2,12
 2004dd8:	a0800015 	stw	r2,0(r20)
 2004ddc:	8080030b 	ldhu	r2,12(r16)
 2004de0:	003f4a06 	br	2004b0c <__sfvwrite_r+0x1e8>

02004de4 <_fwalk>:
 2004de4:	defff704 	addi	sp,sp,-36
 2004de8:	dd000415 	stw	r20,16(sp)
 2004dec:	dfc00815 	stw	ra,32(sp)
 2004df0:	ddc00715 	stw	r23,28(sp)
 2004df4:	dd800615 	stw	r22,24(sp)
 2004df8:	dd400515 	stw	r21,20(sp)
 2004dfc:	dcc00315 	stw	r19,12(sp)
 2004e00:	dc800215 	stw	r18,8(sp)
 2004e04:	dc400115 	stw	r17,4(sp)
 2004e08:	dc000015 	stw	r16,0(sp)
 2004e0c:	2500b804 	addi	r20,r4,736
 2004e10:	a0002326 	beq	r20,zero,2004ea0 <_fwalk+0xbc>
 2004e14:	282b883a 	mov	r21,r5
 2004e18:	002f883a 	mov	r23,zero
 2004e1c:	05800044 	movi	r22,1
 2004e20:	04ffffc4 	movi	r19,-1
 2004e24:	a4400117 	ldw	r17,4(r20)
 2004e28:	a4800217 	ldw	r18,8(r20)
 2004e2c:	8c7fffc4 	addi	r17,r17,-1
 2004e30:	88000d16 	blt	r17,zero,2004e68 <_fwalk+0x84>
 2004e34:	94000304 	addi	r16,r18,12
 2004e38:	94800384 	addi	r18,r18,14
 2004e3c:	80c0000b 	ldhu	r3,0(r16)
 2004e40:	8c7fffc4 	addi	r17,r17,-1
 2004e44:	813ffd04 	addi	r4,r16,-12
 2004e48:	b0c0042e 	bgeu	r22,r3,2004e5c <_fwalk+0x78>
 2004e4c:	90c0000f 	ldh	r3,0(r18)
 2004e50:	1cc00226 	beq	r3,r19,2004e5c <_fwalk+0x78>
 2004e54:	a83ee83a 	callr	r21
 2004e58:	b8aeb03a 	or	r23,r23,r2
 2004e5c:	84001a04 	addi	r16,r16,104
 2004e60:	94801a04 	addi	r18,r18,104
 2004e64:	8cfff51e 	bne	r17,r19,2004e3c <_fwalk+0x58>
 2004e68:	a5000017 	ldw	r20,0(r20)
 2004e6c:	a03fed1e 	bne	r20,zero,2004e24 <_fwalk+0x40>
 2004e70:	b805883a 	mov	r2,r23
 2004e74:	dfc00817 	ldw	ra,32(sp)
 2004e78:	ddc00717 	ldw	r23,28(sp)
 2004e7c:	dd800617 	ldw	r22,24(sp)
 2004e80:	dd400517 	ldw	r21,20(sp)
 2004e84:	dd000417 	ldw	r20,16(sp)
 2004e88:	dcc00317 	ldw	r19,12(sp)
 2004e8c:	dc800217 	ldw	r18,8(sp)
 2004e90:	dc400117 	ldw	r17,4(sp)
 2004e94:	dc000017 	ldw	r16,0(sp)
 2004e98:	dec00904 	addi	sp,sp,36
 2004e9c:	f800283a 	ret
 2004ea0:	002f883a 	mov	r23,zero
 2004ea4:	003ff206 	br	2004e70 <_fwalk+0x8c>

02004ea8 <_fwalk_reent>:
 2004ea8:	defff704 	addi	sp,sp,-36
 2004eac:	dd400515 	stw	r21,20(sp)
 2004eb0:	dfc00815 	stw	ra,32(sp)
 2004eb4:	ddc00715 	stw	r23,28(sp)
 2004eb8:	dd800615 	stw	r22,24(sp)
 2004ebc:	dd000415 	stw	r20,16(sp)
 2004ec0:	dcc00315 	stw	r19,12(sp)
 2004ec4:	dc800215 	stw	r18,8(sp)
 2004ec8:	dc400115 	stw	r17,4(sp)
 2004ecc:	dc000015 	stw	r16,0(sp)
 2004ed0:	2540b804 	addi	r21,r4,736
 2004ed4:	a8002326 	beq	r21,zero,2004f64 <_fwalk_reent+0xbc>
 2004ed8:	2829883a 	mov	r20,r5
 2004edc:	202d883a 	mov	r22,r4
 2004ee0:	002f883a 	mov	r23,zero
 2004ee4:	04c00044 	movi	r19,1
 2004ee8:	04bfffc4 	movi	r18,-1
 2004eec:	ac400117 	ldw	r17,4(r21)
 2004ef0:	ac000217 	ldw	r16,8(r21)
 2004ef4:	8c7fffc4 	addi	r17,r17,-1
 2004ef8:	88000c16 	blt	r17,zero,2004f2c <_fwalk_reent+0x84>
 2004efc:	84000304 	addi	r16,r16,12
 2004f00:	80c0000b 	ldhu	r3,0(r16)
 2004f04:	8c7fffc4 	addi	r17,r17,-1
 2004f08:	817ffd04 	addi	r5,r16,-12
 2004f0c:	98c0052e 	bgeu	r19,r3,2004f24 <_fwalk_reent+0x7c>
 2004f10:	80c0008f 	ldh	r3,2(r16)
 2004f14:	b009883a 	mov	r4,r22
 2004f18:	1c800226 	beq	r3,r18,2004f24 <_fwalk_reent+0x7c>
 2004f1c:	a03ee83a 	callr	r20
 2004f20:	b8aeb03a 	or	r23,r23,r2
 2004f24:	84001a04 	addi	r16,r16,104
 2004f28:	8cbff51e 	bne	r17,r18,2004f00 <_fwalk_reent+0x58>
 2004f2c:	ad400017 	ldw	r21,0(r21)
 2004f30:	a83fee1e 	bne	r21,zero,2004eec <_fwalk_reent+0x44>
 2004f34:	b805883a 	mov	r2,r23
 2004f38:	dfc00817 	ldw	ra,32(sp)
 2004f3c:	ddc00717 	ldw	r23,28(sp)
 2004f40:	dd800617 	ldw	r22,24(sp)
 2004f44:	dd400517 	ldw	r21,20(sp)
 2004f48:	dd000417 	ldw	r20,16(sp)
 2004f4c:	dcc00317 	ldw	r19,12(sp)
 2004f50:	dc800217 	ldw	r18,8(sp)
 2004f54:	dc400117 	ldw	r17,4(sp)
 2004f58:	dc000017 	ldw	r16,0(sp)
 2004f5c:	dec00904 	addi	sp,sp,36
 2004f60:	f800283a 	ret
 2004f64:	002f883a 	mov	r23,zero
 2004f68:	003ff206 	br	2004f34 <_fwalk_reent+0x8c>

02004f6c <_setlocale_r>:
 2004f6c:	30001b26 	beq	r6,zero,2004fdc <_setlocale_r+0x70>
 2004f70:	01408074 	movhi	r5,513
 2004f74:	defffe04 	addi	sp,sp,-8
 2004f78:	297c0c04 	addi	r5,r5,-4048
 2004f7c:	3009883a 	mov	r4,r6
 2004f80:	dc000015 	stw	r16,0(sp)
 2004f84:	dfc00115 	stw	ra,4(sp)
 2004f88:	3021883a 	mov	r16,r6
 2004f8c:	20075580 	call	2007558 <strcmp>
 2004f90:	1000061e 	bne	r2,zero,2004fac <_setlocale_r+0x40>
 2004f94:	00808074 	movhi	r2,513
 2004f98:	10bc0b04 	addi	r2,r2,-4052
 2004f9c:	dfc00117 	ldw	ra,4(sp)
 2004fa0:	dc000017 	ldw	r16,0(sp)
 2004fa4:	dec00204 	addi	sp,sp,8
 2004fa8:	f800283a 	ret
 2004fac:	01408074 	movhi	r5,513
 2004fb0:	297c0b04 	addi	r5,r5,-4052
 2004fb4:	8009883a 	mov	r4,r16
 2004fb8:	20075580 	call	2007558 <strcmp>
 2004fbc:	103ff526 	beq	r2,zero,2004f94 <_setlocale_r+0x28>
 2004fc0:	01408074 	movhi	r5,513
 2004fc4:	297bf604 	addi	r5,r5,-4136
 2004fc8:	8009883a 	mov	r4,r16
 2004fcc:	20075580 	call	2007558 <strcmp>
 2004fd0:	103ff026 	beq	r2,zero,2004f94 <_setlocale_r+0x28>
 2004fd4:	0005883a 	mov	r2,zero
 2004fd8:	003ff006 	br	2004f9c <_setlocale_r+0x30>
 2004fdc:	00808074 	movhi	r2,513
 2004fe0:	10bc0b04 	addi	r2,r2,-4052
 2004fe4:	f800283a 	ret

02004fe8 <__locale_charset>:
 2004fe8:	00808074 	movhi	r2,513
 2004fec:	10bdbc04 	addi	r2,r2,-2320
 2004ff0:	f800283a 	ret

02004ff4 <__locale_mb_cur_max>:
 2004ff4:	00808074 	movhi	r2,513
 2004ff8:	10835804 	addi	r2,r2,3424
 2004ffc:	10800017 	ldw	r2,0(r2)
 2005000:	f800283a 	ret

02005004 <__locale_msgcharset>:
 2005004:	00808074 	movhi	r2,513
 2005008:	10bdb404 	addi	r2,r2,-2352
 200500c:	f800283a 	ret

02005010 <__locale_cjk_lang>:
 2005010:	0005883a 	mov	r2,zero
 2005014:	f800283a 	ret

02005018 <_localeconv_r>:
 2005018:	00808074 	movhi	r2,513
 200501c:	10bdc404 	addi	r2,r2,-2288
 2005020:	f800283a 	ret

02005024 <setlocale>:
 2005024:	00c08074 	movhi	r3,513
 2005028:	18c35704 	addi	r3,r3,3420
 200502c:	2005883a 	mov	r2,r4
 2005030:	19000017 	ldw	r4,0(r3)
 2005034:	280d883a 	mov	r6,r5
 2005038:	100b883a 	mov	r5,r2
 200503c:	2004f6c1 	jmpi	2004f6c <_setlocale_r>

02005040 <localeconv>:
 2005040:	00808074 	movhi	r2,513
 2005044:	10bdc404 	addi	r2,r2,-2288
 2005048:	f800283a 	ret

0200504c <__smakebuf_r>:
 200504c:	2880030b 	ldhu	r2,12(r5)
 2005050:	10c0008c 	andi	r3,r2,2
 2005054:	1800401e 	bne	r3,zero,2005158 <__smakebuf_r+0x10c>
 2005058:	deffec04 	addi	sp,sp,-80
 200505c:	dc000f15 	stw	r16,60(sp)
 2005060:	2821883a 	mov	r16,r5
 2005064:	2940038f 	ldh	r5,14(r5)
 2005068:	dc401015 	stw	r17,64(sp)
 200506c:	dfc01315 	stw	ra,76(sp)
 2005070:	dcc01215 	stw	r19,72(sp)
 2005074:	dc801115 	stw	r18,68(sp)
 2005078:	2023883a 	mov	r17,r4
 200507c:	28001b16 	blt	r5,zero,20050ec <__smakebuf_r+0xa0>
 2005080:	d80d883a 	mov	r6,sp
 2005084:	2008f180 	call	2008f18 <_fstat_r>
 2005088:	10001716 	blt	r2,zero,20050e8 <__smakebuf_r+0x9c>
 200508c:	d8800117 	ldw	r2,4(sp)
 2005090:	00e00014 	movui	r3,32768
 2005094:	10bc000c 	andi	r2,r2,61440
 2005098:	10c03726 	beq	r2,r3,2005178 <__smakebuf_r+0x12c>
 200509c:	80c0030b 	ldhu	r3,12(r16)
 20050a0:	18c20014 	ori	r3,r3,2048
 20050a4:	80c0030d 	sth	r3,12(r16)
 20050a8:	00c80004 	movi	r3,8192
 20050ac:	10c03c1e 	bne	r2,r3,20051a0 <__smakebuf_r+0x154>
 20050b0:	8140038f 	ldh	r5,14(r16)
 20050b4:	8809883a 	mov	r4,r17
 20050b8:	2008f700 	call	2008f70 <_isatty_r>
 20050bc:	10004e26 	beq	r2,zero,20051f8 <__smakebuf_r+0x1ac>
 20050c0:	8080030b 	ldhu	r2,12(r16)
 20050c4:	04c00044 	movi	r19,1
 20050c8:	80c010c4 	addi	r3,r16,67
 20050cc:	14c4b03a 	or	r2,r2,r19
 20050d0:	8080030d 	sth	r2,12(r16)
 20050d4:	80c00015 	stw	r3,0(r16)
 20050d8:	80c00415 	stw	r3,16(r16)
 20050dc:	84c00515 	stw	r19,20(r16)
 20050e0:	04810004 	movi	r18,1024
 20050e4:	00000706 	br	2005104 <__smakebuf_r+0xb8>
 20050e8:	8080030b 	ldhu	r2,12(r16)
 20050ec:	10c0200c 	andi	r3,r2,128
 20050f0:	18001f1e 	bne	r3,zero,2005170 <__smakebuf_r+0x124>
 20050f4:	04810004 	movi	r18,1024
 20050f8:	10820014 	ori	r2,r2,2048
 20050fc:	8080030d 	sth	r2,12(r16)
 2005100:	0027883a 	mov	r19,zero
 2005104:	8809883a 	mov	r4,r17
 2005108:	900b883a 	mov	r5,r18
 200510c:	20052040 	call	2005204 <_malloc_r>
 2005110:	10002e26 	beq	r2,zero,20051cc <__smakebuf_r+0x180>
 2005114:	80c0030b 	ldhu	r3,12(r16)
 2005118:	01008034 	movhi	r4,512
 200511c:	21106004 	addi	r4,r4,16768
 2005120:	89000f15 	stw	r4,60(r17)
 2005124:	18c02014 	ori	r3,r3,128
 2005128:	80c0030d 	sth	r3,12(r16)
 200512c:	80800015 	stw	r2,0(r16)
 2005130:	80800415 	stw	r2,16(r16)
 2005134:	84800515 	stw	r18,20(r16)
 2005138:	98001c1e 	bne	r19,zero,20051ac <__smakebuf_r+0x160>
 200513c:	dfc01317 	ldw	ra,76(sp)
 2005140:	dcc01217 	ldw	r19,72(sp)
 2005144:	dc801117 	ldw	r18,68(sp)
 2005148:	dc401017 	ldw	r17,64(sp)
 200514c:	dc000f17 	ldw	r16,60(sp)
 2005150:	dec01404 	addi	sp,sp,80
 2005154:	f800283a 	ret
 2005158:	288010c4 	addi	r2,r5,67
 200515c:	28800015 	stw	r2,0(r5)
 2005160:	28800415 	stw	r2,16(r5)
 2005164:	00800044 	movi	r2,1
 2005168:	28800515 	stw	r2,20(r5)
 200516c:	f800283a 	ret
 2005170:	04801004 	movi	r18,64
 2005174:	003fe006 	br	20050f8 <__smakebuf_r+0xac>
 2005178:	81000a17 	ldw	r4,40(r16)
 200517c:	00c08034 	movhi	r3,512
 2005180:	18dd3d04 	addi	r3,r3,29940
 2005184:	20ffc51e 	bne	r4,r3,200509c <__smakebuf_r+0x50>
 2005188:	80c0030b 	ldhu	r3,12(r16)
 200518c:	01010004 	movi	r4,1024
 2005190:	81001315 	stw	r4,76(r16)
 2005194:	1906b03a 	or	r3,r3,r4
 2005198:	80c0030d 	sth	r3,12(r16)
 200519c:	003fc206 	br	20050a8 <__smakebuf_r+0x5c>
 20051a0:	0027883a 	mov	r19,zero
 20051a4:	04810004 	movi	r18,1024
 20051a8:	003fd606 	br	2005104 <__smakebuf_r+0xb8>
 20051ac:	8140038f 	ldh	r5,14(r16)
 20051b0:	8809883a 	mov	r4,r17
 20051b4:	2008f700 	call	2008f70 <_isatty_r>
 20051b8:	103fe026 	beq	r2,zero,200513c <__smakebuf_r+0xf0>
 20051bc:	8080030b 	ldhu	r2,12(r16)
 20051c0:	10800054 	ori	r2,r2,1
 20051c4:	8080030d 	sth	r2,12(r16)
 20051c8:	003fdc06 	br	200513c <__smakebuf_r+0xf0>
 20051cc:	8080030b 	ldhu	r2,12(r16)
 20051d0:	10c0800c 	andi	r3,r2,512
 20051d4:	183fd91e 	bne	r3,zero,200513c <__smakebuf_r+0xf0>
 20051d8:	10800094 	ori	r2,r2,2
 20051dc:	80c010c4 	addi	r3,r16,67
 20051e0:	8080030d 	sth	r2,12(r16)
 20051e4:	00800044 	movi	r2,1
 20051e8:	80c00015 	stw	r3,0(r16)
 20051ec:	80c00415 	stw	r3,16(r16)
 20051f0:	80800515 	stw	r2,20(r16)
 20051f4:	003fd106 	br	200513c <__smakebuf_r+0xf0>
 20051f8:	04c00044 	movi	r19,1
 20051fc:	04810004 	movi	r18,1024
 2005200:	003fc006 	br	2005104 <__smakebuf_r+0xb8>

02005204 <_malloc_r>:
 2005204:	defff504 	addi	sp,sp,-44
 2005208:	dc800315 	stw	r18,12(sp)
 200520c:	dfc00a15 	stw	ra,40(sp)
 2005210:	df000915 	stw	fp,36(sp)
 2005214:	ddc00815 	stw	r23,32(sp)
 2005218:	dd800715 	stw	r22,28(sp)
 200521c:	dd400615 	stw	r21,24(sp)
 2005220:	dd000515 	stw	r20,20(sp)
 2005224:	dcc00415 	stw	r19,16(sp)
 2005228:	dc400215 	stw	r17,8(sp)
 200522c:	dc000115 	stw	r16,4(sp)
 2005230:	288002c4 	addi	r2,r5,11
 2005234:	00c00584 	movi	r3,22
 2005238:	2025883a 	mov	r18,r4
 200523c:	18802a2e 	bgeu	r3,r2,20052e8 <_malloc_r+0xe4>
 2005240:	047ffe04 	movi	r17,-8
 2005244:	1462703a 	and	r17,r2,r17
 2005248:	88009e16 	blt	r17,zero,20054c4 <_malloc_r+0x2c0>
 200524c:	89409d36 	bltu	r17,r5,20054c4 <_malloc_r+0x2c0>
 2005250:	200cbf40 	call	200cbf4 <__malloc_lock>
 2005254:	00807dc4 	movi	r2,503
 2005258:	14402736 	bltu	r2,r17,20052f8 <_malloc_r+0xf4>
 200525c:	8806d0fa 	srli	r3,r17,3
 2005260:	04c08074 	movhi	r19,513
 2005264:	9cfdd204 	addi	r19,r19,-2232
 2005268:	18c5883a 	add	r2,r3,r3
 200526c:	1085883a 	add	r2,r2,r2
 2005270:	1085883a 	add	r2,r2,r2
 2005274:	9885883a 	add	r2,r19,r2
 2005278:	14000317 	ldw	r16,12(r2)
 200527c:	80814a26 	beq	r16,r2,20057a8 <_malloc_r+0x5a4>
 2005280:	80c00117 	ldw	r3,4(r16)
 2005284:	81000317 	ldw	r4,12(r16)
 2005288:	00bfff04 	movi	r2,-4
 200528c:	1884703a 	and	r2,r3,r2
 2005290:	81400217 	ldw	r5,8(r16)
 2005294:	8085883a 	add	r2,r16,r2
 2005298:	10c00117 	ldw	r3,4(r2)
 200529c:	29000315 	stw	r4,12(r5)
 20052a0:	21400215 	stw	r5,8(r4)
 20052a4:	18c00054 	ori	r3,r3,1
 20052a8:	10c00115 	stw	r3,4(r2)
 20052ac:	9009883a 	mov	r4,r18
 20052b0:	200cc140 	call	200cc14 <__malloc_unlock>
 20052b4:	80800204 	addi	r2,r16,8
 20052b8:	dfc00a17 	ldw	ra,40(sp)
 20052bc:	df000917 	ldw	fp,36(sp)
 20052c0:	ddc00817 	ldw	r23,32(sp)
 20052c4:	dd800717 	ldw	r22,28(sp)
 20052c8:	dd400617 	ldw	r21,24(sp)
 20052cc:	dd000517 	ldw	r20,20(sp)
 20052d0:	dcc00417 	ldw	r19,16(sp)
 20052d4:	dc800317 	ldw	r18,12(sp)
 20052d8:	dc400217 	ldw	r17,8(sp)
 20052dc:	dc000117 	ldw	r16,4(sp)
 20052e0:	dec00b04 	addi	sp,sp,44
 20052e4:	f800283a 	ret
 20052e8:	04400404 	movi	r17,16
 20052ec:	89407536 	bltu	r17,r5,20054c4 <_malloc_r+0x2c0>
 20052f0:	200cbf40 	call	200cbf4 <__malloc_lock>
 20052f4:	003fd906 	br	200525c <_malloc_r+0x58>
 20052f8:	8806d27a 	srli	r3,r17,9
 20052fc:	18007526 	beq	r3,zero,20054d4 <_malloc_r+0x2d0>
 2005300:	00800104 	movi	r2,4
 2005304:	10c0ef36 	bltu	r2,r3,20056c4 <_malloc_r+0x4c0>
 2005308:	8806d1ba 	srli	r3,r17,6
 200530c:	19c00e04 	addi	r7,r3,56
 2005310:	39cb883a 	add	r5,r7,r7
 2005314:	04c08074 	movhi	r19,513
 2005318:	294b883a 	add	r5,r5,r5
 200531c:	9cfdd204 	addi	r19,r19,-2232
 2005320:	294b883a 	add	r5,r5,r5
 2005324:	994b883a 	add	r5,r19,r5
 2005328:	2c000317 	ldw	r16,12(r5)
 200532c:	2c000e26 	beq	r5,r16,2005368 <_malloc_r+0x164>
 2005330:	80800117 	ldw	r2,4(r16)
 2005334:	01bfff04 	movi	r6,-4
 2005338:	010003c4 	movi	r4,15
 200533c:	1184703a 	and	r2,r2,r6
 2005340:	1447c83a 	sub	r3,r2,r17
 2005344:	20c00716 	blt	r4,r3,2005364 <_malloc_r+0x160>
 2005348:	1800650e 	bge	r3,zero,20054e0 <_malloc_r+0x2dc>
 200534c:	84000317 	ldw	r16,12(r16)
 2005350:	2c000526 	beq	r5,r16,2005368 <_malloc_r+0x164>
 2005354:	80800117 	ldw	r2,4(r16)
 2005358:	1184703a 	and	r2,r2,r6
 200535c:	1447c83a 	sub	r3,r2,r17
 2005360:	20fff90e 	bge	r4,r3,2005348 <_malloc_r+0x144>
 2005364:	39ffffc4 	addi	r7,r7,-1
 2005368:	38c00044 	addi	r3,r7,1
 200536c:	01808074 	movhi	r6,513
 2005370:	9c000417 	ldw	r16,16(r19)
 2005374:	31bdd204 	addi	r6,r6,-2232
 2005378:	32400204 	addi	r9,r6,8
 200537c:	82410326 	beq	r16,r9,200578c <_malloc_r+0x588>
 2005380:	81000117 	ldw	r4,4(r16)
 2005384:	00bfff04 	movi	r2,-4
 2005388:	208e703a 	and	r7,r4,r2
 200538c:	3c45c83a 	sub	r2,r7,r17
 2005390:	010003c4 	movi	r4,15
 2005394:	2080ee16 	blt	r4,r2,2005750 <_malloc_r+0x54c>
 2005398:	32400515 	stw	r9,20(r6)
 200539c:	32400415 	stw	r9,16(r6)
 20053a0:	1000510e 	bge	r2,zero,20054e8 <_malloc_r+0x2e4>
 20053a4:	00807fc4 	movi	r2,511
 20053a8:	11c0ce36 	bltu	r2,r7,20056e4 <_malloc_r+0x4e0>
 20053ac:	3808d0fa 	srli	r4,r7,3
 20053b0:	01c00044 	movi	r7,1
 20053b4:	30800117 	ldw	r2,4(r6)
 20053b8:	210b883a 	add	r5,r4,r4
 20053bc:	294b883a 	add	r5,r5,r5
 20053c0:	2009d0ba 	srai	r4,r4,2
 20053c4:	294b883a 	add	r5,r5,r5
 20053c8:	298b883a 	add	r5,r5,r6
 20053cc:	2a000217 	ldw	r8,8(r5)
 20053d0:	3908983a 	sll	r4,r7,r4
 20053d4:	81400315 	stw	r5,12(r16)
 20053d8:	82000215 	stw	r8,8(r16)
 20053dc:	2088b03a 	or	r4,r4,r2
 20053e0:	2c000215 	stw	r16,8(r5)
 20053e4:	31000115 	stw	r4,4(r6)
 20053e8:	44000315 	stw	r16,12(r8)
 20053ec:	1805d0ba 	srai	r2,r3,2
 20053f0:	01400044 	movi	r5,1
 20053f4:	288a983a 	sll	r5,r5,r2
 20053f8:	21404336 	bltu	r4,r5,2005508 <_malloc_r+0x304>
 20053fc:	2144703a 	and	r2,r4,r5
 2005400:	10000a1e 	bne	r2,zero,200542c <_malloc_r+0x228>
 2005404:	00bfff04 	movi	r2,-4
 2005408:	294b883a 	add	r5,r5,r5
 200540c:	1886703a 	and	r3,r3,r2
 2005410:	2144703a 	and	r2,r4,r5
 2005414:	18c00104 	addi	r3,r3,4
 2005418:	1000041e 	bne	r2,zero,200542c <_malloc_r+0x228>
 200541c:	294b883a 	add	r5,r5,r5
 2005420:	2144703a 	and	r2,r4,r5
 2005424:	18c00104 	addi	r3,r3,4
 2005428:	103ffc26 	beq	r2,zero,200541c <_malloc_r+0x218>
 200542c:	023fff04 	movi	r8,-4
 2005430:	01c003c4 	movi	r7,15
 2005434:	18c5883a 	add	r2,r3,r3
 2005438:	1085883a 	add	r2,r2,r2
 200543c:	1085883a 	add	r2,r2,r2
 2005440:	9895883a 	add	r10,r19,r2
 2005444:	52c00304 	addi	r11,r10,12
 2005448:	1819883a 	mov	r12,r3
 200544c:	5c000017 	ldw	r16,0(r11)
 2005450:	59bffd04 	addi	r6,r11,-12
 2005454:	8180041e 	bne	r16,r6,2005468 <_malloc_r+0x264>
 2005458:	0000ce06 	br	2005794 <_malloc_r+0x590>
 200545c:	2000d70e 	bge	r4,zero,20057bc <_malloc_r+0x5b8>
 2005460:	84000317 	ldw	r16,12(r16)
 2005464:	8180cb26 	beq	r16,r6,2005794 <_malloc_r+0x590>
 2005468:	80800117 	ldw	r2,4(r16)
 200546c:	1204703a 	and	r2,r2,r8
 2005470:	1449c83a 	sub	r4,r2,r17
 2005474:	393ff90e 	bge	r7,r4,200545c <_malloc_r+0x258>
 2005478:	80800317 	ldw	r2,12(r16)
 200547c:	80c00217 	ldw	r3,8(r16)
 2005480:	89400054 	ori	r5,r17,1
 2005484:	81400115 	stw	r5,4(r16)
 2005488:	18800315 	stw	r2,12(r3)
 200548c:	10c00215 	stw	r3,8(r2)
 2005490:	8463883a 	add	r17,r16,r17
 2005494:	9c400515 	stw	r17,20(r19)
 2005498:	9c400415 	stw	r17,16(r19)
 200549c:	20800054 	ori	r2,r4,1
 20054a0:	88800115 	stw	r2,4(r17)
 20054a4:	8a400315 	stw	r9,12(r17)
 20054a8:	8a400215 	stw	r9,8(r17)
 20054ac:	8923883a 	add	r17,r17,r4
 20054b0:	89000015 	stw	r4,0(r17)
 20054b4:	9009883a 	mov	r4,r18
 20054b8:	200cc140 	call	200cc14 <__malloc_unlock>
 20054bc:	80800204 	addi	r2,r16,8
 20054c0:	003f7d06 	br	20052b8 <_malloc_r+0xb4>
 20054c4:	00800304 	movi	r2,12
 20054c8:	90800015 	stw	r2,0(r18)
 20054cc:	0005883a 	mov	r2,zero
 20054d0:	003f7906 	br	20052b8 <_malloc_r+0xb4>
 20054d4:	01401f84 	movi	r5,126
 20054d8:	01c00fc4 	movi	r7,63
 20054dc:	003f8d06 	br	2005314 <_malloc_r+0x110>
 20054e0:	81000317 	ldw	r4,12(r16)
 20054e4:	003f6a06 	br	2005290 <_malloc_r+0x8c>
 20054e8:	81c5883a 	add	r2,r16,r7
 20054ec:	10c00117 	ldw	r3,4(r2)
 20054f0:	9009883a 	mov	r4,r18
 20054f4:	18c00054 	ori	r3,r3,1
 20054f8:	10c00115 	stw	r3,4(r2)
 20054fc:	200cc140 	call	200cc14 <__malloc_unlock>
 2005500:	80800204 	addi	r2,r16,8
 2005504:	003f6c06 	br	20052b8 <_malloc_r+0xb4>
 2005508:	9c000217 	ldw	r16,8(r19)
 200550c:	00bfff04 	movi	r2,-4
 2005510:	85800117 	ldw	r22,4(r16)
 2005514:	b0ac703a 	and	r22,r22,r2
 2005518:	b4400336 	bltu	r22,r17,2005528 <_malloc_r+0x324>
 200551c:	b445c83a 	sub	r2,r22,r17
 2005520:	00c003c4 	movi	r3,15
 2005524:	18805d16 	blt	r3,r2,200569c <_malloc_r+0x498>
 2005528:	05c08074 	movhi	r23,513
 200552c:	00808074 	movhi	r2,513
 2005530:	bdc35904 	addi	r23,r23,3428
 2005534:	108a2604 	addi	r2,r2,10392
 2005538:	15400017 	ldw	r21,0(r2)
 200553c:	b9000017 	ldw	r4,0(r23)
 2005540:	00ffffc4 	movi	r3,-1
 2005544:	858d883a 	add	r6,r16,r22
 2005548:	8d6b883a 	add	r21,r17,r21
 200554c:	20c0e426 	beq	r4,r3,20058e0 <_malloc_r+0x6dc>
 2005550:	ad4403c4 	addi	r21,r21,4111
 2005554:	00fc0004 	movi	r3,-4096
 2005558:	a8ea703a 	and	r21,r21,r3
 200555c:	9009883a 	mov	r4,r18
 2005560:	a80b883a 	mov	r5,r21
 2005564:	d9800015 	stw	r6,0(sp)
 2005568:	20073c80 	call	20073c8 <_sbrk_r>
 200556c:	00ffffc4 	movi	r3,-1
 2005570:	1029883a 	mov	r20,r2
 2005574:	d9800017 	ldw	r6,0(sp)
 2005578:	10c0a426 	beq	r2,r3,200580c <_malloc_r+0x608>
 200557c:	1180a236 	bltu	r2,r6,2005808 <_malloc_r+0x604>
 2005580:	07008074 	movhi	fp,513
 2005584:	e70a2e04 	addi	fp,fp,10424
 2005588:	e0c00017 	ldw	r3,0(fp)
 200558c:	a8c7883a 	add	r3,r21,r3
 2005590:	e0c00015 	stw	r3,0(fp)
 2005594:	3500da26 	beq	r6,r20,2005900 <_malloc_r+0x6fc>
 2005598:	b9000017 	ldw	r4,0(r23)
 200559c:	00bfffc4 	movi	r2,-1
 20055a0:	2080e426 	beq	r4,r2,2005934 <_malloc_r+0x730>
 20055a4:	a185c83a 	sub	r2,r20,r6
 20055a8:	1885883a 	add	r2,r3,r2
 20055ac:	e0800015 	stw	r2,0(fp)
 20055b0:	a0c001cc 	andi	r3,r20,7
 20055b4:	1800b526 	beq	r3,zero,200588c <_malloc_r+0x688>
 20055b8:	a0e9c83a 	sub	r20,r20,r3
 20055bc:	00840204 	movi	r2,4104
 20055c0:	a5000204 	addi	r20,r20,8
 20055c4:	10c7c83a 	sub	r3,r2,r3
 20055c8:	a545883a 	add	r2,r20,r21
 20055cc:	1083ffcc 	andi	r2,r2,4095
 20055d0:	18abc83a 	sub	r21,r3,r2
 20055d4:	9009883a 	mov	r4,r18
 20055d8:	a80b883a 	mov	r5,r21
 20055dc:	20073c80 	call	20073c8 <_sbrk_r>
 20055e0:	00ffffc4 	movi	r3,-1
 20055e4:	10c0d026 	beq	r2,r3,2005928 <_malloc_r+0x724>
 20055e8:	1507c83a 	sub	r3,r2,r20
 20055ec:	a8c7883a 	add	r3,r21,r3
 20055f0:	18c00054 	ori	r3,r3,1
 20055f4:	e0800017 	ldw	r2,0(fp)
 20055f8:	9d000215 	stw	r20,8(r19)
 20055fc:	a0c00115 	stw	r3,4(r20)
 2005600:	a887883a 	add	r3,r21,r2
 2005604:	e0c00015 	stw	r3,0(fp)
 2005608:	84c00e26 	beq	r16,r19,2005644 <_malloc_r+0x440>
 200560c:	018003c4 	movi	r6,15
 2005610:	3580a02e 	bgeu	r6,r22,2005894 <_malloc_r+0x690>
 2005614:	81400117 	ldw	r5,4(r16)
 2005618:	013ffe04 	movi	r4,-8
 200561c:	b0bffd04 	addi	r2,r22,-12
 2005620:	1104703a 	and	r2,r2,r4
 2005624:	2900004c 	andi	r4,r5,1
 2005628:	1108b03a 	or	r4,r2,r4
 200562c:	81000115 	stw	r4,4(r16)
 2005630:	01400144 	movi	r5,5
 2005634:	8089883a 	add	r4,r16,r2
 2005638:	21400115 	stw	r5,4(r4)
 200563c:	21400215 	stw	r5,8(r4)
 2005640:	3080c036 	bltu	r6,r2,2005944 <_malloc_r+0x740>
 2005644:	00808074 	movhi	r2,513
 2005648:	108a2504 	addi	r2,r2,10388
 200564c:	11000017 	ldw	r4,0(r2)
 2005650:	20c0012e 	bgeu	r4,r3,2005658 <_malloc_r+0x454>
 2005654:	10c00015 	stw	r3,0(r2)
 2005658:	00808074 	movhi	r2,513
 200565c:	108a2404 	addi	r2,r2,10384
 2005660:	11000017 	ldw	r4,0(r2)
 2005664:	9c000217 	ldw	r16,8(r19)
 2005668:	20c0012e 	bgeu	r4,r3,2005670 <_malloc_r+0x46c>
 200566c:	10c00015 	stw	r3,0(r2)
 2005670:	80c00117 	ldw	r3,4(r16)
 2005674:	00bfff04 	movi	r2,-4
 2005678:	1886703a 	and	r3,r3,r2
 200567c:	1c45c83a 	sub	r2,r3,r17
 2005680:	1c400236 	bltu	r3,r17,200568c <_malloc_r+0x488>
 2005684:	00c003c4 	movi	r3,15
 2005688:	18800416 	blt	r3,r2,200569c <_malloc_r+0x498>
 200568c:	9009883a 	mov	r4,r18
 2005690:	200cc140 	call	200cc14 <__malloc_unlock>
 2005694:	0005883a 	mov	r2,zero
 2005698:	003f0706 	br	20052b8 <_malloc_r+0xb4>
 200569c:	88c00054 	ori	r3,r17,1
 20056a0:	80c00115 	stw	r3,4(r16)
 20056a4:	8463883a 	add	r17,r16,r17
 20056a8:	10800054 	ori	r2,r2,1
 20056ac:	9c400215 	stw	r17,8(r19)
 20056b0:	88800115 	stw	r2,4(r17)
 20056b4:	9009883a 	mov	r4,r18
 20056b8:	200cc140 	call	200cc14 <__malloc_unlock>
 20056bc:	80800204 	addi	r2,r16,8
 20056c0:	003efd06 	br	20052b8 <_malloc_r+0xb4>
 20056c4:	00800504 	movi	r2,20
 20056c8:	10c0482e 	bgeu	r2,r3,20057ec <_malloc_r+0x5e8>
 20056cc:	00801504 	movi	r2,84
 20056d0:	10c06836 	bltu	r2,r3,2005874 <_malloc_r+0x670>
 20056d4:	8806d33a 	srli	r3,r17,12
 20056d8:	19c01b84 	addi	r7,r3,110
 20056dc:	39cb883a 	add	r5,r7,r7
 20056e0:	003f0c06 	br	2005314 <_malloc_r+0x110>
 20056e4:	3804d27a 	srli	r2,r7,9
 20056e8:	01000104 	movi	r4,4
 20056ec:	2080422e 	bgeu	r4,r2,20057f8 <_malloc_r+0x5f4>
 20056f0:	01000504 	movi	r4,20
 20056f4:	20807c36 	bltu	r4,r2,20058e8 <_malloc_r+0x6e4>
 20056f8:	110016c4 	addi	r4,r2,91
 20056fc:	210b883a 	add	r5,r4,r4
 2005700:	294b883a 	add	r5,r5,r5
 2005704:	294b883a 	add	r5,r5,r5
 2005708:	994b883a 	add	r5,r19,r5
 200570c:	28800217 	ldw	r2,8(r5)
 2005710:	02008074 	movhi	r8,513
 2005714:	423dd204 	addi	r8,r8,-2232
 2005718:	11406326 	beq	r2,r5,20058a8 <_malloc_r+0x6a4>
 200571c:	01bfff04 	movi	r6,-4
 2005720:	11000117 	ldw	r4,4(r2)
 2005724:	2188703a 	and	r4,r4,r6
 2005728:	3900022e 	bgeu	r7,r4,2005734 <_malloc_r+0x530>
 200572c:	10800217 	ldw	r2,8(r2)
 2005730:	28bffb1e 	bne	r5,r2,2005720 <_malloc_r+0x51c>
 2005734:	11800317 	ldw	r6,12(r2)
 2005738:	99000117 	ldw	r4,4(r19)
 200573c:	81800315 	stw	r6,12(r16)
 2005740:	80800215 	stw	r2,8(r16)
 2005744:	34000215 	stw	r16,8(r6)
 2005748:	14000315 	stw	r16,12(r2)
 200574c:	003f2706 	br	20053ec <_malloc_r+0x1e8>
 2005750:	88c00054 	ori	r3,r17,1
 2005754:	80c00115 	stw	r3,4(r16)
 2005758:	8463883a 	add	r17,r16,r17
 200575c:	34400515 	stw	r17,20(r6)
 2005760:	34400415 	stw	r17,16(r6)
 2005764:	10c00054 	ori	r3,r2,1
 2005768:	8a400315 	stw	r9,12(r17)
 200576c:	8a400215 	stw	r9,8(r17)
 2005770:	88c00115 	stw	r3,4(r17)
 2005774:	88a3883a 	add	r17,r17,r2
 2005778:	88800015 	stw	r2,0(r17)
 200577c:	9009883a 	mov	r4,r18
 2005780:	200cc140 	call	200cc14 <__malloc_unlock>
 2005784:	80800204 	addi	r2,r16,8
 2005788:	003ecb06 	br	20052b8 <_malloc_r+0xb4>
 200578c:	31000117 	ldw	r4,4(r6)
 2005790:	003f1606 	br	20053ec <_malloc_r+0x1e8>
 2005794:	63000044 	addi	r12,r12,1
 2005798:	608000cc 	andi	r2,r12,3
 200579c:	5ac00204 	addi	r11,r11,8
 20057a0:	103f2a1e 	bne	r2,zero,200544c <_malloc_r+0x248>
 20057a4:	00002106 	br	200582c <_malloc_r+0x628>
 20057a8:	80800204 	addi	r2,r16,8
 20057ac:	84000517 	ldw	r16,20(r16)
 20057b0:	143eb31e 	bne	r2,r16,2005280 <_malloc_r+0x7c>
 20057b4:	18c00084 	addi	r3,r3,2
 20057b8:	003eec06 	br	200536c <_malloc_r+0x168>
 20057bc:	8085883a 	add	r2,r16,r2
 20057c0:	10c00117 	ldw	r3,4(r2)
 20057c4:	81000317 	ldw	r4,12(r16)
 20057c8:	81400217 	ldw	r5,8(r16)
 20057cc:	18c00054 	ori	r3,r3,1
 20057d0:	10c00115 	stw	r3,4(r2)
 20057d4:	29000315 	stw	r4,12(r5)
 20057d8:	21400215 	stw	r5,8(r4)
 20057dc:	9009883a 	mov	r4,r18
 20057e0:	200cc140 	call	200cc14 <__malloc_unlock>
 20057e4:	80800204 	addi	r2,r16,8
 20057e8:	003eb306 	br	20052b8 <_malloc_r+0xb4>
 20057ec:	19c016c4 	addi	r7,r3,91
 20057f0:	39cb883a 	add	r5,r7,r7
 20057f4:	003ec706 	br	2005314 <_malloc_r+0x110>
 20057f8:	3804d1ba 	srli	r2,r7,6
 20057fc:	11000e04 	addi	r4,r2,56
 2005800:	210b883a 	add	r5,r4,r4
 2005804:	003fbe06 	br	2005700 <_malloc_r+0x4fc>
 2005808:	84ff5d26 	beq	r16,r19,2005580 <_malloc_r+0x37c>
 200580c:	9c000217 	ldw	r16,8(r19)
 2005810:	00bfff04 	movi	r2,-4
 2005814:	80c00117 	ldw	r3,4(r16)
 2005818:	1886703a 	and	r3,r3,r2
 200581c:	003f9706 	br	200567c <_malloc_r+0x478>
 2005820:	52800017 	ldw	r10,0(r10)
 2005824:	18ffffc4 	addi	r3,r3,-1
 2005828:	50805c1e 	bne	r10,r2,200599c <_malloc_r+0x798>
 200582c:	190000cc 	andi	r4,r3,3
 2005830:	50bffe04 	addi	r2,r10,-8
 2005834:	203ffa1e 	bne	r4,zero,2005820 <_malloc_r+0x61c>
 2005838:	98800117 	ldw	r2,4(r19)
 200583c:	0146303a 	nor	r3,zero,r5
 2005840:	1884703a 	and	r2,r3,r2
 2005844:	98800115 	stw	r2,4(r19)
 2005848:	294b883a 	add	r5,r5,r5
 200584c:	117f2e36 	bltu	r2,r5,2005508 <_malloc_r+0x304>
 2005850:	283f2d26 	beq	r5,zero,2005508 <_malloc_r+0x304>
 2005854:	1146703a 	and	r3,r2,r5
 2005858:	1800521e 	bne	r3,zero,20059a4 <_malloc_r+0x7a0>
 200585c:	6007883a 	mov	r3,r12
 2005860:	294b883a 	add	r5,r5,r5
 2005864:	1148703a 	and	r4,r2,r5
 2005868:	18c00104 	addi	r3,r3,4
 200586c:	203ffc26 	beq	r4,zero,2005860 <_malloc_r+0x65c>
 2005870:	003ef006 	br	2005434 <_malloc_r+0x230>
 2005874:	00805504 	movi	r2,340
 2005878:	10c01336 	bltu	r2,r3,20058c8 <_malloc_r+0x6c4>
 200587c:	8806d3fa 	srli	r3,r17,15
 2005880:	19c01dc4 	addi	r7,r3,119
 2005884:	39cb883a 	add	r5,r7,r7
 2005888:	003ea206 	br	2005314 <_malloc_r+0x110>
 200588c:	00c40004 	movi	r3,4096
 2005890:	003f4d06 	br	20055c8 <_malloc_r+0x3c4>
 2005894:	00800044 	movi	r2,1
 2005898:	a0800115 	stw	r2,4(r20)
 200589c:	a021883a 	mov	r16,r20
 20058a0:	0007883a 	mov	r3,zero
 20058a4:	003f7506 	br	200567c <_malloc_r+0x478>
 20058a8:	200bd0ba 	srai	r5,r4,2
 20058ac:	01800044 	movi	r6,1
 20058b0:	41000117 	ldw	r4,4(r8)
 20058b4:	314a983a 	sll	r5,r6,r5
 20058b8:	100d883a 	mov	r6,r2
 20058bc:	2908b03a 	or	r4,r5,r4
 20058c0:	41000115 	stw	r4,4(r8)
 20058c4:	003f9d06 	br	200573c <_malloc_r+0x538>
 20058c8:	00815504 	movi	r2,1364
 20058cc:	10c01336 	bltu	r2,r3,200591c <_malloc_r+0x718>
 20058d0:	8806d4ba 	srli	r3,r17,18
 20058d4:	19c01f04 	addi	r7,r3,124
 20058d8:	39cb883a 	add	r5,r7,r7
 20058dc:	003e8d06 	br	2005314 <_malloc_r+0x110>
 20058e0:	ad400404 	addi	r21,r21,16
 20058e4:	003f1d06 	br	200555c <_malloc_r+0x358>
 20058e8:	01001504 	movi	r4,84
 20058ec:	20801c36 	bltu	r4,r2,2005960 <_malloc_r+0x75c>
 20058f0:	3804d33a 	srli	r2,r7,12
 20058f4:	11001b84 	addi	r4,r2,110
 20058f8:	210b883a 	add	r5,r4,r4
 20058fc:	003f8006 	br	2005700 <_malloc_r+0x4fc>
 2005900:	3083ffcc 	andi	r2,r6,4095
 2005904:	103f241e 	bne	r2,zero,2005598 <_malloc_r+0x394>
 2005908:	99000217 	ldw	r4,8(r19)
 200590c:	ad85883a 	add	r2,r21,r22
 2005910:	10800054 	ori	r2,r2,1
 2005914:	20800115 	stw	r2,4(r4)
 2005918:	003f4a06 	br	2005644 <_malloc_r+0x440>
 200591c:	01403f04 	movi	r5,252
 2005920:	01c01f84 	movi	r7,126
 2005924:	003e7b06 	br	2005314 <_malloc_r+0x110>
 2005928:	00c00044 	movi	r3,1
 200592c:	002b883a 	mov	r21,zero
 2005930:	003f3006 	br	20055f4 <_malloc_r+0x3f0>
 2005934:	00808074 	movhi	r2,513
 2005938:	10835904 	addi	r2,r2,3428
 200593c:	15000015 	stw	r20,0(r2)
 2005940:	003f1b06 	br	20055b0 <_malloc_r+0x3ac>
 2005944:	9009883a 	mov	r4,r18
 2005948:	81400204 	addi	r5,r16,8
 200594c:	20046340 	call	2004634 <_free_r>
 2005950:	00808074 	movhi	r2,513
 2005954:	108a2e04 	addi	r2,r2,10424
 2005958:	10c00017 	ldw	r3,0(r2)
 200595c:	003f3906 	br	2005644 <_malloc_r+0x440>
 2005960:	01005504 	movi	r4,340
 2005964:	20800436 	bltu	r4,r2,2005978 <_malloc_r+0x774>
 2005968:	3804d3fa 	srli	r2,r7,15
 200596c:	11001dc4 	addi	r4,r2,119
 2005970:	210b883a 	add	r5,r4,r4
 2005974:	003f6206 	br	2005700 <_malloc_r+0x4fc>
 2005978:	01015504 	movi	r4,1364
 200597c:	20800436 	bltu	r4,r2,2005990 <_malloc_r+0x78c>
 2005980:	3804d4ba 	srli	r2,r7,18
 2005984:	11001f04 	addi	r4,r2,124
 2005988:	210b883a 	add	r5,r4,r4
 200598c:	003f5c06 	br	2005700 <_malloc_r+0x4fc>
 2005990:	01403f04 	movi	r5,252
 2005994:	01001f84 	movi	r4,126
 2005998:	003f5906 	br	2005700 <_malloc_r+0x4fc>
 200599c:	98800117 	ldw	r2,4(r19)
 20059a0:	003fa906 	br	2005848 <_malloc_r+0x644>
 20059a4:	6007883a 	mov	r3,r12
 20059a8:	003ea206 	br	2005434 <_malloc_r+0x230>

020059ac <memchr>:
 20059ac:	208000cc 	andi	r2,r4,3
 20059b0:	280f883a 	mov	r7,r5
 20059b4:	10003526 	beq	r2,zero,2005a8c <memchr+0xe0>
 20059b8:	30bfffc4 	addi	r2,r6,-1
 20059bc:	30001b26 	beq	r6,zero,2005a2c <memchr+0x80>
 20059c0:	21800003 	ldbu	r6,0(r4)
 20059c4:	28c03fcc 	andi	r3,r5,255
 20059c8:	30c01a26 	beq	r6,r3,2005a34 <memchr+0x88>
 20059cc:	180d883a 	mov	r6,r3
 20059d0:	00000406 	br	20059e4 <memchr+0x38>
 20059d4:	10001526 	beq	r2,zero,2005a2c <memchr+0x80>
 20059d8:	20c00003 	ldbu	r3,0(r4)
 20059dc:	10bfffc4 	addi	r2,r2,-1
 20059e0:	19801426 	beq	r3,r6,2005a34 <memchr+0x88>
 20059e4:	21000044 	addi	r4,r4,1
 20059e8:	20c000cc 	andi	r3,r4,3
 20059ec:	183ff91e 	bne	r3,zero,20059d4 <memchr+0x28>
 20059f0:	024000c4 	movi	r9,3
 20059f4:	48801136 	bltu	r9,r2,2005a3c <memchr+0x90>
 20059f8:	10000c26 	beq	r2,zero,2005a2c <memchr+0x80>
 20059fc:	20c00003 	ldbu	r3,0(r4)
 2005a00:	29403fcc 	andi	r5,r5,255
 2005a04:	19400b26 	beq	r3,r5,2005a34 <memchr+0x88>
 2005a08:	20c00044 	addi	r3,r4,1
 2005a0c:	2085883a 	add	r2,r4,r2
 2005a10:	39803fcc 	andi	r6,r7,255
 2005a14:	00000306 	br	2005a24 <memchr+0x78>
 2005a18:	18c00044 	addi	r3,r3,1
 2005a1c:	197fffc3 	ldbu	r5,-1(r3)
 2005a20:	29800426 	beq	r5,r6,2005a34 <memchr+0x88>
 2005a24:	1809883a 	mov	r4,r3
 2005a28:	18bffb1e 	bne	r3,r2,2005a18 <memchr+0x6c>
 2005a2c:	0005883a 	mov	r2,zero
 2005a30:	f800283a 	ret
 2005a34:	2005883a 	mov	r2,r4
 2005a38:	f800283a 	ret
 2005a3c:	28c03fcc 	andi	r3,r5,255
 2005a40:	1810923a 	slli	r8,r3,8
 2005a44:	02ffbff4 	movhi	r11,65279
 2005a48:	02a02074 	movhi	r10,32897
 2005a4c:	40c6b03a 	or	r3,r8,r3
 2005a50:	1810943a 	slli	r8,r3,16
 2005a54:	5affbfc4 	addi	r11,r11,-257
 2005a58:	52a02004 	addi	r10,r10,-32640
 2005a5c:	40d0b03a 	or	r8,r8,r3
 2005a60:	20c00017 	ldw	r3,0(r4)
 2005a64:	40c6f03a 	xor	r3,r8,r3
 2005a68:	1acd883a 	add	r6,r3,r11
 2005a6c:	00c6303a 	nor	r3,zero,r3
 2005a70:	30c6703a 	and	r3,r6,r3
 2005a74:	1a86703a 	and	r3,r3,r10
 2005a78:	183fdf1e 	bne	r3,zero,20059f8 <memchr+0x4c>
 2005a7c:	10bfff04 	addi	r2,r2,-4
 2005a80:	21000104 	addi	r4,r4,4
 2005a84:	48bff636 	bltu	r9,r2,2005a60 <memchr+0xb4>
 2005a88:	003fdb06 	br	20059f8 <memchr+0x4c>
 2005a8c:	3005883a 	mov	r2,r6
 2005a90:	003fd706 	br	20059f0 <memchr+0x44>

02005a94 <memcpy>:
 2005a94:	deffff04 	addi	sp,sp,-4
 2005a98:	dc000015 	stw	r16,0(sp)
 2005a9c:	00c003c4 	movi	r3,15
 2005aa0:	2005883a 	mov	r2,r4
 2005aa4:	1980432e 	bgeu	r3,r6,2005bb4 <memcpy+0x120>
 2005aa8:	2146b03a 	or	r3,r4,r5
 2005aac:	18c000cc 	andi	r3,r3,3
 2005ab0:	1800421e 	bne	r3,zero,2005bbc <memcpy+0x128>
 2005ab4:	343ffc04 	addi	r16,r6,-16
 2005ab8:	8020d13a 	srli	r16,r16,4
 2005abc:	28c00104 	addi	r3,r5,4
 2005ac0:	23400104 	addi	r13,r4,4
 2005ac4:	801e913a 	slli	r15,r16,4
 2005ac8:	2b000204 	addi	r12,r5,8
 2005acc:	22c00204 	addi	r11,r4,8
 2005ad0:	7bc00504 	addi	r15,r15,20
 2005ad4:	2a800304 	addi	r10,r5,12
 2005ad8:	22400304 	addi	r9,r4,12
 2005adc:	2bdf883a 	add	r15,r5,r15
 2005ae0:	2811883a 	mov	r8,r5
 2005ae4:	200f883a 	mov	r7,r4
 2005ae8:	41000017 	ldw	r4,0(r8)
 2005aec:	39c00404 	addi	r7,r7,16
 2005af0:	18c00404 	addi	r3,r3,16
 2005af4:	393ffc15 	stw	r4,-16(r7)
 2005af8:	1bbffc17 	ldw	r14,-16(r3)
 2005afc:	6b400404 	addi	r13,r13,16
 2005b00:	5ac00404 	addi	r11,r11,16
 2005b04:	6bbffc15 	stw	r14,-16(r13)
 2005b08:	63800017 	ldw	r14,0(r12)
 2005b0c:	4a400404 	addi	r9,r9,16
 2005b10:	42000404 	addi	r8,r8,16
 2005b14:	5bbffc15 	stw	r14,-16(r11)
 2005b18:	53800017 	ldw	r14,0(r10)
 2005b1c:	63000404 	addi	r12,r12,16
 2005b20:	52800404 	addi	r10,r10,16
 2005b24:	4bbffc15 	stw	r14,-16(r9)
 2005b28:	1bffef1e 	bne	r3,r15,2005ae8 <memcpy+0x54>
 2005b2c:	81c00044 	addi	r7,r16,1
 2005b30:	380e913a 	slli	r7,r7,4
 2005b34:	310003cc 	andi	r4,r6,15
 2005b38:	02c000c4 	movi	r11,3
 2005b3c:	11c7883a 	add	r3,r2,r7
 2005b40:	29cb883a 	add	r5,r5,r7
 2005b44:	59001f2e 	bgeu	r11,r4,2005bc4 <memcpy+0x130>
 2005b48:	1813883a 	mov	r9,r3
 2005b4c:	2811883a 	mov	r8,r5
 2005b50:	200f883a 	mov	r7,r4
 2005b54:	42800017 	ldw	r10,0(r8)
 2005b58:	4a400104 	addi	r9,r9,4
 2005b5c:	39ffff04 	addi	r7,r7,-4
 2005b60:	4abfff15 	stw	r10,-4(r9)
 2005b64:	42000104 	addi	r8,r8,4
 2005b68:	59fffa36 	bltu	r11,r7,2005b54 <memcpy+0xc0>
 2005b6c:	213fff04 	addi	r4,r4,-4
 2005b70:	2008d0ba 	srli	r4,r4,2
 2005b74:	318000cc 	andi	r6,r6,3
 2005b78:	21000044 	addi	r4,r4,1
 2005b7c:	2109883a 	add	r4,r4,r4
 2005b80:	2109883a 	add	r4,r4,r4
 2005b84:	1907883a 	add	r3,r3,r4
 2005b88:	290b883a 	add	r5,r5,r4
 2005b8c:	30000626 	beq	r6,zero,2005ba8 <memcpy+0x114>
 2005b90:	198d883a 	add	r6,r3,r6
 2005b94:	29c00003 	ldbu	r7,0(r5)
 2005b98:	18c00044 	addi	r3,r3,1
 2005b9c:	29400044 	addi	r5,r5,1
 2005ba0:	19ffffc5 	stb	r7,-1(r3)
 2005ba4:	19bffb1e 	bne	r3,r6,2005b94 <memcpy+0x100>
 2005ba8:	dc000017 	ldw	r16,0(sp)
 2005bac:	dec00104 	addi	sp,sp,4
 2005bb0:	f800283a 	ret
 2005bb4:	2007883a 	mov	r3,r4
 2005bb8:	003ff406 	br	2005b8c <memcpy+0xf8>
 2005bbc:	2007883a 	mov	r3,r4
 2005bc0:	003ff306 	br	2005b90 <memcpy+0xfc>
 2005bc4:	200d883a 	mov	r6,r4
 2005bc8:	003ff006 	br	2005b8c <memcpy+0xf8>

02005bcc <memmove>:
 2005bcc:	2005883a 	mov	r2,r4
 2005bd0:	29000b2e 	bgeu	r5,r4,2005c00 <memmove+0x34>
 2005bd4:	298f883a 	add	r7,r5,r6
 2005bd8:	21c0092e 	bgeu	r4,r7,2005c00 <memmove+0x34>
 2005bdc:	2187883a 	add	r3,r4,r6
 2005be0:	198bc83a 	sub	r5,r3,r6
 2005be4:	30004b26 	beq	r6,zero,2005d14 <memmove+0x148>
 2005be8:	39ffffc4 	addi	r7,r7,-1
 2005bec:	39000003 	ldbu	r4,0(r7)
 2005bf0:	18ffffc4 	addi	r3,r3,-1
 2005bf4:	19000005 	stb	r4,0(r3)
 2005bf8:	197ffb1e 	bne	r3,r5,2005be8 <memmove+0x1c>
 2005bfc:	f800283a 	ret
 2005c00:	00c003c4 	movi	r3,15
 2005c04:	1980412e 	bgeu	r3,r6,2005d0c <memmove+0x140>
 2005c08:	1146b03a 	or	r3,r2,r5
 2005c0c:	18c000cc 	andi	r3,r3,3
 2005c10:	1800411e 	bne	r3,zero,2005d18 <memmove+0x14c>
 2005c14:	33fffc04 	addi	r15,r6,-16
 2005c18:	781ed13a 	srli	r15,r15,4
 2005c1c:	28c00104 	addi	r3,r5,4
 2005c20:	13400104 	addi	r13,r2,4
 2005c24:	781c913a 	slli	r14,r15,4
 2005c28:	2b000204 	addi	r12,r5,8
 2005c2c:	12c00204 	addi	r11,r2,8
 2005c30:	73800504 	addi	r14,r14,20
 2005c34:	2a800304 	addi	r10,r5,12
 2005c38:	12400304 	addi	r9,r2,12
 2005c3c:	2b9d883a 	add	r14,r5,r14
 2005c40:	2811883a 	mov	r8,r5
 2005c44:	100f883a 	mov	r7,r2
 2005c48:	41000017 	ldw	r4,0(r8)
 2005c4c:	39c00404 	addi	r7,r7,16
 2005c50:	18c00404 	addi	r3,r3,16
 2005c54:	393ffc15 	stw	r4,-16(r7)
 2005c58:	193ffc17 	ldw	r4,-16(r3)
 2005c5c:	6b400404 	addi	r13,r13,16
 2005c60:	5ac00404 	addi	r11,r11,16
 2005c64:	693ffc15 	stw	r4,-16(r13)
 2005c68:	61000017 	ldw	r4,0(r12)
 2005c6c:	4a400404 	addi	r9,r9,16
 2005c70:	42000404 	addi	r8,r8,16
 2005c74:	593ffc15 	stw	r4,-16(r11)
 2005c78:	51000017 	ldw	r4,0(r10)
 2005c7c:	63000404 	addi	r12,r12,16
 2005c80:	52800404 	addi	r10,r10,16
 2005c84:	493ffc15 	stw	r4,-16(r9)
 2005c88:	1bbfef1e 	bne	r3,r14,2005c48 <memmove+0x7c>
 2005c8c:	79000044 	addi	r4,r15,1
 2005c90:	2008913a 	slli	r4,r4,4
 2005c94:	328003cc 	andi	r10,r6,15
 2005c98:	02c000c4 	movi	r11,3
 2005c9c:	1107883a 	add	r3,r2,r4
 2005ca0:	290b883a 	add	r5,r5,r4
 2005ca4:	5a801e2e 	bgeu	r11,r10,2005d20 <memmove+0x154>
 2005ca8:	1813883a 	mov	r9,r3
 2005cac:	2811883a 	mov	r8,r5
 2005cb0:	500f883a 	mov	r7,r10
 2005cb4:	41000017 	ldw	r4,0(r8)
 2005cb8:	4a400104 	addi	r9,r9,4
 2005cbc:	39ffff04 	addi	r7,r7,-4
 2005cc0:	493fff15 	stw	r4,-4(r9)
 2005cc4:	42000104 	addi	r8,r8,4
 2005cc8:	59fffa36 	bltu	r11,r7,2005cb4 <memmove+0xe8>
 2005ccc:	513fff04 	addi	r4,r10,-4
 2005cd0:	2008d0ba 	srli	r4,r4,2
 2005cd4:	318000cc 	andi	r6,r6,3
 2005cd8:	21000044 	addi	r4,r4,1
 2005cdc:	2109883a 	add	r4,r4,r4
 2005ce0:	2109883a 	add	r4,r4,r4
 2005ce4:	1907883a 	add	r3,r3,r4
 2005ce8:	290b883a 	add	r5,r5,r4
 2005cec:	30000926 	beq	r6,zero,2005d14 <memmove+0x148>
 2005cf0:	198d883a 	add	r6,r3,r6
 2005cf4:	29c00003 	ldbu	r7,0(r5)
 2005cf8:	18c00044 	addi	r3,r3,1
 2005cfc:	29400044 	addi	r5,r5,1
 2005d00:	19ffffc5 	stb	r7,-1(r3)
 2005d04:	19bffb1e 	bne	r3,r6,2005cf4 <memmove+0x128>
 2005d08:	f800283a 	ret
 2005d0c:	1007883a 	mov	r3,r2
 2005d10:	003ff606 	br	2005cec <memmove+0x120>
 2005d14:	f800283a 	ret
 2005d18:	1007883a 	mov	r3,r2
 2005d1c:	003ff406 	br	2005cf0 <memmove+0x124>
 2005d20:	500d883a 	mov	r6,r10
 2005d24:	003ff106 	br	2005cec <memmove+0x120>

02005d28 <memset>:
 2005d28:	20c000cc 	andi	r3,r4,3
 2005d2c:	2005883a 	mov	r2,r4
 2005d30:	18004326 	beq	r3,zero,2005e40 <memset+0x118>
 2005d34:	31ffffc4 	addi	r7,r6,-1
 2005d38:	30004026 	beq	r6,zero,2005e3c <memset+0x114>
 2005d3c:	2813883a 	mov	r9,r5
 2005d40:	200d883a 	mov	r6,r4
 2005d44:	2007883a 	mov	r3,r4
 2005d48:	00000406 	br	2005d5c <memset+0x34>
 2005d4c:	3a3fffc4 	addi	r8,r7,-1
 2005d50:	31800044 	addi	r6,r6,1
 2005d54:	38003926 	beq	r7,zero,2005e3c <memset+0x114>
 2005d58:	400f883a 	mov	r7,r8
 2005d5c:	18c00044 	addi	r3,r3,1
 2005d60:	32400005 	stb	r9,0(r6)
 2005d64:	1a0000cc 	andi	r8,r3,3
 2005d68:	403ff81e 	bne	r8,zero,2005d4c <memset+0x24>
 2005d6c:	010000c4 	movi	r4,3
 2005d70:	21c02d2e 	bgeu	r4,r7,2005e28 <memset+0x100>
 2005d74:	29803fcc 	andi	r6,r5,255
 2005d78:	3008923a 	slli	r4,r6,8
 2005d7c:	218cb03a 	or	r6,r4,r6
 2005d80:	3008943a 	slli	r4,r6,16
 2005d84:	218cb03a 	or	r6,r4,r6
 2005d88:	010003c4 	movi	r4,15
 2005d8c:	21c0182e 	bgeu	r4,r7,2005df0 <memset+0xc8>
 2005d90:	3b3ffc04 	addi	r12,r7,-16
 2005d94:	6018d13a 	srli	r12,r12,4
 2005d98:	1a000104 	addi	r8,r3,4
 2005d9c:	1ac00204 	addi	r11,r3,8
 2005da0:	6008913a 	slli	r4,r12,4
 2005da4:	1a800304 	addi	r10,r3,12
 2005da8:	1813883a 	mov	r9,r3
 2005dac:	21000504 	addi	r4,r4,20
 2005db0:	1909883a 	add	r4,r3,r4
 2005db4:	49800015 	stw	r6,0(r9)
 2005db8:	41800015 	stw	r6,0(r8)
 2005dbc:	59800015 	stw	r6,0(r11)
 2005dc0:	51800015 	stw	r6,0(r10)
 2005dc4:	42000404 	addi	r8,r8,16
 2005dc8:	4a400404 	addi	r9,r9,16
 2005dcc:	5ac00404 	addi	r11,r11,16
 2005dd0:	52800404 	addi	r10,r10,16
 2005dd4:	413ff71e 	bne	r8,r4,2005db4 <memset+0x8c>
 2005dd8:	63000044 	addi	r12,r12,1
 2005ddc:	6018913a 	slli	r12,r12,4
 2005de0:	39c003cc 	andi	r7,r7,15
 2005de4:	010000c4 	movi	r4,3
 2005de8:	1b07883a 	add	r3,r3,r12
 2005dec:	21c00e2e 	bgeu	r4,r7,2005e28 <memset+0x100>
 2005df0:	1813883a 	mov	r9,r3
 2005df4:	3811883a 	mov	r8,r7
 2005df8:	010000c4 	movi	r4,3
 2005dfc:	49800015 	stw	r6,0(r9)
 2005e00:	423fff04 	addi	r8,r8,-4
 2005e04:	4a400104 	addi	r9,r9,4
 2005e08:	223ffc36 	bltu	r4,r8,2005dfc <memset+0xd4>
 2005e0c:	393fff04 	addi	r4,r7,-4
 2005e10:	2008d0ba 	srli	r4,r4,2
 2005e14:	39c000cc 	andi	r7,r7,3
 2005e18:	21000044 	addi	r4,r4,1
 2005e1c:	2109883a 	add	r4,r4,r4
 2005e20:	2109883a 	add	r4,r4,r4
 2005e24:	1907883a 	add	r3,r3,r4
 2005e28:	38000426 	beq	r7,zero,2005e3c <memset+0x114>
 2005e2c:	19cf883a 	add	r7,r3,r7
 2005e30:	19400005 	stb	r5,0(r3)
 2005e34:	18c00044 	addi	r3,r3,1
 2005e38:	19fffd1e 	bne	r3,r7,2005e30 <memset+0x108>
 2005e3c:	f800283a 	ret
 2005e40:	2007883a 	mov	r3,r4
 2005e44:	300f883a 	mov	r7,r6
 2005e48:	003fc806 	br	2005d6c <memset+0x44>

02005e4c <_Balloc>:
 2005e4c:	20801317 	ldw	r2,76(r4)
 2005e50:	defffc04 	addi	sp,sp,-16
 2005e54:	dc400115 	stw	r17,4(sp)
 2005e58:	dc000015 	stw	r16,0(sp)
 2005e5c:	dfc00315 	stw	ra,12(sp)
 2005e60:	dc800215 	stw	r18,8(sp)
 2005e64:	2023883a 	mov	r17,r4
 2005e68:	2821883a 	mov	r16,r5
 2005e6c:	10000f26 	beq	r2,zero,2005eac <_Balloc+0x60>
 2005e70:	8407883a 	add	r3,r16,r16
 2005e74:	18c7883a 	add	r3,r3,r3
 2005e78:	10c7883a 	add	r3,r2,r3
 2005e7c:	18800017 	ldw	r2,0(r3)
 2005e80:	10001126 	beq	r2,zero,2005ec8 <_Balloc+0x7c>
 2005e84:	11000017 	ldw	r4,0(r2)
 2005e88:	19000015 	stw	r4,0(r3)
 2005e8c:	10000415 	stw	zero,16(r2)
 2005e90:	10000315 	stw	zero,12(r2)
 2005e94:	dfc00317 	ldw	ra,12(sp)
 2005e98:	dc800217 	ldw	r18,8(sp)
 2005e9c:	dc400117 	ldw	r17,4(sp)
 2005ea0:	dc000017 	ldw	r16,0(sp)
 2005ea4:	dec00404 	addi	sp,sp,16
 2005ea8:	f800283a 	ret
 2005eac:	01400104 	movi	r5,4
 2005eb0:	01800844 	movi	r6,33
 2005eb4:	2008b700 	call	2008b70 <_calloc_r>
 2005eb8:	88801315 	stw	r2,76(r17)
 2005ebc:	103fec1e 	bne	r2,zero,2005e70 <_Balloc+0x24>
 2005ec0:	0005883a 	mov	r2,zero
 2005ec4:	003ff306 	br	2005e94 <_Balloc+0x48>
 2005ec8:	01400044 	movi	r5,1
 2005ecc:	2c24983a 	sll	r18,r5,r16
 2005ed0:	8809883a 	mov	r4,r17
 2005ed4:	91800144 	addi	r6,r18,5
 2005ed8:	318d883a 	add	r6,r6,r6
 2005edc:	318d883a 	add	r6,r6,r6
 2005ee0:	2008b700 	call	2008b70 <_calloc_r>
 2005ee4:	103ff626 	beq	r2,zero,2005ec0 <_Balloc+0x74>
 2005ee8:	14000115 	stw	r16,4(r2)
 2005eec:	14800215 	stw	r18,8(r2)
 2005ef0:	003fe606 	br	2005e8c <_Balloc+0x40>

02005ef4 <_Bfree>:
 2005ef4:	28000826 	beq	r5,zero,2005f18 <_Bfree+0x24>
 2005ef8:	28c00117 	ldw	r3,4(r5)
 2005efc:	20801317 	ldw	r2,76(r4)
 2005f00:	18c7883a 	add	r3,r3,r3
 2005f04:	18c7883a 	add	r3,r3,r3
 2005f08:	10c5883a 	add	r2,r2,r3
 2005f0c:	10c00017 	ldw	r3,0(r2)
 2005f10:	28c00015 	stw	r3,0(r5)
 2005f14:	11400015 	stw	r5,0(r2)
 2005f18:	f800283a 	ret

02005f1c <__multadd>:
 2005f1c:	defffa04 	addi	sp,sp,-24
 2005f20:	dc000115 	stw	r16,4(sp)
 2005f24:	2c000417 	ldw	r16,16(r5)
 2005f28:	dc800315 	stw	r18,12(sp)
 2005f2c:	dc400215 	stw	r17,8(sp)
 2005f30:	dfc00515 	stw	ra,20(sp)
 2005f34:	dcc00415 	stw	r19,16(sp)
 2005f38:	2823883a 	mov	r17,r5
 2005f3c:	2025883a 	mov	r18,r4
 2005f40:	2a400504 	addi	r9,r5,20
 2005f44:	0015883a 	mov	r10,zero
 2005f48:	4a000017 	ldw	r8,0(r9)
 2005f4c:	4a400104 	addi	r9,r9,4
 2005f50:	52800044 	addi	r10,r10,1
 2005f54:	40ffffcc 	andi	r3,r8,65535
 2005f58:	1987383a 	mul	r3,r3,r6
 2005f5c:	4010d43a 	srli	r8,r8,16
 2005f60:	19cf883a 	add	r7,r3,r7
 2005f64:	4191383a 	mul	r8,r8,r6
 2005f68:	3816d43a 	srli	r11,r7,16
 2005f6c:	38ffffcc 	andi	r3,r7,65535
 2005f70:	5a0f883a 	add	r7,r11,r8
 2005f74:	3810943a 	slli	r8,r7,16
 2005f78:	380ed43a 	srli	r7,r7,16
 2005f7c:	40c7883a 	add	r3,r8,r3
 2005f80:	48ffff15 	stw	r3,-4(r9)
 2005f84:	543ff016 	blt	r10,r16,2005f48 <__multadd+0x2c>
 2005f88:	38000926 	beq	r7,zero,2005fb0 <__multadd+0x94>
 2005f8c:	88800217 	ldw	r2,8(r17)
 2005f90:	80800f0e 	bge	r16,r2,2005fd0 <__multadd+0xb4>
 2005f94:	80800144 	addi	r2,r16,5
 2005f98:	1085883a 	add	r2,r2,r2
 2005f9c:	1085883a 	add	r2,r2,r2
 2005fa0:	8885883a 	add	r2,r17,r2
 2005fa4:	11c00015 	stw	r7,0(r2)
 2005fa8:	84000044 	addi	r16,r16,1
 2005fac:	8c000415 	stw	r16,16(r17)
 2005fb0:	8805883a 	mov	r2,r17
 2005fb4:	dfc00517 	ldw	ra,20(sp)
 2005fb8:	dcc00417 	ldw	r19,16(sp)
 2005fbc:	dc800317 	ldw	r18,12(sp)
 2005fc0:	dc400217 	ldw	r17,8(sp)
 2005fc4:	dc000117 	ldw	r16,4(sp)
 2005fc8:	dec00604 	addi	sp,sp,24
 2005fcc:	f800283a 	ret
 2005fd0:	89400117 	ldw	r5,4(r17)
 2005fd4:	9009883a 	mov	r4,r18
 2005fd8:	d9c00015 	stw	r7,0(sp)
 2005fdc:	29400044 	addi	r5,r5,1
 2005fe0:	2005e4c0 	call	2005e4c <_Balloc>
 2005fe4:	89800417 	ldw	r6,16(r17)
 2005fe8:	11000304 	addi	r4,r2,12
 2005fec:	89400304 	addi	r5,r17,12
 2005ff0:	31800084 	addi	r6,r6,2
 2005ff4:	318d883a 	add	r6,r6,r6
 2005ff8:	318d883a 	add	r6,r6,r6
 2005ffc:	1027883a 	mov	r19,r2
 2006000:	2005a940 	call	2005a94 <memcpy>
 2006004:	d9c00017 	ldw	r7,0(sp)
 2006008:	88000a26 	beq	r17,zero,2006034 <__multadd+0x118>
 200600c:	89000117 	ldw	r4,4(r17)
 2006010:	90c01317 	ldw	r3,76(r18)
 2006014:	2109883a 	add	r4,r4,r4
 2006018:	2109883a 	add	r4,r4,r4
 200601c:	1907883a 	add	r3,r3,r4
 2006020:	18800017 	ldw	r2,0(r3)
 2006024:	88800015 	stw	r2,0(r17)
 2006028:	1c400015 	stw	r17,0(r3)
 200602c:	9823883a 	mov	r17,r19
 2006030:	003fd806 	br	2005f94 <__multadd+0x78>
 2006034:	9823883a 	mov	r17,r19
 2006038:	003fd606 	br	2005f94 <__multadd+0x78>

0200603c <__s2b>:
 200603c:	defff904 	addi	sp,sp,-28
 2006040:	dc400115 	stw	r17,4(sp)
 2006044:	dc000015 	stw	r16,0(sp)
 2006048:	2023883a 	mov	r17,r4
 200604c:	2821883a 	mov	r16,r5
 2006050:	39000204 	addi	r4,r7,8
 2006054:	01400244 	movi	r5,9
 2006058:	dcc00315 	stw	r19,12(sp)
 200605c:	dc800215 	stw	r18,8(sp)
 2006060:	dfc00615 	stw	ra,24(sp)
 2006064:	dd400515 	stw	r21,20(sp)
 2006068:	dd000415 	stw	r20,16(sp)
 200606c:	3825883a 	mov	r18,r7
 2006070:	3027883a 	mov	r19,r6
 2006074:	2009f740 	call	2009f74 <__divsi3>
 2006078:	00c00044 	movi	r3,1
 200607c:	000b883a 	mov	r5,zero
 2006080:	1880030e 	bge	r3,r2,2006090 <__s2b+0x54>
 2006084:	18c7883a 	add	r3,r3,r3
 2006088:	29400044 	addi	r5,r5,1
 200608c:	18bffd16 	blt	r3,r2,2006084 <__s2b+0x48>
 2006090:	8809883a 	mov	r4,r17
 2006094:	2005e4c0 	call	2005e4c <_Balloc>
 2006098:	d8c00717 	ldw	r3,28(sp)
 200609c:	10c00515 	stw	r3,20(r2)
 20060a0:	00c00044 	movi	r3,1
 20060a4:	10c00415 	stw	r3,16(r2)
 20060a8:	00c00244 	movi	r3,9
 20060ac:	1cc0210e 	bge	r3,r19,2006134 <__s2b+0xf8>
 20060b0:	80eb883a 	add	r21,r16,r3
 20060b4:	a829883a 	mov	r20,r21
 20060b8:	84e1883a 	add	r16,r16,r19
 20060bc:	a1c00007 	ldb	r7,0(r20)
 20060c0:	8809883a 	mov	r4,r17
 20060c4:	a5000044 	addi	r20,r20,1
 20060c8:	100b883a 	mov	r5,r2
 20060cc:	01800284 	movi	r6,10
 20060d0:	39fff404 	addi	r7,r7,-48
 20060d4:	2005f1c0 	call	2005f1c <__multadd>
 20060d8:	a43ff81e 	bne	r20,r16,20060bc <__s2b+0x80>
 20060dc:	ace1883a 	add	r16,r21,r19
 20060e0:	843ffe04 	addi	r16,r16,-8
 20060e4:	9c800a0e 	bge	r19,r18,2006110 <__s2b+0xd4>
 20060e8:	94e5c83a 	sub	r18,r18,r19
 20060ec:	84a5883a 	add	r18,r16,r18
 20060f0:	81c00007 	ldb	r7,0(r16)
 20060f4:	8809883a 	mov	r4,r17
 20060f8:	84000044 	addi	r16,r16,1
 20060fc:	100b883a 	mov	r5,r2
 2006100:	01800284 	movi	r6,10
 2006104:	39fff404 	addi	r7,r7,-48
 2006108:	2005f1c0 	call	2005f1c <__multadd>
 200610c:	84bff81e 	bne	r16,r18,20060f0 <__s2b+0xb4>
 2006110:	dfc00617 	ldw	ra,24(sp)
 2006114:	dd400517 	ldw	r21,20(sp)
 2006118:	dd000417 	ldw	r20,16(sp)
 200611c:	dcc00317 	ldw	r19,12(sp)
 2006120:	dc800217 	ldw	r18,8(sp)
 2006124:	dc400117 	ldw	r17,4(sp)
 2006128:	dc000017 	ldw	r16,0(sp)
 200612c:	dec00704 	addi	sp,sp,28
 2006130:	f800283a 	ret
 2006134:	84000284 	addi	r16,r16,10
 2006138:	1827883a 	mov	r19,r3
 200613c:	003fe906 	br	20060e4 <__s2b+0xa8>

02006140 <__hi0bits>:
 2006140:	20bfffec 	andhi	r2,r4,65535
 2006144:	1000141e 	bne	r2,zero,2006198 <__hi0bits+0x58>
 2006148:	2008943a 	slli	r4,r4,16
 200614c:	00800404 	movi	r2,16
 2006150:	20ffc02c 	andhi	r3,r4,65280
 2006154:	1800021e 	bne	r3,zero,2006160 <__hi0bits+0x20>
 2006158:	2008923a 	slli	r4,r4,8
 200615c:	10800204 	addi	r2,r2,8
 2006160:	20fc002c 	andhi	r3,r4,61440
 2006164:	1800021e 	bne	r3,zero,2006170 <__hi0bits+0x30>
 2006168:	2008913a 	slli	r4,r4,4
 200616c:	10800104 	addi	r2,r2,4
 2006170:	20f0002c 	andhi	r3,r4,49152
 2006174:	1800031e 	bne	r3,zero,2006184 <__hi0bits+0x44>
 2006178:	2109883a 	add	r4,r4,r4
 200617c:	10800084 	addi	r2,r2,2
 2006180:	2109883a 	add	r4,r4,r4
 2006184:	20000316 	blt	r4,zero,2006194 <__hi0bits+0x54>
 2006188:	2110002c 	andhi	r4,r4,16384
 200618c:	2000041e 	bne	r4,zero,20061a0 <__hi0bits+0x60>
 2006190:	00800804 	movi	r2,32
 2006194:	f800283a 	ret
 2006198:	0005883a 	mov	r2,zero
 200619c:	003fec06 	br	2006150 <__hi0bits+0x10>
 20061a0:	10800044 	addi	r2,r2,1
 20061a4:	f800283a 	ret

020061a8 <__lo0bits>:
 20061a8:	20c00017 	ldw	r3,0(r4)
 20061ac:	188001cc 	andi	r2,r3,7
 20061b0:	10000826 	beq	r2,zero,20061d4 <__lo0bits+0x2c>
 20061b4:	1880004c 	andi	r2,r3,1
 20061b8:	1000211e 	bne	r2,zero,2006240 <__lo0bits+0x98>
 20061bc:	1880008c 	andi	r2,r3,2
 20061c0:	1000211e 	bne	r2,zero,2006248 <__lo0bits+0xa0>
 20061c4:	1806d0ba 	srli	r3,r3,2
 20061c8:	00800084 	movi	r2,2
 20061cc:	20c00015 	stw	r3,0(r4)
 20061d0:	f800283a 	ret
 20061d4:	18bfffcc 	andi	r2,r3,65535
 20061d8:	10001326 	beq	r2,zero,2006228 <__lo0bits+0x80>
 20061dc:	0005883a 	mov	r2,zero
 20061e0:	19403fcc 	andi	r5,r3,255
 20061e4:	2800021e 	bne	r5,zero,20061f0 <__lo0bits+0x48>
 20061e8:	1806d23a 	srli	r3,r3,8
 20061ec:	10800204 	addi	r2,r2,8
 20061f0:	194003cc 	andi	r5,r3,15
 20061f4:	2800021e 	bne	r5,zero,2006200 <__lo0bits+0x58>
 20061f8:	1806d13a 	srli	r3,r3,4
 20061fc:	10800104 	addi	r2,r2,4
 2006200:	194000cc 	andi	r5,r3,3
 2006204:	2800021e 	bne	r5,zero,2006210 <__lo0bits+0x68>
 2006208:	1806d0ba 	srli	r3,r3,2
 200620c:	10800084 	addi	r2,r2,2
 2006210:	1940004c 	andi	r5,r3,1
 2006214:	2800081e 	bne	r5,zero,2006238 <__lo0bits+0x90>
 2006218:	1806d07a 	srli	r3,r3,1
 200621c:	1800051e 	bne	r3,zero,2006234 <__lo0bits+0x8c>
 2006220:	00800804 	movi	r2,32
 2006224:	f800283a 	ret
 2006228:	1806d43a 	srli	r3,r3,16
 200622c:	00800404 	movi	r2,16
 2006230:	003feb06 	br	20061e0 <__lo0bits+0x38>
 2006234:	10800044 	addi	r2,r2,1
 2006238:	20c00015 	stw	r3,0(r4)
 200623c:	f800283a 	ret
 2006240:	0005883a 	mov	r2,zero
 2006244:	f800283a 	ret
 2006248:	1806d07a 	srli	r3,r3,1
 200624c:	00800044 	movi	r2,1
 2006250:	20c00015 	stw	r3,0(r4)
 2006254:	f800283a 	ret

02006258 <__i2b>:
 2006258:	defffd04 	addi	sp,sp,-12
 200625c:	dc000015 	stw	r16,0(sp)
 2006260:	04000044 	movi	r16,1
 2006264:	dc400115 	stw	r17,4(sp)
 2006268:	2823883a 	mov	r17,r5
 200626c:	800b883a 	mov	r5,r16
 2006270:	dfc00215 	stw	ra,8(sp)
 2006274:	2005e4c0 	call	2005e4c <_Balloc>
 2006278:	14400515 	stw	r17,20(r2)
 200627c:	14000415 	stw	r16,16(r2)
 2006280:	dfc00217 	ldw	ra,8(sp)
 2006284:	dc400117 	ldw	r17,4(sp)
 2006288:	dc000017 	ldw	r16,0(sp)
 200628c:	dec00304 	addi	sp,sp,12
 2006290:	f800283a 	ret

02006294 <__multiply>:
 2006294:	defffa04 	addi	sp,sp,-24
 2006298:	dcc00315 	stw	r19,12(sp)
 200629c:	dc800215 	stw	r18,8(sp)
 20062a0:	2cc00417 	ldw	r19,16(r5)
 20062a4:	34800417 	ldw	r18,16(r6)
 20062a8:	dd000415 	stw	r20,16(sp)
 20062ac:	dc400115 	stw	r17,4(sp)
 20062b0:	dfc00515 	stw	ra,20(sp)
 20062b4:	dc000015 	stw	r16,0(sp)
 20062b8:	2829883a 	mov	r20,r5
 20062bc:	3023883a 	mov	r17,r6
 20062c0:	9c807016 	blt	r19,r18,2006484 <__multiply+0x1f0>
 20062c4:	9005883a 	mov	r2,r18
 20062c8:	9825883a 	mov	r18,r19
 20062cc:	1027883a 	mov	r19,r2
 20062d0:	a0800217 	ldw	r2,8(r20)
 20062d4:	94e1883a 	add	r16,r18,r19
 20062d8:	a1400117 	ldw	r5,4(r20)
 20062dc:	1400010e 	bge	r2,r16,20062e4 <__multiply+0x50>
 20062e0:	29400044 	addi	r5,r5,1
 20062e4:	2005e4c0 	call	2005e4c <_Balloc>
 20062e8:	8417883a 	add	r11,r16,r16
 20062ec:	13000504 	addi	r12,r2,20
 20062f0:	5ad7883a 	add	r11,r11,r11
 20062f4:	62d7883a 	add	r11,r12,r11
 20062f8:	6007883a 	mov	r3,r12
 20062fc:	62c0032e 	bgeu	r12,r11,200630c <__multiply+0x78>
 2006300:	18000015 	stw	zero,0(r3)
 2006304:	18c00104 	addi	r3,r3,4
 2006308:	1afffd36 	bltu	r3,r11,2006300 <__multiply+0x6c>
 200630c:	9ce7883a 	add	r19,r19,r19
 2006310:	94a5883a 	add	r18,r18,r18
 2006314:	89800504 	addi	r6,r17,20
 2006318:	9ce7883a 	add	r19,r19,r19
 200631c:	a3800504 	addi	r14,r20,20
 2006320:	94a5883a 	add	r18,r18,r18
 2006324:	34db883a 	add	r13,r6,r19
 2006328:	7495883a 	add	r10,r14,r18
 200632c:	3340422e 	bgeu	r6,r13,2006438 <__multiply+0x1a4>
 2006330:	34400017 	ldw	r17,0(r6)
 2006334:	8cbfffcc 	andi	r18,r17,65535
 2006338:	90001b26 	beq	r18,zero,20063a8 <__multiply+0x114>
 200633c:	6013883a 	mov	r9,r12
 2006340:	7023883a 	mov	r17,r14
 2006344:	0011883a 	mov	r8,zero
 2006348:	88c00017 	ldw	r3,0(r17)
 200634c:	4bc00017 	ldw	r15,0(r9)
 2006350:	8c400104 	addi	r17,r17,4
 2006354:	19ffffcc 	andi	r7,r3,65535
 2006358:	3c8f383a 	mul	r7,r7,r18
 200635c:	1808d43a 	srli	r4,r3,16
 2006360:	797fffcc 	andi	r5,r15,65535
 2006364:	29cb883a 	add	r5,r5,r7
 2006368:	2a0b883a 	add	r5,r5,r8
 200636c:	2489383a 	mul	r4,r4,r18
 2006370:	7806d43a 	srli	r3,r15,16
 2006374:	2810d43a 	srli	r8,r5,16
 2006378:	297fffcc 	andi	r5,r5,65535
 200637c:	1907883a 	add	r3,r3,r4
 2006380:	1a07883a 	add	r3,r3,r8
 2006384:	1808943a 	slli	r4,r3,16
 2006388:	480f883a 	mov	r7,r9
 200638c:	1810d43a 	srli	r8,r3,16
 2006390:	214ab03a 	or	r5,r4,r5
 2006394:	49400015 	stw	r5,0(r9)
 2006398:	4a400104 	addi	r9,r9,4
 200639c:	8abfea36 	bltu	r17,r10,2006348 <__multiply+0xb4>
 20063a0:	3a000115 	stw	r8,4(r7)
 20063a4:	34400017 	ldw	r17,0(r6)
 20063a8:	8822d43a 	srli	r17,r17,16
 20063ac:	88001f26 	beq	r17,zero,200642c <__multiply+0x198>
 20063b0:	60c00017 	ldw	r3,0(r12)
 20063b4:	7013883a 	mov	r9,r14
 20063b8:	601f883a 	mov	r15,r12
 20063bc:	1811883a 	mov	r8,r3
 20063c0:	6027883a 	mov	r19,r12
 20063c4:	000f883a 	mov	r7,zero
 20063c8:	00000106 	br	20063d0 <__multiply+0x13c>
 20063cc:	9027883a 	mov	r19,r18
 20063d0:	4940000b 	ldhu	r5,0(r9)
 20063d4:	4010d43a 	srli	r8,r8,16
 20063d8:	193fffcc 	andi	r4,r3,65535
 20063dc:	2c4b383a 	mul	r5,r5,r17
 20063e0:	7bc00104 	addi	r15,r15,4
 20063e4:	4a400104 	addi	r9,r9,4
 20063e8:	2a0b883a 	add	r5,r5,r8
 20063ec:	29cb883a 	add	r5,r5,r7
 20063f0:	2806943a 	slli	r3,r5,16
 20063f4:	9c800104 	addi	r18,r19,4
 20063f8:	280ad43a 	srli	r5,r5,16
 20063fc:	1908b03a 	or	r4,r3,r4
 2006400:	793fff15 	stw	r4,-4(r15)
 2006404:	48ffff17 	ldw	r3,-4(r9)
 2006408:	92000017 	ldw	r8,0(r18)
 200640c:	1806d43a 	srli	r3,r3,16
 2006410:	413fffcc 	andi	r4,r8,65535
 2006414:	1c47383a 	mul	r3,r3,r17
 2006418:	1907883a 	add	r3,r3,r4
 200641c:	1947883a 	add	r3,r3,r5
 2006420:	180ed43a 	srli	r7,r3,16
 2006424:	4abfe936 	bltu	r9,r10,20063cc <__multiply+0x138>
 2006428:	98c00115 	stw	r3,4(r19)
 200642c:	31800104 	addi	r6,r6,4
 2006430:	63000104 	addi	r12,r12,4
 2006434:	337fbe36 	bltu	r6,r13,2006330 <__multiply+0x9c>
 2006438:	0400090e 	bge	zero,r16,2006460 <__multiply+0x1cc>
 200643c:	58ffff17 	ldw	r3,-4(r11)
 2006440:	5affff04 	addi	r11,r11,-4
 2006444:	18000326 	beq	r3,zero,2006454 <__multiply+0x1c0>
 2006448:	00000506 	br	2006460 <__multiply+0x1cc>
 200644c:	58c00017 	ldw	r3,0(r11)
 2006450:	1800031e 	bne	r3,zero,2006460 <__multiply+0x1cc>
 2006454:	843fffc4 	addi	r16,r16,-1
 2006458:	5affff04 	addi	r11,r11,-4
 200645c:	803ffb1e 	bne	r16,zero,200644c <__multiply+0x1b8>
 2006460:	14000415 	stw	r16,16(r2)
 2006464:	dfc00517 	ldw	ra,20(sp)
 2006468:	dd000417 	ldw	r20,16(sp)
 200646c:	dcc00317 	ldw	r19,12(sp)
 2006470:	dc800217 	ldw	r18,8(sp)
 2006474:	dc400117 	ldw	r17,4(sp)
 2006478:	dc000017 	ldw	r16,0(sp)
 200647c:	dec00604 	addi	sp,sp,24
 2006480:	f800283a 	ret
 2006484:	3029883a 	mov	r20,r6
 2006488:	2823883a 	mov	r17,r5
 200648c:	003f9006 	br	20062d0 <__multiply+0x3c>

02006490 <__pow5mult>:
 2006490:	defffa04 	addi	sp,sp,-24
 2006494:	dcc00315 	stw	r19,12(sp)
 2006498:	dc800215 	stw	r18,8(sp)
 200649c:	dc000015 	stw	r16,0(sp)
 20064a0:	dfc00515 	stw	ra,20(sp)
 20064a4:	dd000415 	stw	r20,16(sp)
 20064a8:	dc400115 	stw	r17,4(sp)
 20064ac:	308000cc 	andi	r2,r6,3
 20064b0:	3021883a 	mov	r16,r6
 20064b4:	2027883a 	mov	r19,r4
 20064b8:	2825883a 	mov	r18,r5
 20064bc:	10002e1e 	bne	r2,zero,2006578 <__pow5mult+0xe8>
 20064c0:	8021d0ba 	srai	r16,r16,2
 20064c4:	80001a26 	beq	r16,zero,2006530 <__pow5mult+0xa0>
 20064c8:	9c401217 	ldw	r17,72(r19)
 20064cc:	8800061e 	bne	r17,zero,20064e8 <__pow5mult+0x58>
 20064d0:	00003406 	br	20065a4 <__pow5mult+0x114>
 20064d4:	8021d07a 	srai	r16,r16,1
 20064d8:	80001526 	beq	r16,zero,2006530 <__pow5mult+0xa0>
 20064dc:	88800017 	ldw	r2,0(r17)
 20064e0:	10001c26 	beq	r2,zero,2006554 <__pow5mult+0xc4>
 20064e4:	1023883a 	mov	r17,r2
 20064e8:	80c0004c 	andi	r3,r16,1
 20064ec:	183ff926 	beq	r3,zero,20064d4 <__pow5mult+0x44>
 20064f0:	900b883a 	mov	r5,r18
 20064f4:	880d883a 	mov	r6,r17
 20064f8:	9809883a 	mov	r4,r19
 20064fc:	20062940 	call	2006294 <__multiply>
 2006500:	90001b26 	beq	r18,zero,2006570 <__pow5mult+0xe0>
 2006504:	91c00117 	ldw	r7,4(r18)
 2006508:	98c01317 	ldw	r3,76(r19)
 200650c:	8021d07a 	srai	r16,r16,1
 2006510:	39cf883a 	add	r7,r7,r7
 2006514:	39cf883a 	add	r7,r7,r7
 2006518:	19c7883a 	add	r3,r3,r7
 200651c:	19000017 	ldw	r4,0(r3)
 2006520:	91000015 	stw	r4,0(r18)
 2006524:	1c800015 	stw	r18,0(r3)
 2006528:	1025883a 	mov	r18,r2
 200652c:	803feb1e 	bne	r16,zero,20064dc <__pow5mult+0x4c>
 2006530:	9005883a 	mov	r2,r18
 2006534:	dfc00517 	ldw	ra,20(sp)
 2006538:	dd000417 	ldw	r20,16(sp)
 200653c:	dcc00317 	ldw	r19,12(sp)
 2006540:	dc800217 	ldw	r18,8(sp)
 2006544:	dc400117 	ldw	r17,4(sp)
 2006548:	dc000017 	ldw	r16,0(sp)
 200654c:	dec00604 	addi	sp,sp,24
 2006550:	f800283a 	ret
 2006554:	9809883a 	mov	r4,r19
 2006558:	880b883a 	mov	r5,r17
 200655c:	880d883a 	mov	r6,r17
 2006560:	20062940 	call	2006294 <__multiply>
 2006564:	88800015 	stw	r2,0(r17)
 2006568:	10000015 	stw	zero,0(r2)
 200656c:	003fdd06 	br	20064e4 <__pow5mult+0x54>
 2006570:	1025883a 	mov	r18,r2
 2006574:	003fd706 	br	20064d4 <__pow5mult+0x44>
 2006578:	10bfffc4 	addi	r2,r2,-1
 200657c:	1085883a 	add	r2,r2,r2
 2006580:	00c08074 	movhi	r3,513
 2006584:	18fc0f04 	addi	r3,r3,-4036
 2006588:	1085883a 	add	r2,r2,r2
 200658c:	1885883a 	add	r2,r3,r2
 2006590:	11800017 	ldw	r6,0(r2)
 2006594:	000f883a 	mov	r7,zero
 2006598:	2005f1c0 	call	2005f1c <__multadd>
 200659c:	1025883a 	mov	r18,r2
 20065a0:	003fc706 	br	20064c0 <__pow5mult+0x30>
 20065a4:	05000044 	movi	r20,1
 20065a8:	9809883a 	mov	r4,r19
 20065ac:	a00b883a 	mov	r5,r20
 20065b0:	2005e4c0 	call	2005e4c <_Balloc>
 20065b4:	1023883a 	mov	r17,r2
 20065b8:	00809c44 	movi	r2,625
 20065bc:	88800515 	stw	r2,20(r17)
 20065c0:	8d000415 	stw	r20,16(r17)
 20065c4:	9c401215 	stw	r17,72(r19)
 20065c8:	88000015 	stw	zero,0(r17)
 20065cc:	003fc606 	br	20064e8 <__pow5mult+0x58>

020065d0 <__lshift>:
 20065d0:	defff904 	addi	sp,sp,-28
 20065d4:	dd000415 	stw	r20,16(sp)
 20065d8:	dcc00315 	stw	r19,12(sp)
 20065dc:	3029d17a 	srai	r20,r6,5
 20065e0:	2cc00417 	ldw	r19,16(r5)
 20065e4:	28800217 	ldw	r2,8(r5)
 20065e8:	dd400515 	stw	r21,20(sp)
 20065ec:	a4e7883a 	add	r19,r20,r19
 20065f0:	dc800215 	stw	r18,8(sp)
 20065f4:	dc400115 	stw	r17,4(sp)
 20065f8:	dc000015 	stw	r16,0(sp)
 20065fc:	dfc00615 	stw	ra,24(sp)
 2006600:	9c000044 	addi	r16,r19,1
 2006604:	2823883a 	mov	r17,r5
 2006608:	302b883a 	mov	r21,r6
 200660c:	2025883a 	mov	r18,r4
 2006610:	29400117 	ldw	r5,4(r5)
 2006614:	1400030e 	bge	r2,r16,2006624 <__lshift+0x54>
 2006618:	1085883a 	add	r2,r2,r2
 200661c:	29400044 	addi	r5,r5,1
 2006620:	143ffd16 	blt	r2,r16,2006618 <__lshift+0x48>
 2006624:	9009883a 	mov	r4,r18
 2006628:	2005e4c0 	call	2005e4c <_Balloc>
 200662c:	11c00504 	addi	r7,r2,20
 2006630:	0500090e 	bge	zero,r20,2006658 <__lshift+0x88>
 2006634:	3811883a 	mov	r8,r7
 2006638:	0007883a 	mov	r3,zero
 200663c:	40000015 	stw	zero,0(r8)
 2006640:	18c00044 	addi	r3,r3,1
 2006644:	42000104 	addi	r8,r8,4
 2006648:	1d3ffc1e 	bne	r3,r20,200663c <__lshift+0x6c>
 200664c:	18c7883a 	add	r3,r3,r3
 2006650:	18c7883a 	add	r3,r3,r3
 2006654:	38cf883a 	add	r7,r7,r3
 2006658:	89000417 	ldw	r4,16(r17)
 200665c:	88c00504 	addi	r3,r17,20
 2006660:	a98007cc 	andi	r6,r21,31
 2006664:	2109883a 	add	r4,r4,r4
 2006668:	2109883a 	add	r4,r4,r4
 200666c:	1909883a 	add	r4,r3,r4
 2006670:	30002326 	beq	r6,zero,2006700 <__lshift+0x130>
 2006674:	01400804 	movi	r5,32
 2006678:	298bc83a 	sub	r5,r5,r6
 200667c:	0013883a 	mov	r9,zero
 2006680:	1a000017 	ldw	r8,0(r3)
 2006684:	3815883a 	mov	r10,r7
 2006688:	39c00104 	addi	r7,r7,4
 200668c:	4190983a 	sll	r8,r8,r6
 2006690:	18c00104 	addi	r3,r3,4
 2006694:	4a10b03a 	or	r8,r9,r8
 2006698:	3a3fff15 	stw	r8,-4(r7)
 200669c:	1a3fff17 	ldw	r8,-4(r3)
 20066a0:	4152d83a 	srl	r9,r8,r5
 20066a4:	193ff636 	bltu	r3,r4,2006680 <__lshift+0xb0>
 20066a8:	52400115 	stw	r9,4(r10)
 20066ac:	48001a1e 	bne	r9,zero,2006718 <__lshift+0x148>
 20066b0:	843fffc4 	addi	r16,r16,-1
 20066b4:	14000415 	stw	r16,16(r2)
 20066b8:	88000826 	beq	r17,zero,20066dc <__lshift+0x10c>
 20066bc:	89000117 	ldw	r4,4(r17)
 20066c0:	90c01317 	ldw	r3,76(r18)
 20066c4:	2109883a 	add	r4,r4,r4
 20066c8:	2109883a 	add	r4,r4,r4
 20066cc:	1907883a 	add	r3,r3,r4
 20066d0:	19000017 	ldw	r4,0(r3)
 20066d4:	89000015 	stw	r4,0(r17)
 20066d8:	1c400015 	stw	r17,0(r3)
 20066dc:	dfc00617 	ldw	ra,24(sp)
 20066e0:	dd400517 	ldw	r21,20(sp)
 20066e4:	dd000417 	ldw	r20,16(sp)
 20066e8:	dcc00317 	ldw	r19,12(sp)
 20066ec:	dc800217 	ldw	r18,8(sp)
 20066f0:	dc400117 	ldw	r17,4(sp)
 20066f4:	dc000017 	ldw	r16,0(sp)
 20066f8:	dec00704 	addi	sp,sp,28
 20066fc:	f800283a 	ret
 2006700:	19400017 	ldw	r5,0(r3)
 2006704:	39c00104 	addi	r7,r7,4
 2006708:	18c00104 	addi	r3,r3,4
 200670c:	397fff15 	stw	r5,-4(r7)
 2006710:	193ffb36 	bltu	r3,r4,2006700 <__lshift+0x130>
 2006714:	003fe606 	br	20066b0 <__lshift+0xe0>
 2006718:	9c000084 	addi	r16,r19,2
 200671c:	003fe406 	br	20066b0 <__lshift+0xe0>

02006720 <__mcmp>:
 2006720:	20800417 	ldw	r2,16(r4)
 2006724:	28c00417 	ldw	r3,16(r5)
 2006728:	10c5c83a 	sub	r2,r2,r3
 200672c:	1000111e 	bne	r2,zero,2006774 <__mcmp+0x54>
 2006730:	18c7883a 	add	r3,r3,r3
 2006734:	18c7883a 	add	r3,r3,r3
 2006738:	21000504 	addi	r4,r4,20
 200673c:	29400504 	addi	r5,r5,20
 2006740:	20c5883a 	add	r2,r4,r3
 2006744:	28cb883a 	add	r5,r5,r3
 2006748:	00000106 	br	2006750 <__mcmp+0x30>
 200674c:	20800a2e 	bgeu	r4,r2,2006778 <__mcmp+0x58>
 2006750:	10bfff04 	addi	r2,r2,-4
 2006754:	297fff04 	addi	r5,r5,-4
 2006758:	11800017 	ldw	r6,0(r2)
 200675c:	28c00017 	ldw	r3,0(r5)
 2006760:	30fffa26 	beq	r6,r3,200674c <__mcmp+0x2c>
 2006764:	30c00236 	bltu	r6,r3,2006770 <__mcmp+0x50>
 2006768:	00800044 	movi	r2,1
 200676c:	f800283a 	ret
 2006770:	00bfffc4 	movi	r2,-1
 2006774:	f800283a 	ret
 2006778:	0005883a 	mov	r2,zero
 200677c:	f800283a 	ret

02006780 <__mdiff>:
 2006780:	defffb04 	addi	sp,sp,-20
 2006784:	dc000015 	stw	r16,0(sp)
 2006788:	2821883a 	mov	r16,r5
 200678c:	dcc00315 	stw	r19,12(sp)
 2006790:	300b883a 	mov	r5,r6
 2006794:	2027883a 	mov	r19,r4
 2006798:	8009883a 	mov	r4,r16
 200679c:	dc800215 	stw	r18,8(sp)
 20067a0:	dfc00415 	stw	ra,16(sp)
 20067a4:	dc400115 	stw	r17,4(sp)
 20067a8:	3025883a 	mov	r18,r6
 20067ac:	20067200 	call	2006720 <__mcmp>
 20067b0:	10005226 	beq	r2,zero,20068fc <__mdiff+0x17c>
 20067b4:	10004c16 	blt	r2,zero,20068e8 <__mdiff+0x168>
 20067b8:	0023883a 	mov	r17,zero
 20067bc:	81400117 	ldw	r5,4(r16)
 20067c0:	9809883a 	mov	r4,r19
 20067c4:	2005e4c0 	call	2005e4c <_Balloc>
 20067c8:	83400417 	ldw	r13,16(r16)
 20067cc:	93800417 	ldw	r14,16(r18)
 20067d0:	81000504 	addi	r4,r16,20
 20067d4:	6b59883a 	add	r12,r13,r13
 20067d8:	739d883a 	add	r14,r14,r14
 20067dc:	6319883a 	add	r12,r12,r12
 20067e0:	91800504 	addi	r6,r18,20
 20067e4:	739d883a 	add	r14,r14,r14
 20067e8:	14400315 	stw	r17,12(r2)
 20067ec:	2319883a 	add	r12,r4,r12
 20067f0:	339d883a 	add	r14,r6,r14
 20067f4:	12400504 	addi	r9,r2,20
 20067f8:	0007883a 	mov	r3,zero
 20067fc:	22000017 	ldw	r8,0(r4)
 2006800:	32800017 	ldw	r10,0(r6)
 2006804:	4ac00104 	addi	r11,r9,4
 2006808:	41ffffcc 	andi	r7,r8,65535
 200680c:	38c7883a 	add	r3,r7,r3
 2006810:	51ffffcc 	andi	r7,r10,65535
 2006814:	19cfc83a 	sub	r7,r3,r7
 2006818:	4010d43a 	srli	r8,r8,16
 200681c:	5014d43a 	srli	r10,r10,16
 2006820:	3807d43a 	srai	r3,r7,16
 2006824:	39ffffcc 	andi	r7,r7,65535
 2006828:	4291c83a 	sub	r8,r8,r10
 200682c:	40c7883a 	add	r3,r8,r3
 2006830:	1810943a 	slli	r8,r3,16
 2006834:	31800104 	addi	r6,r6,4
 2006838:	21000104 	addi	r4,r4,4
 200683c:	41ceb03a 	or	r7,r8,r7
 2006840:	49c00015 	stw	r7,0(r9)
 2006844:	1807d43a 	srai	r3,r3,16
 2006848:	580b883a 	mov	r5,r11
 200684c:	5813883a 	mov	r9,r11
 2006850:	33bfea36 	bltu	r6,r14,20067fc <__mdiff+0x7c>
 2006854:	2011883a 	mov	r8,r4
 2006858:	2300152e 	bgeu	r4,r12,20068b0 <__mdiff+0x130>
 200685c:	21400017 	ldw	r5,0(r4)
 2006860:	4a400104 	addi	r9,r9,4
 2006864:	21000104 	addi	r4,r4,4
 2006868:	29ffffcc 	andi	r7,r5,65535
 200686c:	38c7883a 	add	r3,r7,r3
 2006870:	280ad43a 	srli	r5,r5,16
 2006874:	180dd43a 	srai	r6,r3,16
 2006878:	19ffffcc 	andi	r7,r3,65535
 200687c:	3147883a 	add	r3,r6,r5
 2006880:	180a943a 	slli	r5,r3,16
 2006884:	1807d43a 	srai	r3,r3,16
 2006888:	29ceb03a 	or	r7,r5,r7
 200688c:	49ffff15 	stw	r7,-4(r9)
 2006890:	233ff236 	bltu	r4,r12,200685c <__mdiff+0xdc>
 2006894:	0206303a 	nor	r3,zero,r8
 2006898:	1b07883a 	add	r3,r3,r12
 200689c:	1806d0ba 	srli	r3,r3,2
 20068a0:	18c00044 	addi	r3,r3,1
 20068a4:	18c7883a 	add	r3,r3,r3
 20068a8:	18c7883a 	add	r3,r3,r3
 20068ac:	58cb883a 	add	r5,r11,r3
 20068b0:	28ffff04 	addi	r3,r5,-4
 20068b4:	3800041e 	bne	r7,zero,20068c8 <__mdiff+0x148>
 20068b8:	18ffff04 	addi	r3,r3,-4
 20068bc:	19000017 	ldw	r4,0(r3)
 20068c0:	6b7fffc4 	addi	r13,r13,-1
 20068c4:	203ffc26 	beq	r4,zero,20068b8 <__mdiff+0x138>
 20068c8:	13400415 	stw	r13,16(r2)
 20068cc:	dfc00417 	ldw	ra,16(sp)
 20068d0:	dcc00317 	ldw	r19,12(sp)
 20068d4:	dc800217 	ldw	r18,8(sp)
 20068d8:	dc400117 	ldw	r17,4(sp)
 20068dc:	dc000017 	ldw	r16,0(sp)
 20068e0:	dec00504 	addi	sp,sp,20
 20068e4:	f800283a 	ret
 20068e8:	8005883a 	mov	r2,r16
 20068ec:	04400044 	movi	r17,1
 20068f0:	9021883a 	mov	r16,r18
 20068f4:	1025883a 	mov	r18,r2
 20068f8:	003fb006 	br	20067bc <__mdiff+0x3c>
 20068fc:	9809883a 	mov	r4,r19
 2006900:	000b883a 	mov	r5,zero
 2006904:	2005e4c0 	call	2005e4c <_Balloc>
 2006908:	00c00044 	movi	r3,1
 200690c:	10c00415 	stw	r3,16(r2)
 2006910:	10000515 	stw	zero,20(r2)
 2006914:	003fed06 	br	20068cc <__mdiff+0x14c>

02006918 <__ulp>:
 2006918:	295ffc2c 	andhi	r5,r5,32752
 200691c:	00bf3034 	movhi	r2,64704
 2006920:	2887883a 	add	r3,r5,r2
 2006924:	00c0020e 	bge	zero,r3,2006930 <__ulp+0x18>
 2006928:	0005883a 	mov	r2,zero
 200692c:	f800283a 	ret
 2006930:	00c7c83a 	sub	r3,zero,r3
 2006934:	180bd53a 	srai	r5,r3,20
 2006938:	008004c4 	movi	r2,19
 200693c:	11400a0e 	bge	r2,r5,2006968 <__ulp+0x50>
 2006940:	00800c84 	movi	r2,50
 2006944:	0007883a 	mov	r3,zero
 2006948:	11400516 	blt	r2,r5,2006960 <__ulp+0x48>
 200694c:	00800cc4 	movi	r2,51
 2006950:	114bc83a 	sub	r5,r2,r5
 2006954:	00800044 	movi	r2,1
 2006958:	1144983a 	sll	r2,r2,r5
 200695c:	f800283a 	ret
 2006960:	00800044 	movi	r2,1
 2006964:	f800283a 	ret
 2006968:	00800234 	movhi	r2,8
 200696c:	1147d83a 	sra	r3,r2,r5
 2006970:	0005883a 	mov	r2,zero
 2006974:	f800283a 	ret

02006978 <__b2d>:
 2006978:	defffa04 	addi	sp,sp,-24
 200697c:	dc000015 	stw	r16,0(sp)
 2006980:	24000417 	ldw	r16,16(r4)
 2006984:	dc400115 	stw	r17,4(sp)
 2006988:	24400504 	addi	r17,r4,20
 200698c:	8421883a 	add	r16,r16,r16
 2006990:	8421883a 	add	r16,r16,r16
 2006994:	8c21883a 	add	r16,r17,r16
 2006998:	dc800215 	stw	r18,8(sp)
 200699c:	84bfff17 	ldw	r18,-4(r16)
 20069a0:	dd000415 	stw	r20,16(sp)
 20069a4:	dcc00315 	stw	r19,12(sp)
 20069a8:	9009883a 	mov	r4,r18
 20069ac:	2829883a 	mov	r20,r5
 20069b0:	dfc00515 	stw	ra,20(sp)
 20069b4:	20061400 	call	2006140 <__hi0bits>
 20069b8:	00c00804 	movi	r3,32
 20069bc:	1887c83a 	sub	r3,r3,r2
 20069c0:	a0c00015 	stw	r3,0(r20)
 20069c4:	00c00284 	movi	r3,10
 20069c8:	84ffff04 	addi	r19,r16,-4
 20069cc:	18801216 	blt	r3,r2,2006a18 <__b2d+0xa0>
 20069d0:	014002c4 	movi	r5,11
 20069d4:	2889c83a 	sub	r4,r5,r2
 20069d8:	9106d83a 	srl	r3,r18,r4
 20069dc:	18cffc34 	orhi	r3,r3,16368
 20069e0:	8cc0282e 	bgeu	r17,r19,2006a84 <__b2d+0x10c>
 20069e4:	817ffe17 	ldw	r5,-8(r16)
 20069e8:	290ad83a 	srl	r5,r5,r4
 20069ec:	10800544 	addi	r2,r2,21
 20069f0:	9084983a 	sll	r2,r18,r2
 20069f4:	2884b03a 	or	r2,r5,r2
 20069f8:	dfc00517 	ldw	ra,20(sp)
 20069fc:	dd000417 	ldw	r20,16(sp)
 2006a00:	dcc00317 	ldw	r19,12(sp)
 2006a04:	dc800217 	ldw	r18,8(sp)
 2006a08:	dc400117 	ldw	r17,4(sp)
 2006a0c:	dc000017 	ldw	r16,0(sp)
 2006a10:	dec00604 	addi	sp,sp,24
 2006a14:	f800283a 	ret
 2006a18:	113ffd44 	addi	r4,r2,-11
 2006a1c:	8cc00f2e 	bgeu	r17,r19,2006a5c <__b2d+0xe4>
 2006a20:	81bffe04 	addi	r6,r16,-8
 2006a24:	817ffe17 	ldw	r5,-8(r16)
 2006a28:	20001326 	beq	r4,zero,2006a78 <__b2d+0x100>
 2006a2c:	00c00ac4 	movi	r3,43
 2006a30:	1885c83a 	sub	r2,r3,r2
 2006a34:	2886d83a 	srl	r3,r5,r2
 2006a38:	9124983a 	sll	r18,r18,r4
 2006a3c:	90e4b03a 	or	r18,r18,r3
 2006a40:	90cffc34 	orhi	r3,r18,16368
 2006a44:	8980112e 	bgeu	r17,r6,2006a8c <__b2d+0x114>
 2006a48:	81bffd17 	ldw	r6,-12(r16)
 2006a4c:	308cd83a 	srl	r6,r6,r2
 2006a50:	2904983a 	sll	r2,r5,r4
 2006a54:	1184b03a 	or	r2,r2,r6
 2006a58:	003fe706 	br	20069f8 <__b2d+0x80>
 2006a5c:	20000526 	beq	r4,zero,2006a74 <__b2d+0xfc>
 2006a60:	9124983a 	sll	r18,r18,r4
 2006a64:	000d883a 	mov	r6,zero
 2006a68:	000b883a 	mov	r5,zero
 2006a6c:	90cffc34 	orhi	r3,r18,16368
 2006a70:	003ff706 	br	2006a50 <__b2d+0xd8>
 2006a74:	000b883a 	mov	r5,zero
 2006a78:	90cffc34 	orhi	r3,r18,16368
 2006a7c:	2805883a 	mov	r2,r5
 2006a80:	003fdd06 	br	20069f8 <__b2d+0x80>
 2006a84:	000b883a 	mov	r5,zero
 2006a88:	003fd806 	br	20069ec <__b2d+0x74>
 2006a8c:	000d883a 	mov	r6,zero
 2006a90:	003fef06 	br	2006a50 <__b2d+0xd8>

02006a94 <__d2b>:
 2006a94:	defff704 	addi	sp,sp,-36
 2006a98:	dc000215 	stw	r16,8(sp)
 2006a9c:	3021883a 	mov	r16,r6
 2006aa0:	dc400315 	stw	r17,12(sp)
 2006aa4:	8022907a 	slli	r17,r16,1
 2006aa8:	dd400715 	stw	r21,28(sp)
 2006aac:	282b883a 	mov	r21,r5
 2006ab0:	01400044 	movi	r5,1
 2006ab4:	dd000615 	stw	r20,24(sp)
 2006ab8:	dcc00515 	stw	r19,20(sp)
 2006abc:	dc800415 	stw	r18,16(sp)
 2006ac0:	dfc00815 	stw	ra,32(sp)
 2006ac4:	3829883a 	mov	r20,r7
 2006ac8:	dc800917 	ldw	r18,36(sp)
 2006acc:	8822d57a 	srli	r17,r17,21
 2006ad0:	2005e4c0 	call	2005e4c <_Balloc>
 2006ad4:	1027883a 	mov	r19,r2
 2006ad8:	00800434 	movhi	r2,16
 2006adc:	10bfffc4 	addi	r2,r2,-1
 2006ae0:	808c703a 	and	r6,r16,r2
 2006ae4:	88000126 	beq	r17,zero,2006aec <__d2b+0x58>
 2006ae8:	31800434 	orhi	r6,r6,16
 2006aec:	d9800015 	stw	r6,0(sp)
 2006af0:	a8001f26 	beq	r21,zero,2006b70 <__d2b+0xdc>
 2006af4:	d9000104 	addi	r4,sp,4
 2006af8:	dd400115 	stw	r21,4(sp)
 2006afc:	20061a80 	call	20061a8 <__lo0bits>
 2006b00:	d8c00017 	ldw	r3,0(sp)
 2006b04:	1000291e 	bne	r2,zero,2006bac <__d2b+0x118>
 2006b08:	d9000117 	ldw	r4,4(sp)
 2006b0c:	99000515 	stw	r4,20(r19)
 2006b10:	1820c03a 	cmpne	r16,r3,zero
 2006b14:	84000044 	addi	r16,r16,1
 2006b18:	98c00615 	stw	r3,24(r19)
 2006b1c:	9c000415 	stw	r16,16(r19)
 2006b20:	88001b1e 	bne	r17,zero,2006b90 <__d2b+0xfc>
 2006b24:	800690ba 	slli	r3,r16,2
 2006b28:	10bef384 	addi	r2,r2,-1074
 2006b2c:	a0800015 	stw	r2,0(r20)
 2006b30:	98c5883a 	add	r2,r19,r3
 2006b34:	11000417 	ldw	r4,16(r2)
 2006b38:	8020917a 	slli	r16,r16,5
 2006b3c:	20061400 	call	2006140 <__hi0bits>
 2006b40:	8085c83a 	sub	r2,r16,r2
 2006b44:	90800015 	stw	r2,0(r18)
 2006b48:	9805883a 	mov	r2,r19
 2006b4c:	dfc00817 	ldw	ra,32(sp)
 2006b50:	dd400717 	ldw	r21,28(sp)
 2006b54:	dd000617 	ldw	r20,24(sp)
 2006b58:	dcc00517 	ldw	r19,20(sp)
 2006b5c:	dc800417 	ldw	r18,16(sp)
 2006b60:	dc400317 	ldw	r17,12(sp)
 2006b64:	dc000217 	ldw	r16,8(sp)
 2006b68:	dec00904 	addi	sp,sp,36
 2006b6c:	f800283a 	ret
 2006b70:	d809883a 	mov	r4,sp
 2006b74:	20061a80 	call	20061a8 <__lo0bits>
 2006b78:	d8c00017 	ldw	r3,0(sp)
 2006b7c:	04000044 	movi	r16,1
 2006b80:	9c000415 	stw	r16,16(r19)
 2006b84:	98c00515 	stw	r3,20(r19)
 2006b88:	10800804 	addi	r2,r2,32
 2006b8c:	883fe526 	beq	r17,zero,2006b24 <__d2b+0x90>
 2006b90:	8c7ef344 	addi	r17,r17,-1075
 2006b94:	88a3883a 	add	r17,r17,r2
 2006b98:	00c00d44 	movi	r3,53
 2006b9c:	a4400015 	stw	r17,0(r20)
 2006ba0:	1885c83a 	sub	r2,r3,r2
 2006ba4:	90800015 	stw	r2,0(r18)
 2006ba8:	003fe706 	br	2006b48 <__d2b+0xb4>
 2006bac:	01000804 	movi	r4,32
 2006bb0:	2089c83a 	sub	r4,r4,r2
 2006bb4:	1908983a 	sll	r4,r3,r4
 2006bb8:	d9400117 	ldw	r5,4(sp)
 2006bbc:	1886d83a 	srl	r3,r3,r2
 2006bc0:	2148b03a 	or	r4,r4,r5
 2006bc4:	99000515 	stw	r4,20(r19)
 2006bc8:	d8c00015 	stw	r3,0(sp)
 2006bcc:	003fd006 	br	2006b10 <__d2b+0x7c>

02006bd0 <__ratio>:
 2006bd0:	defff904 	addi	sp,sp,-28
 2006bd4:	dc400315 	stw	r17,12(sp)
 2006bd8:	2823883a 	mov	r17,r5
 2006bdc:	d9400104 	addi	r5,sp,4
 2006be0:	dfc00615 	stw	ra,24(sp)
 2006be4:	dcc00515 	stw	r19,20(sp)
 2006be8:	dc800415 	stw	r18,16(sp)
 2006bec:	2027883a 	mov	r19,r4
 2006bf0:	dc000215 	stw	r16,8(sp)
 2006bf4:	20069780 	call	2006978 <__b2d>
 2006bf8:	8809883a 	mov	r4,r17
 2006bfc:	d80b883a 	mov	r5,sp
 2006c00:	1025883a 	mov	r18,r2
 2006c04:	1821883a 	mov	r16,r3
 2006c08:	20069780 	call	2006978 <__b2d>
 2006c0c:	8a400417 	ldw	r9,16(r17)
 2006c10:	9a000417 	ldw	r8,16(r19)
 2006c14:	100d883a 	mov	r6,r2
 2006c18:	d8800017 	ldw	r2,0(sp)
 2006c1c:	4251c83a 	sub	r8,r8,r9
 2006c20:	4012917a 	slli	r9,r8,5
 2006c24:	da000117 	ldw	r8,4(sp)
 2006c28:	4091c83a 	sub	r8,r8,r2
 2006c2c:	4251883a 	add	r8,r8,r9
 2006c30:	02000d0e 	bge	zero,r8,2006c68 <__ratio+0x98>
 2006c34:	4010953a 	slli	r8,r8,20
 2006c38:	4421883a 	add	r16,r8,r16
 2006c3c:	9009883a 	mov	r4,r18
 2006c40:	800b883a 	mov	r5,r16
 2006c44:	180f883a 	mov	r7,r3
 2006c48:	200a8d00 	call	200a8d0 <__divdf3>
 2006c4c:	dfc00617 	ldw	ra,24(sp)
 2006c50:	dcc00517 	ldw	r19,20(sp)
 2006c54:	dc800417 	ldw	r18,16(sp)
 2006c58:	dc400317 	ldw	r17,12(sp)
 2006c5c:	dc000217 	ldw	r16,8(sp)
 2006c60:	dec00704 	addi	sp,sp,28
 2006c64:	f800283a 	ret
 2006c68:	4010953a 	slli	r8,r8,20
 2006c6c:	1a07c83a 	sub	r3,r3,r8
 2006c70:	003ff206 	br	2006c3c <__ratio+0x6c>

02006c74 <_mprec_log10>:
 2006c74:	defffe04 	addi	sp,sp,-8
 2006c78:	dc000015 	stw	r16,0(sp)
 2006c7c:	dfc00115 	stw	ra,4(sp)
 2006c80:	008005c4 	movi	r2,23
 2006c84:	2021883a 	mov	r16,r4
 2006c88:	11000d0e 	bge	r2,r4,2006cc0 <_mprec_log10+0x4c>
 2006c8c:	0005883a 	mov	r2,zero
 2006c90:	00cffc34 	movhi	r3,16368
 2006c94:	843fffc4 	addi	r16,r16,-1
 2006c98:	1009883a 	mov	r4,r2
 2006c9c:	180b883a 	mov	r5,r3
 2006ca0:	000d883a 	mov	r6,zero
 2006ca4:	01d00934 	movhi	r7,16420
 2006ca8:	200b3e00 	call	200b3e0 <__muldf3>
 2006cac:	803ff91e 	bne	r16,zero,2006c94 <_mprec_log10+0x20>
 2006cb0:	dfc00117 	ldw	ra,4(sp)
 2006cb4:	dc000017 	ldw	r16,0(sp)
 2006cb8:	dec00204 	addi	sp,sp,8
 2006cbc:	f800283a 	ret
 2006cc0:	202090fa 	slli	r16,r4,3
 2006cc4:	00808074 	movhi	r2,513
 2006cc8:	10bc2604 	addi	r2,r2,-3944
 2006ccc:	1421883a 	add	r16,r2,r16
 2006cd0:	80800017 	ldw	r2,0(r16)
 2006cd4:	80c00117 	ldw	r3,4(r16)
 2006cd8:	dfc00117 	ldw	ra,4(sp)
 2006cdc:	dc000017 	ldw	r16,0(sp)
 2006ce0:	dec00204 	addi	sp,sp,8
 2006ce4:	f800283a 	ret

02006ce8 <__copybits>:
 2006ce8:	297fffc4 	addi	r5,r5,-1
 2006cec:	280fd17a 	srai	r7,r5,5
 2006cf0:	30c00417 	ldw	r3,16(r6)
 2006cf4:	30800504 	addi	r2,r6,20
 2006cf8:	39c00044 	addi	r7,r7,1
 2006cfc:	18c7883a 	add	r3,r3,r3
 2006d00:	39cf883a 	add	r7,r7,r7
 2006d04:	18c7883a 	add	r3,r3,r3
 2006d08:	39cf883a 	add	r7,r7,r7
 2006d0c:	10c7883a 	add	r3,r2,r3
 2006d10:	21cf883a 	add	r7,r4,r7
 2006d14:	10c00d2e 	bgeu	r2,r3,2006d4c <__copybits+0x64>
 2006d18:	200b883a 	mov	r5,r4
 2006d1c:	12000017 	ldw	r8,0(r2)
 2006d20:	29400104 	addi	r5,r5,4
 2006d24:	10800104 	addi	r2,r2,4
 2006d28:	2a3fff15 	stw	r8,-4(r5)
 2006d2c:	10fffb36 	bltu	r2,r3,2006d1c <__copybits+0x34>
 2006d30:	1985c83a 	sub	r2,r3,r6
 2006d34:	10bffac4 	addi	r2,r2,-21
 2006d38:	1004d0ba 	srli	r2,r2,2
 2006d3c:	10800044 	addi	r2,r2,1
 2006d40:	1085883a 	add	r2,r2,r2
 2006d44:	1085883a 	add	r2,r2,r2
 2006d48:	2089883a 	add	r4,r4,r2
 2006d4c:	21c0032e 	bgeu	r4,r7,2006d5c <__copybits+0x74>
 2006d50:	20000015 	stw	zero,0(r4)
 2006d54:	21000104 	addi	r4,r4,4
 2006d58:	21fffd36 	bltu	r4,r7,2006d50 <__copybits+0x68>
 2006d5c:	f800283a 	ret

02006d60 <__any_on>:
 2006d60:	20c00417 	ldw	r3,16(r4)
 2006d64:	2805d17a 	srai	r2,r5,5
 2006d68:	21000504 	addi	r4,r4,20
 2006d6c:	18800d0e 	bge	r3,r2,2006da4 <__any_on+0x44>
 2006d70:	18c7883a 	add	r3,r3,r3
 2006d74:	18c7883a 	add	r3,r3,r3
 2006d78:	20c7883a 	add	r3,r4,r3
 2006d7c:	20c0192e 	bgeu	r4,r3,2006de4 <__any_on+0x84>
 2006d80:	18bfff17 	ldw	r2,-4(r3)
 2006d84:	18ffff04 	addi	r3,r3,-4
 2006d88:	1000041e 	bne	r2,zero,2006d9c <__any_on+0x3c>
 2006d8c:	20c0142e 	bgeu	r4,r3,2006de0 <__any_on+0x80>
 2006d90:	18ffff04 	addi	r3,r3,-4
 2006d94:	19400017 	ldw	r5,0(r3)
 2006d98:	283ffc26 	beq	r5,zero,2006d8c <__any_on+0x2c>
 2006d9c:	00800044 	movi	r2,1
 2006da0:	f800283a 	ret
 2006da4:	10c00a0e 	bge	r2,r3,2006dd0 <__any_on+0x70>
 2006da8:	1085883a 	add	r2,r2,r2
 2006dac:	1085883a 	add	r2,r2,r2
 2006db0:	294007cc 	andi	r5,r5,31
 2006db4:	2087883a 	add	r3,r4,r2
 2006db8:	283ff026 	beq	r5,zero,2006d7c <__any_on+0x1c>
 2006dbc:	19800017 	ldw	r6,0(r3)
 2006dc0:	3144d83a 	srl	r2,r6,r5
 2006dc4:	114a983a 	sll	r5,r2,r5
 2006dc8:	29bff41e 	bne	r5,r6,2006d9c <__any_on+0x3c>
 2006dcc:	003feb06 	br	2006d7c <__any_on+0x1c>
 2006dd0:	1085883a 	add	r2,r2,r2
 2006dd4:	1085883a 	add	r2,r2,r2
 2006dd8:	2087883a 	add	r3,r4,r2
 2006ddc:	003fe706 	br	2006d7c <__any_on+0x1c>
 2006de0:	f800283a 	ret
 2006de4:	0005883a 	mov	r2,zero
 2006de8:	f800283a 	ret

02006dec <_realloc_r>:
 2006dec:	defff604 	addi	sp,sp,-40
 2006df0:	dd000415 	stw	r20,16(sp)
 2006df4:	dc400115 	stw	r17,4(sp)
 2006df8:	dfc00915 	stw	ra,36(sp)
 2006dfc:	df000815 	stw	fp,32(sp)
 2006e00:	ddc00715 	stw	r23,28(sp)
 2006e04:	dd800615 	stw	r22,24(sp)
 2006e08:	dd400515 	stw	r21,20(sp)
 2006e0c:	dcc00315 	stw	r19,12(sp)
 2006e10:	dc800215 	stw	r18,8(sp)
 2006e14:	dc000015 	stw	r16,0(sp)
 2006e18:	2829883a 	mov	r20,r5
 2006e1c:	3023883a 	mov	r17,r6
 2006e20:	2800ad26 	beq	r5,zero,20070d8 <_realloc_r+0x2ec>
 2006e24:	2025883a 	mov	r18,r4
 2006e28:	200cbf40 	call	200cbf4 <__malloc_lock>
 2006e2c:	a0ffff17 	ldw	r3,-4(r20)
 2006e30:	043fff04 	movi	r16,-4
 2006e34:	890002c4 	addi	r4,r17,11
 2006e38:	01c00584 	movi	r7,22
 2006e3c:	a57ffe04 	addi	r21,r20,-8
 2006e40:	1c20703a 	and	r16,r3,r16
 2006e44:	39001d2e 	bgeu	r7,r4,2006ebc <_realloc_r+0xd0>
 2006e48:	05bffe04 	movi	r22,-8
 2006e4c:	25ac703a 	and	r22,r4,r22
 2006e50:	b00f883a 	mov	r7,r22
 2006e54:	b0006516 	blt	r22,zero,2006fec <_realloc_r+0x200>
 2006e58:	b4406436 	bltu	r22,r17,2006fec <_realloc_r+0x200>
 2006e5c:	81c01a0e 	bge	r16,r7,2006ec8 <_realloc_r+0xdc>
 2006e60:	07008074 	movhi	fp,513
 2006e64:	e73dd204 	addi	fp,fp,-2232
 2006e68:	e1400217 	ldw	r5,8(fp)
 2006e6c:	ac11883a 	add	r8,r21,r16
 2006e70:	2a006226 	beq	r5,r8,2006ffc <_realloc_r+0x210>
 2006e74:	41800117 	ldw	r6,4(r8)
 2006e78:	027fff84 	movi	r9,-2
 2006e7c:	3252703a 	and	r9,r6,r9
 2006e80:	4253883a 	add	r9,r8,r9
 2006e84:	49000117 	ldw	r4,4(r9)
 2006e88:	2100004c 	andi	r4,r4,1
 2006e8c:	2000281e 	bne	r4,zero,2006f30 <_realloc_r+0x144>
 2006e90:	00bfff04 	movi	r2,-4
 2006e94:	3084703a 	and	r2,r6,r2
 2006e98:	1409883a 	add	r4,r2,r16
 2006e9c:	21c05e16 	blt	r4,r7,2007018 <_realloc_r+0x22c>
 2006ea0:	40800317 	ldw	r2,12(r8)
 2006ea4:	41400217 	ldw	r5,8(r8)
 2006ea8:	a023883a 	mov	r17,r20
 2006eac:	2021883a 	mov	r16,r4
 2006eb0:	28800315 	stw	r2,12(r5)
 2006eb4:	11400215 	stw	r5,8(r2)
 2006eb8:	00000406 	br	2006ecc <_realloc_r+0xe0>
 2006ebc:	01c00404 	movi	r7,16
 2006ec0:	382d883a 	mov	r22,r7
 2006ec4:	003fe406 	br	2006e58 <_realloc_r+0x6c>
 2006ec8:	a023883a 	mov	r17,r20
 2006ecc:	858fc83a 	sub	r7,r16,r22
 2006ed0:	008003c4 	movi	r2,15
 2006ed4:	18c0004c 	andi	r3,r3,1
 2006ed8:	11c07236 	bltu	r2,r7,20070a4 <_realloc_r+0x2b8>
 2006edc:	1c06b03a 	or	r3,r3,r16
 2006ee0:	a8c00115 	stw	r3,4(r21)
 2006ee4:	ac21883a 	add	r16,r21,r16
 2006ee8:	80800117 	ldw	r2,4(r16)
 2006eec:	10800054 	ori	r2,r2,1
 2006ef0:	80800115 	stw	r2,4(r16)
 2006ef4:	9009883a 	mov	r4,r18
 2006ef8:	200cc140 	call	200cc14 <__malloc_unlock>
 2006efc:	8805883a 	mov	r2,r17
 2006f00:	dfc00917 	ldw	ra,36(sp)
 2006f04:	df000817 	ldw	fp,32(sp)
 2006f08:	ddc00717 	ldw	r23,28(sp)
 2006f0c:	dd800617 	ldw	r22,24(sp)
 2006f10:	dd400517 	ldw	r21,20(sp)
 2006f14:	dd000417 	ldw	r20,16(sp)
 2006f18:	dcc00317 	ldw	r19,12(sp)
 2006f1c:	dc800217 	ldw	r18,8(sp)
 2006f20:	dc400117 	ldw	r17,4(sp)
 2006f24:	dc000017 	ldw	r16,0(sp)
 2006f28:	dec00a04 	addi	sp,sp,40
 2006f2c:	f800283a 	ret
 2006f30:	18c0004c 	andi	r3,r3,1
 2006f34:	1800081e 	bne	r3,zero,2006f58 <_realloc_r+0x16c>
 2006f38:	a4fffe17 	ldw	r19,-8(r20)
 2006f3c:	00bfff04 	movi	r2,-4
 2006f40:	ace7c83a 	sub	r19,r21,r19
 2006f44:	98c00117 	ldw	r3,4(r19)
 2006f48:	1886703a 	and	r3,r3,r2
 2006f4c:	98000226 	beq	r19,zero,2006f58 <_realloc_r+0x16c>
 2006f50:	1c2f883a 	add	r23,r3,r16
 2006f54:	b9c06d0e 	bge	r23,r7,200710c <_realloc_r+0x320>
 2006f58:	880b883a 	mov	r5,r17
 2006f5c:	9009883a 	mov	r4,r18
 2006f60:	20052040 	call	2005204 <_malloc_r>
 2006f64:	1023883a 	mov	r17,r2
 2006f68:	1000ef26 	beq	r2,zero,2007328 <_realloc_r+0x53c>
 2006f6c:	a0ffff17 	ldw	r3,-4(r20)
 2006f70:	113ffe04 	addi	r4,r2,-8
 2006f74:	00bfff84 	movi	r2,-2
 2006f78:	1884703a 	and	r2,r3,r2
 2006f7c:	a885883a 	add	r2,r21,r2
 2006f80:	2080bf26 	beq	r4,r2,2007280 <_realloc_r+0x494>
 2006f84:	81bfff04 	addi	r6,r16,-4
 2006f88:	00800904 	movi	r2,36
 2006f8c:	11808936 	bltu	r2,r6,20071b4 <_realloc_r+0x3c8>
 2006f90:	00c004c4 	movi	r3,19
 2006f94:	19806c2e 	bgeu	r3,r6,2007148 <_realloc_r+0x35c>
 2006f98:	a0c00017 	ldw	r3,0(r20)
 2006f9c:	88c00015 	stw	r3,0(r17)
 2006fa0:	a0c00117 	ldw	r3,4(r20)
 2006fa4:	88c00115 	stw	r3,4(r17)
 2006fa8:	00c006c4 	movi	r3,27
 2006fac:	1980ac36 	bltu	r3,r6,2007260 <_realloc_r+0x474>
 2006fb0:	88800204 	addi	r2,r17,8
 2006fb4:	a0c00204 	addi	r3,r20,8
 2006fb8:	19000017 	ldw	r4,0(r3)
 2006fbc:	11000015 	stw	r4,0(r2)
 2006fc0:	19000117 	ldw	r4,4(r3)
 2006fc4:	11000115 	stw	r4,4(r2)
 2006fc8:	18c00217 	ldw	r3,8(r3)
 2006fcc:	10c00215 	stw	r3,8(r2)
 2006fd0:	a00b883a 	mov	r5,r20
 2006fd4:	9009883a 	mov	r4,r18
 2006fd8:	20046340 	call	2004634 <_free_r>
 2006fdc:	9009883a 	mov	r4,r18
 2006fe0:	200cc140 	call	200cc14 <__malloc_unlock>
 2006fe4:	8805883a 	mov	r2,r17
 2006fe8:	003fc506 	br	2006f00 <_realloc_r+0x114>
 2006fec:	00800304 	movi	r2,12
 2006ff0:	90800015 	stw	r2,0(r18)
 2006ff4:	0005883a 	mov	r2,zero
 2006ff8:	003fc106 	br	2006f00 <_realloc_r+0x114>
 2006ffc:	29800117 	ldw	r6,4(r5)
 2007000:	00bfff04 	movi	r2,-4
 2007004:	b1000404 	addi	r4,r22,16
 2007008:	3084703a 	and	r2,r6,r2
 200700c:	140d883a 	add	r6,r2,r16
 2007010:	31005b0e 	bge	r6,r4,2007180 <_realloc_r+0x394>
 2007014:	2811883a 	mov	r8,r5
 2007018:	18c0004c 	andi	r3,r3,1
 200701c:	183fce1e 	bne	r3,zero,2006f58 <_realloc_r+0x16c>
 2007020:	a4fffe17 	ldw	r19,-8(r20)
 2007024:	00ffff04 	movi	r3,-4
 2007028:	ace7c83a 	sub	r19,r21,r19
 200702c:	99000117 	ldw	r4,4(r19)
 2007030:	20c6703a 	and	r3,r4,r3
 2007034:	403fc526 	beq	r8,zero,2006f4c <_realloc_r+0x160>
 2007038:	1c2f883a 	add	r23,r3,r16
 200703c:	b8af883a 	add	r23,r23,r2
 2007040:	41406026 	beq	r8,r5,20071c4 <_realloc_r+0x3d8>
 2007044:	b9ffc116 	blt	r23,r7,2006f4c <_realloc_r+0x160>
 2007048:	40c00217 	ldw	r3,8(r8)
 200704c:	40800317 	ldw	r2,12(r8)
 2007050:	81bfff04 	addi	r6,r16,-4
 2007054:	01000904 	movi	r4,36
 2007058:	18800315 	stw	r2,12(r3)
 200705c:	10c00215 	stw	r3,8(r2)
 2007060:	99400217 	ldw	r5,8(r19)
 2007064:	98c00317 	ldw	r3,12(r19)
 2007068:	9c400204 	addi	r17,r19,8
 200706c:	28c00315 	stw	r3,12(r5)
 2007070:	19400215 	stw	r5,8(r3)
 2007074:	21802d36 	bltu	r4,r6,200712c <_realloc_r+0x340>
 2007078:	008004c4 	movi	r2,19
 200707c:	1180352e 	bgeu	r2,r6,2007154 <_realloc_r+0x368>
 2007080:	a0800017 	ldw	r2,0(r20)
 2007084:	98800215 	stw	r2,8(r19)
 2007088:	a0800117 	ldw	r2,4(r20)
 200708c:	98800315 	stw	r2,12(r19)
 2007090:	008006c4 	movi	r2,27
 2007094:	11808036 	bltu	r2,r6,2007298 <_realloc_r+0x4ac>
 2007098:	98c00404 	addi	r3,r19,16
 200709c:	a5000204 	addi	r20,r20,8
 20070a0:	00002d06 	br	2007158 <_realloc_r+0x36c>
 20070a4:	1d86b03a 	or	r3,r3,r22
 20070a8:	ad8b883a 	add	r5,r21,r22
 20070ac:	a8c00115 	stw	r3,4(r21)
 20070b0:	38800054 	ori	r2,r7,1
 20070b4:	28800115 	stw	r2,4(r5)
 20070b8:	29cf883a 	add	r7,r5,r7
 20070bc:	38800117 	ldw	r2,4(r7)
 20070c0:	9009883a 	mov	r4,r18
 20070c4:	29400204 	addi	r5,r5,8
 20070c8:	10800054 	ori	r2,r2,1
 20070cc:	38800115 	stw	r2,4(r7)
 20070d0:	20046340 	call	2004634 <_free_r>
 20070d4:	003f8706 	br	2006ef4 <_realloc_r+0x108>
 20070d8:	300b883a 	mov	r5,r6
 20070dc:	dfc00917 	ldw	ra,36(sp)
 20070e0:	df000817 	ldw	fp,32(sp)
 20070e4:	ddc00717 	ldw	r23,28(sp)
 20070e8:	dd800617 	ldw	r22,24(sp)
 20070ec:	dd400517 	ldw	r21,20(sp)
 20070f0:	dd000417 	ldw	r20,16(sp)
 20070f4:	dcc00317 	ldw	r19,12(sp)
 20070f8:	dc800217 	ldw	r18,8(sp)
 20070fc:	dc400117 	ldw	r17,4(sp)
 2007100:	dc000017 	ldw	r16,0(sp)
 2007104:	dec00a04 	addi	sp,sp,40
 2007108:	20052041 	jmpi	2005204 <_malloc_r>
 200710c:	98800317 	ldw	r2,12(r19)
 2007110:	98c00217 	ldw	r3,8(r19)
 2007114:	81bfff04 	addi	r6,r16,-4
 2007118:	01000904 	movi	r4,36
 200711c:	18800315 	stw	r2,12(r3)
 2007120:	10c00215 	stw	r3,8(r2)
 2007124:	9c400204 	addi	r17,r19,8
 2007128:	21bfd32e 	bgeu	r4,r6,2007078 <_realloc_r+0x28c>
 200712c:	8809883a 	mov	r4,r17
 2007130:	a00b883a 	mov	r5,r20
 2007134:	2005bcc0 	call	2005bcc <memmove>
 2007138:	98c00117 	ldw	r3,4(r19)
 200713c:	b821883a 	mov	r16,r23
 2007140:	982b883a 	mov	r21,r19
 2007144:	003f6106 	br	2006ecc <_realloc_r+0xe0>
 2007148:	8805883a 	mov	r2,r17
 200714c:	a007883a 	mov	r3,r20
 2007150:	003f9906 	br	2006fb8 <_realloc_r+0x1cc>
 2007154:	8807883a 	mov	r3,r17
 2007158:	a0800017 	ldw	r2,0(r20)
 200715c:	b821883a 	mov	r16,r23
 2007160:	982b883a 	mov	r21,r19
 2007164:	18800015 	stw	r2,0(r3)
 2007168:	a0800117 	ldw	r2,4(r20)
 200716c:	18800115 	stw	r2,4(r3)
 2007170:	a0800217 	ldw	r2,8(r20)
 2007174:	18800215 	stw	r2,8(r3)
 2007178:	98c00117 	ldw	r3,4(r19)
 200717c:	003f5306 	br	2006ecc <_realloc_r+0xe0>
 2007180:	adab883a 	add	r21,r21,r22
 2007184:	3585c83a 	sub	r2,r6,r22
 2007188:	e5400215 	stw	r21,8(fp)
 200718c:	10800054 	ori	r2,r2,1
 2007190:	a8800115 	stw	r2,4(r21)
 2007194:	a0bfff17 	ldw	r2,-4(r20)
 2007198:	9009883a 	mov	r4,r18
 200719c:	1080004c 	andi	r2,r2,1
 20071a0:	b0acb03a 	or	r22,r22,r2
 20071a4:	a5bfff15 	stw	r22,-4(r20)
 20071a8:	200cc140 	call	200cc14 <__malloc_unlock>
 20071ac:	a005883a 	mov	r2,r20
 20071b0:	003f5306 	br	2006f00 <_realloc_r+0x114>
 20071b4:	8809883a 	mov	r4,r17
 20071b8:	a00b883a 	mov	r5,r20
 20071bc:	2005bcc0 	call	2005bcc <memmove>
 20071c0:	003f8306 	br	2006fd0 <_realloc_r+0x1e4>
 20071c4:	b0800404 	addi	r2,r22,16
 20071c8:	b8bf6016 	blt	r23,r2,2006f4c <_realloc_r+0x160>
 20071cc:	98800317 	ldw	r2,12(r19)
 20071d0:	98c00217 	ldw	r3,8(r19)
 20071d4:	81bfff04 	addi	r6,r16,-4
 20071d8:	01000904 	movi	r4,36
 20071dc:	18800315 	stw	r2,12(r3)
 20071e0:	10c00215 	stw	r3,8(r2)
 20071e4:	9c400204 	addi	r17,r19,8
 20071e8:	21804336 	bltu	r4,r6,20072f8 <_realloc_r+0x50c>
 20071ec:	008004c4 	movi	r2,19
 20071f0:	11803f2e 	bgeu	r2,r6,20072f0 <_realloc_r+0x504>
 20071f4:	a0800017 	ldw	r2,0(r20)
 20071f8:	98800215 	stw	r2,8(r19)
 20071fc:	a0800117 	ldw	r2,4(r20)
 2007200:	98800315 	stw	r2,12(r19)
 2007204:	008006c4 	movi	r2,27
 2007208:	11803f36 	bltu	r2,r6,2007308 <_realloc_r+0x51c>
 200720c:	98800404 	addi	r2,r19,16
 2007210:	a5000204 	addi	r20,r20,8
 2007214:	a0c00017 	ldw	r3,0(r20)
 2007218:	10c00015 	stw	r3,0(r2)
 200721c:	a0c00117 	ldw	r3,4(r20)
 2007220:	10c00115 	stw	r3,4(r2)
 2007224:	a0c00217 	ldw	r3,8(r20)
 2007228:	10c00215 	stw	r3,8(r2)
 200722c:	9d87883a 	add	r3,r19,r22
 2007230:	bd85c83a 	sub	r2,r23,r22
 2007234:	e0c00215 	stw	r3,8(fp)
 2007238:	10800054 	ori	r2,r2,1
 200723c:	18800115 	stw	r2,4(r3)
 2007240:	98800117 	ldw	r2,4(r19)
 2007244:	9009883a 	mov	r4,r18
 2007248:	1080004c 	andi	r2,r2,1
 200724c:	b0acb03a 	or	r22,r22,r2
 2007250:	9d800115 	stw	r22,4(r19)
 2007254:	200cc140 	call	200cc14 <__malloc_unlock>
 2007258:	8805883a 	mov	r2,r17
 200725c:	003f2806 	br	2006f00 <_realloc_r+0x114>
 2007260:	a0c00217 	ldw	r3,8(r20)
 2007264:	88c00215 	stw	r3,8(r17)
 2007268:	a0c00317 	ldw	r3,12(r20)
 200726c:	88c00315 	stw	r3,12(r17)
 2007270:	30801126 	beq	r6,r2,20072b8 <_realloc_r+0x4cc>
 2007274:	88800404 	addi	r2,r17,16
 2007278:	a0c00404 	addi	r3,r20,16
 200727c:	003f4e06 	br	2006fb8 <_realloc_r+0x1cc>
 2007280:	893fff17 	ldw	r4,-4(r17)
 2007284:	00bfff04 	movi	r2,-4
 2007288:	a023883a 	mov	r17,r20
 200728c:	2084703a 	and	r2,r4,r2
 2007290:	80a1883a 	add	r16,r16,r2
 2007294:	003f0d06 	br	2006ecc <_realloc_r+0xe0>
 2007298:	a0800217 	ldw	r2,8(r20)
 200729c:	98800415 	stw	r2,16(r19)
 20072a0:	a0800317 	ldw	r2,12(r20)
 20072a4:	98800515 	stw	r2,20(r19)
 20072a8:	31000a26 	beq	r6,r4,20072d4 <_realloc_r+0x4e8>
 20072ac:	98c00604 	addi	r3,r19,24
 20072b0:	a5000404 	addi	r20,r20,16
 20072b4:	003fa806 	br	2007158 <_realloc_r+0x36c>
 20072b8:	a1000417 	ldw	r4,16(r20)
 20072bc:	88800604 	addi	r2,r17,24
 20072c0:	a0c00604 	addi	r3,r20,24
 20072c4:	89000415 	stw	r4,16(r17)
 20072c8:	a1000517 	ldw	r4,20(r20)
 20072cc:	89000515 	stw	r4,20(r17)
 20072d0:	003f3906 	br	2006fb8 <_realloc_r+0x1cc>
 20072d4:	a0800417 	ldw	r2,16(r20)
 20072d8:	a5000604 	addi	r20,r20,24
 20072dc:	98c00804 	addi	r3,r19,32
 20072e0:	98800615 	stw	r2,24(r19)
 20072e4:	a0bfff17 	ldw	r2,-4(r20)
 20072e8:	98800715 	stw	r2,28(r19)
 20072ec:	003f9a06 	br	2007158 <_realloc_r+0x36c>
 20072f0:	8805883a 	mov	r2,r17
 20072f4:	003fc706 	br	2007214 <_realloc_r+0x428>
 20072f8:	8809883a 	mov	r4,r17
 20072fc:	a00b883a 	mov	r5,r20
 2007300:	2005bcc0 	call	2005bcc <memmove>
 2007304:	003fc906 	br	200722c <_realloc_r+0x440>
 2007308:	a0800217 	ldw	r2,8(r20)
 200730c:	98800415 	stw	r2,16(r19)
 2007310:	a0800317 	ldw	r2,12(r20)
 2007314:	98800515 	stw	r2,20(r19)
 2007318:	31000726 	beq	r6,r4,2007338 <_realloc_r+0x54c>
 200731c:	98800604 	addi	r2,r19,24
 2007320:	a5000404 	addi	r20,r20,16
 2007324:	003fbb06 	br	2007214 <_realloc_r+0x428>
 2007328:	9009883a 	mov	r4,r18
 200732c:	200cc140 	call	200cc14 <__malloc_unlock>
 2007330:	0005883a 	mov	r2,zero
 2007334:	003ef206 	br	2006f00 <_realloc_r+0x114>
 2007338:	a0c00417 	ldw	r3,16(r20)
 200733c:	a5000604 	addi	r20,r20,24
 2007340:	98800804 	addi	r2,r19,32
 2007344:	98c00615 	stw	r3,24(r19)
 2007348:	a0ffff17 	ldw	r3,-4(r20)
 200734c:	98c00715 	stw	r3,28(r19)
 2007350:	003fb006 	br	2007214 <_realloc_r+0x428>

02007354 <__fpclassifyd>:
 2007354:	00a00034 	movhi	r2,32768
 2007358:	10bfffc4 	addi	r2,r2,-1
 200735c:	2884703a 	and	r2,r5,r2
 2007360:	10000726 	beq	r2,zero,2007380 <__fpclassifyd+0x2c>
 2007364:	00fffc34 	movhi	r3,65520
 2007368:	019ff834 	movhi	r6,32736
 200736c:	28c7883a 	add	r3,r5,r3
 2007370:	31bfffc4 	addi	r6,r6,-1
 2007374:	30c00536 	bltu	r6,r3,200738c <__fpclassifyd+0x38>
 2007378:	00800104 	movi	r2,4
 200737c:	f800283a 	ret
 2007380:	2000021e 	bne	r4,zero,200738c <__fpclassifyd+0x38>
 2007384:	00800084 	movi	r2,2
 2007388:	f800283a 	ret
 200738c:	00dffc34 	movhi	r3,32752
 2007390:	019ff834 	movhi	r6,32736
 2007394:	28cb883a 	add	r5,r5,r3
 2007398:	31bfffc4 	addi	r6,r6,-1
 200739c:	317ff62e 	bgeu	r6,r5,2007378 <__fpclassifyd+0x24>
 20073a0:	01400434 	movhi	r5,16
 20073a4:	297fffc4 	addi	r5,r5,-1
 20073a8:	28800236 	bltu	r5,r2,20073b4 <__fpclassifyd+0x60>
 20073ac:	008000c4 	movi	r2,3
 20073b0:	f800283a 	ret
 20073b4:	10c00226 	beq	r2,r3,20073c0 <__fpclassifyd+0x6c>
 20073b8:	0005883a 	mov	r2,zero
 20073bc:	f800283a 	ret
 20073c0:	2005003a 	cmpeq	r2,r4,zero
 20073c4:	f800283a 	ret

020073c8 <_sbrk_r>:
 20073c8:	defffd04 	addi	sp,sp,-12
 20073cc:	dc000015 	stw	r16,0(sp)
 20073d0:	04008074 	movhi	r16,513
 20073d4:	dc400115 	stw	r17,4(sp)
 20073d8:	840a2704 	addi	r16,r16,10396
 20073dc:	2023883a 	mov	r17,r4
 20073e0:	2809883a 	mov	r4,r5
 20073e4:	dfc00215 	stw	ra,8(sp)
 20073e8:	80000015 	stw	zero,0(r16)
 20073ec:	200cde00 	call	200cde0 <sbrk>
 20073f0:	00ffffc4 	movi	r3,-1
 20073f4:	10c00526 	beq	r2,r3,200740c <_sbrk_r+0x44>
 20073f8:	dfc00217 	ldw	ra,8(sp)
 20073fc:	dc400117 	ldw	r17,4(sp)
 2007400:	dc000017 	ldw	r16,0(sp)
 2007404:	dec00304 	addi	sp,sp,12
 2007408:	f800283a 	ret
 200740c:	80c00017 	ldw	r3,0(r16)
 2007410:	183ff926 	beq	r3,zero,20073f8 <_sbrk_r+0x30>
 2007414:	88c00015 	stw	r3,0(r17)
 2007418:	003ff706 	br	20073f8 <_sbrk_r+0x30>

0200741c <__sread>:
 200741c:	defffe04 	addi	sp,sp,-8
 2007420:	dc000015 	stw	r16,0(sp)
 2007424:	2821883a 	mov	r16,r5
 2007428:	2940038f 	ldh	r5,14(r5)
 200742c:	dfc00115 	stw	ra,4(sp)
 2007430:	20090200 	call	2009020 <_read_r>
 2007434:	10000716 	blt	r2,zero,2007454 <__sread+0x38>
 2007438:	80c01417 	ldw	r3,80(r16)
 200743c:	1887883a 	add	r3,r3,r2
 2007440:	80c01415 	stw	r3,80(r16)
 2007444:	dfc00117 	ldw	ra,4(sp)
 2007448:	dc000017 	ldw	r16,0(sp)
 200744c:	dec00204 	addi	sp,sp,8
 2007450:	f800283a 	ret
 2007454:	80c0030b 	ldhu	r3,12(r16)
 2007458:	18fbffcc 	andi	r3,r3,61439
 200745c:	80c0030d 	sth	r3,12(r16)
 2007460:	dfc00117 	ldw	ra,4(sp)
 2007464:	dc000017 	ldw	r16,0(sp)
 2007468:	dec00204 	addi	sp,sp,8
 200746c:	f800283a 	ret

02007470 <__seofread>:
 2007470:	0005883a 	mov	r2,zero
 2007474:	f800283a 	ret

02007478 <__swrite>:
 2007478:	2880030b 	ldhu	r2,12(r5)
 200747c:	defffb04 	addi	sp,sp,-20
 2007480:	dcc00315 	stw	r19,12(sp)
 2007484:	dc800215 	stw	r18,8(sp)
 2007488:	dc400115 	stw	r17,4(sp)
 200748c:	dc000015 	stw	r16,0(sp)
 2007490:	dfc00415 	stw	ra,16(sp)
 2007494:	10c0400c 	andi	r3,r2,256
 2007498:	2821883a 	mov	r16,r5
 200749c:	2027883a 	mov	r19,r4
 20074a0:	3025883a 	mov	r18,r6
 20074a4:	3823883a 	mov	r17,r7
 20074a8:	18000526 	beq	r3,zero,20074c0 <__swrite+0x48>
 20074ac:	2940038f 	ldh	r5,14(r5)
 20074b0:	000d883a 	mov	r6,zero
 20074b4:	01c00084 	movi	r7,2
 20074b8:	2008fc40 	call	2008fc4 <_lseek_r>
 20074bc:	8080030b 	ldhu	r2,12(r16)
 20074c0:	8140038f 	ldh	r5,14(r16)
 20074c4:	10bbffcc 	andi	r2,r2,61439
 20074c8:	9809883a 	mov	r4,r19
 20074cc:	900d883a 	mov	r6,r18
 20074d0:	880f883a 	mov	r7,r17
 20074d4:	8080030d 	sth	r2,12(r16)
 20074d8:	dfc00417 	ldw	ra,16(sp)
 20074dc:	dcc00317 	ldw	r19,12(sp)
 20074e0:	dc800217 	ldw	r18,8(sp)
 20074e4:	dc400117 	ldw	r17,4(sp)
 20074e8:	dc000017 	ldw	r16,0(sp)
 20074ec:	dec00504 	addi	sp,sp,20
 20074f0:	2008ac01 	jmpi	2008ac0 <_write_r>

020074f4 <__sseek>:
 20074f4:	defffe04 	addi	sp,sp,-8
 20074f8:	dc000015 	stw	r16,0(sp)
 20074fc:	2821883a 	mov	r16,r5
 2007500:	2940038f 	ldh	r5,14(r5)
 2007504:	dfc00115 	stw	ra,4(sp)
 2007508:	2008fc40 	call	2008fc4 <_lseek_r>
 200750c:	00ffffc4 	movi	r3,-1
 2007510:	10c00826 	beq	r2,r3,2007534 <__sseek+0x40>
 2007514:	80c0030b 	ldhu	r3,12(r16)
 2007518:	80801415 	stw	r2,80(r16)
 200751c:	18c40014 	ori	r3,r3,4096
 2007520:	80c0030d 	sth	r3,12(r16)
 2007524:	dfc00117 	ldw	ra,4(sp)
 2007528:	dc000017 	ldw	r16,0(sp)
 200752c:	dec00204 	addi	sp,sp,8
 2007530:	f800283a 	ret
 2007534:	80c0030b 	ldhu	r3,12(r16)
 2007538:	18fbffcc 	andi	r3,r3,61439
 200753c:	80c0030d 	sth	r3,12(r16)
 2007540:	dfc00117 	ldw	ra,4(sp)
 2007544:	dc000017 	ldw	r16,0(sp)
 2007548:	dec00204 	addi	sp,sp,8
 200754c:	f800283a 	ret

02007550 <__sclose>:
 2007550:	2940038f 	ldh	r5,14(r5)
 2007554:	2008b1c1 	jmpi	2008b1c <_close_r>

02007558 <strcmp>:
 2007558:	2144b03a 	or	r2,r4,r5
 200755c:	108000cc 	andi	r2,r2,3
 2007560:	1000171e 	bne	r2,zero,20075c0 <strcmp+0x68>
 2007564:	20800017 	ldw	r2,0(r4)
 2007568:	28c00017 	ldw	r3,0(r5)
 200756c:	10c0141e 	bne	r2,r3,20075c0 <strcmp+0x68>
 2007570:	027fbff4 	movhi	r9,65279
 2007574:	4a7fbfc4 	addi	r9,r9,-257
 2007578:	0086303a 	nor	r3,zero,r2
 200757c:	02202074 	movhi	r8,32897
 2007580:	1245883a 	add	r2,r2,r9
 2007584:	42202004 	addi	r8,r8,-32640
 2007588:	10c4703a 	and	r2,r2,r3
 200758c:	1204703a 	and	r2,r2,r8
 2007590:	10000226 	beq	r2,zero,200759c <strcmp+0x44>
 2007594:	00001706 	br	20075f4 <strcmp+0x9c>
 2007598:	1000161e 	bne	r2,zero,20075f4 <strcmp+0x9c>
 200759c:	21000104 	addi	r4,r4,4
 20075a0:	20c00017 	ldw	r3,0(r4)
 20075a4:	29400104 	addi	r5,r5,4
 20075a8:	29800017 	ldw	r6,0(r5)
 20075ac:	1a4f883a 	add	r7,r3,r9
 20075b0:	00c4303a 	nor	r2,zero,r3
 20075b4:	3884703a 	and	r2,r7,r2
 20075b8:	1204703a 	and	r2,r2,r8
 20075bc:	19bff626 	beq	r3,r6,2007598 <strcmp+0x40>
 20075c0:	20800007 	ldb	r2,0(r4)
 20075c4:	1000051e 	bne	r2,zero,20075dc <strcmp+0x84>
 20075c8:	00000606 	br	20075e4 <strcmp+0x8c>
 20075cc:	21000044 	addi	r4,r4,1
 20075d0:	20800007 	ldb	r2,0(r4)
 20075d4:	29400044 	addi	r5,r5,1
 20075d8:	10000226 	beq	r2,zero,20075e4 <strcmp+0x8c>
 20075dc:	28c00007 	ldb	r3,0(r5)
 20075e0:	10fffa26 	beq	r2,r3,20075cc <strcmp+0x74>
 20075e4:	20800003 	ldbu	r2,0(r4)
 20075e8:	28c00003 	ldbu	r3,0(r5)
 20075ec:	10c5c83a 	sub	r2,r2,r3
 20075f0:	f800283a 	ret
 20075f4:	0005883a 	mov	r2,zero
 20075f8:	f800283a 	ret

020075fc <__sprint_r.part.0>:
 20075fc:	28801917 	ldw	r2,100(r5)
 2007600:	defff604 	addi	sp,sp,-40
 2007604:	dd400515 	stw	r21,20(sp)
 2007608:	dcc00315 	stw	r19,12(sp)
 200760c:	dfc00915 	stw	ra,36(sp)
 2007610:	df000815 	stw	fp,32(sp)
 2007614:	ddc00715 	stw	r23,28(sp)
 2007618:	dd800615 	stw	r22,24(sp)
 200761c:	dd000415 	stw	r20,16(sp)
 2007620:	dc800215 	stw	r18,8(sp)
 2007624:	dc400115 	stw	r17,4(sp)
 2007628:	dc000015 	stw	r16,0(sp)
 200762c:	1088000c 	andi	r2,r2,8192
 2007630:	2827883a 	mov	r19,r5
 2007634:	302b883a 	mov	r21,r6
 2007638:	10002d26 	beq	r2,zero,20076f0 <__sprint_r.part.0+0xf4>
 200763c:	30800217 	ldw	r2,8(r6)
 2007640:	35800017 	ldw	r22,0(r6)
 2007644:	10002826 	beq	r2,zero,20076e8 <__sprint_r.part.0+0xec>
 2007648:	2029883a 	mov	r20,r4
 200764c:	b5c00104 	addi	r23,r22,4
 2007650:	04bfffc4 	movi	r18,-1
 2007654:	bc400017 	ldw	r17,0(r23)
 2007658:	b4000017 	ldw	r16,0(r22)
 200765c:	0039883a 	mov	fp,zero
 2007660:	8822d0ba 	srli	r17,r17,2
 2007664:	04400316 	blt	zero,r17,2007674 <__sprint_r.part.0+0x78>
 2007668:	00001806 	br	20076cc <__sprint_r.part.0+0xd0>
 200766c:	84000104 	addi	r16,r16,4
 2007670:	8f001526 	beq	r17,fp,20076c8 <__sprint_r.part.0+0xcc>
 2007674:	81400017 	ldw	r5,0(r16)
 2007678:	a009883a 	mov	r4,r20
 200767c:	980d883a 	mov	r6,r19
 2007680:	2008d380 	call	2008d38 <_fputwc_r>
 2007684:	e7000044 	addi	fp,fp,1
 2007688:	14bff81e 	bne	r2,r18,200766c <__sprint_r.part.0+0x70>
 200768c:	9005883a 	mov	r2,r18
 2007690:	a8000215 	stw	zero,8(r21)
 2007694:	a8000115 	stw	zero,4(r21)
 2007698:	dfc00917 	ldw	ra,36(sp)
 200769c:	df000817 	ldw	fp,32(sp)
 20076a0:	ddc00717 	ldw	r23,28(sp)
 20076a4:	dd800617 	ldw	r22,24(sp)
 20076a8:	dd400517 	ldw	r21,20(sp)
 20076ac:	dd000417 	ldw	r20,16(sp)
 20076b0:	dcc00317 	ldw	r19,12(sp)
 20076b4:	dc800217 	ldw	r18,8(sp)
 20076b8:	dc400117 	ldw	r17,4(sp)
 20076bc:	dc000017 	ldw	r16,0(sp)
 20076c0:	dec00a04 	addi	sp,sp,40
 20076c4:	f800283a 	ret
 20076c8:	a8800217 	ldw	r2,8(r21)
 20076cc:	8c63883a 	add	r17,r17,r17
 20076d0:	8c63883a 	add	r17,r17,r17
 20076d4:	1445c83a 	sub	r2,r2,r17
 20076d8:	a8800215 	stw	r2,8(r21)
 20076dc:	b5800204 	addi	r22,r22,8
 20076e0:	bdc00204 	addi	r23,r23,8
 20076e4:	103fdb1e 	bne	r2,zero,2007654 <__sprint_r.part.0+0x58>
 20076e8:	0005883a 	mov	r2,zero
 20076ec:	003fe806 	br	2007690 <__sprint_r.part.0+0x94>
 20076f0:	20049240 	call	2004924 <__sfvwrite_r>
 20076f4:	003fe606 	br	2007690 <__sprint_r.part.0+0x94>

020076f8 <__sprint_r>:
 20076f8:	30c00217 	ldw	r3,8(r6)
 20076fc:	18000126 	beq	r3,zero,2007704 <__sprint_r+0xc>
 2007700:	20075fc1 	jmpi	20075fc <__sprint_r.part.0>
 2007704:	30000115 	stw	zero,4(r6)
 2007708:	0005883a 	mov	r2,zero
 200770c:	f800283a 	ret

02007710 <___vfiprintf_internal_r>:
 2007710:	deffca04 	addi	sp,sp,-216
 2007714:	dd803215 	stw	r22,200(sp)
 2007718:	dd403115 	stw	r21,196(sp)
 200771c:	dfc03515 	stw	ra,212(sp)
 2007720:	df003415 	stw	fp,208(sp)
 2007724:	ddc03315 	stw	r23,204(sp)
 2007728:	dd003015 	stw	r20,192(sp)
 200772c:	dcc02f15 	stw	r19,188(sp)
 2007730:	dc802e15 	stw	r18,184(sp)
 2007734:	dc402d15 	stw	r17,180(sp)
 2007738:	dc002c15 	stw	r16,176(sp)
 200773c:	d9002015 	stw	r4,128(sp)
 2007740:	d9c02215 	stw	r7,136(sp)
 2007744:	282b883a 	mov	r21,r5
 2007748:	302d883a 	mov	r22,r6
 200774c:	20000226 	beq	r4,zero,2007758 <___vfiprintf_internal_r+0x48>
 2007750:	20800e17 	ldw	r2,56(r4)
 2007754:	1001b126 	beq	r2,zero,2007e1c <___vfiprintf_internal_r+0x70c>
 2007758:	a880030b 	ldhu	r2,12(r21)
 200775c:	10c8000c 	andi	r3,r2,8192
 2007760:	1800061e 	bne	r3,zero,200777c <___vfiprintf_internal_r+0x6c>
 2007764:	a9001917 	ldw	r4,100(r21)
 2007768:	00f7ffc4 	movi	r3,-8193
 200776c:	10880014 	ori	r2,r2,8192
 2007770:	20c6703a 	and	r3,r4,r3
 2007774:	a880030d 	sth	r2,12(r21)
 2007778:	a8c01915 	stw	r3,100(r21)
 200777c:	10c0020c 	andi	r3,r2,8
 2007780:	18018926 	beq	r3,zero,2007da8 <___vfiprintf_internal_r+0x698>
 2007784:	a8c00417 	ldw	r3,16(r21)
 2007788:	18018726 	beq	r3,zero,2007da8 <___vfiprintf_internal_r+0x698>
 200778c:	1080068c 	andi	r2,r2,26
 2007790:	00c00284 	movi	r3,10
 2007794:	10c18c26 	beq	r2,r3,2007dc8 <___vfiprintf_internal_r+0x6b8>
 2007798:	d8801a04 	addi	r2,sp,104
 200779c:	d8c019c4 	addi	r3,sp,103
 20077a0:	07008074 	movhi	fp,513
 20077a4:	05c08074 	movhi	r23,513
 20077a8:	10c9c83a 	sub	r4,r2,r3
 20077ac:	e73c5c04 	addi	fp,fp,-3728
 20077b0:	bdfc5804 	addi	r23,r23,-3744
 20077b4:	d8801e15 	stw	r2,120(sp)
 20077b8:	d8c01f15 	stw	r3,124(sp)
 20077bc:	dec01a15 	stw	sp,104(sp)
 20077c0:	d8001c15 	stw	zero,112(sp)
 20077c4:	d8001b15 	stw	zero,108(sp)
 20077c8:	d8002615 	stw	zero,152(sp)
 20077cc:	d8002315 	stw	zero,140(sp)
 20077d0:	d9002715 	stw	r4,156(sp)
 20077d4:	d811883a 	mov	r8,sp
 20077d8:	dd402115 	stw	r21,132(sp)
 20077dc:	b021883a 	mov	r16,r22
 20077e0:	80800007 	ldb	r2,0(r16)
 20077e4:	10037226 	beq	r2,zero,20085b0 <___vfiprintf_internal_r+0xea0>
 20077e8:	01000944 	movi	r4,37
 20077ec:	11037026 	beq	r2,r4,20085b0 <___vfiprintf_internal_r+0xea0>
 20077f0:	8005883a 	mov	r2,r16
 20077f4:	00000106 	br	20077fc <___vfiprintf_internal_r+0xec>
 20077f8:	19000326 	beq	r3,r4,2007808 <___vfiprintf_internal_r+0xf8>
 20077fc:	10800044 	addi	r2,r2,1
 2007800:	10c00007 	ldb	r3,0(r2)
 2007804:	183ffc1e 	bne	r3,zero,20077f8 <___vfiprintf_internal_r+0xe8>
 2007808:	1425c83a 	sub	r18,r2,r16
 200780c:	1023883a 	mov	r17,r2
 2007810:	90001026 	beq	r18,zero,2007854 <___vfiprintf_internal_r+0x144>
 2007814:	d8c01c17 	ldw	r3,112(sp)
 2007818:	d8801b17 	ldw	r2,108(sp)
 200781c:	44000015 	stw	r16,0(r8)
 2007820:	90c7883a 	add	r3,r18,r3
 2007824:	10800044 	addi	r2,r2,1
 2007828:	44800115 	stw	r18,4(r8)
 200782c:	d8c01c15 	stw	r3,112(sp)
 2007830:	d8801b15 	stw	r2,108(sp)
 2007834:	010001c4 	movi	r4,7
 2007838:	2080750e 	bge	r4,r2,2007a10 <___vfiprintf_internal_r+0x300>
 200783c:	18036f1e 	bne	r3,zero,20085fc <___vfiprintf_internal_r+0xeec>
 2007840:	d8802317 	ldw	r2,140(sp)
 2007844:	d8001b15 	stw	zero,108(sp)
 2007848:	d811883a 	mov	r8,sp
 200784c:	1485883a 	add	r2,r2,r18
 2007850:	d8802315 	stw	r2,140(sp)
 2007854:	88800007 	ldb	r2,0(r17)
 2007858:	10041026 	beq	r2,zero,200889c <___vfiprintf_internal_r+0x118c>
 200785c:	88c00047 	ldb	r3,1(r17)
 2007860:	88800044 	addi	r2,r17,1
 2007864:	d8001d85 	stb	zero,118(sp)
 2007868:	000f883a 	mov	r7,zero
 200786c:	027fffc4 	movi	r9,-1
 2007870:	0025883a 	mov	r18,zero
 2007874:	002b883a 	mov	r21,zero
 2007878:	01401604 	movi	r5,88
 200787c:	01800244 	movi	r6,9
 2007880:	03400a84 	movi	r13,42
 2007884:	03001b04 	movi	r12,108
 2007888:	14000044 	addi	r16,r2,1
 200788c:	18bff804 	addi	r2,r3,-32
 2007890:	28825536 	bltu	r5,r2,20081e8 <___vfiprintf_internal_r+0xad8>
 2007894:	100490ba 	slli	r2,r2,2
 2007898:	01008034 	movhi	r4,512
 200789c:	211e2b04 	addi	r4,r4,30892
 20078a0:	1105883a 	add	r2,r2,r4
 20078a4:	10800017 	ldw	r2,0(r2)
 20078a8:	1000683a 	jmp	r2
 20078ac:	02007fac 	andhi	r8,zero,510
 20078b0:	020081e8 	cmpgeui	r8,zero,519
 20078b4:	020081e8 	cmpgeui	r8,zero,519
 20078b8:	02007fcc 	andi	r8,zero,511
 20078bc:	020081e8 	cmpgeui	r8,zero,519
 20078c0:	020081e8 	cmpgeui	r8,zero,519
 20078c4:	020081e8 	cmpgeui	r8,zero,519
 20078c8:	020081e8 	cmpgeui	r8,zero,519
 20078cc:	020081e8 	cmpgeui	r8,zero,519
 20078d0:	020081e8 	cmpgeui	r8,zero,519
 20078d4:	02007fdc 	xori	r8,zero,511
 20078d8:	02007ffc 	xorhi	r8,zero,511
 20078dc:	020081e8 	cmpgeui	r8,zero,519
 20078e0:	02007e24 	muli	r8,zero,504
 20078e4:	02007f10 	cmplti	r8,zero,508
 20078e8:	020081e8 	cmpgeui	r8,zero,519
 20078ec:	02007e90 	cmplti	r8,zero,506
 20078f0:	02007ea0 	cmpeqi	r8,zero,506
 20078f4:	02007ea0 	cmpeqi	r8,zero,506
 20078f8:	02007ea0 	cmpeqi	r8,zero,506
 20078fc:	02007ea0 	cmpeqi	r8,zero,506
 2007900:	02007ea0 	cmpeqi	r8,zero,506
 2007904:	02007ea0 	cmpeqi	r8,zero,506
 2007908:	02007ea0 	cmpeqi	r8,zero,506
 200790c:	02007ea0 	cmpeqi	r8,zero,506
 2007910:	02007ea0 	cmpeqi	r8,zero,506
 2007914:	020081e8 	cmpgeui	r8,zero,519
 2007918:	020081e8 	cmpgeui	r8,zero,519
 200791c:	020081e8 	cmpgeui	r8,zero,519
 2007920:	020081e8 	cmpgeui	r8,zero,519
 2007924:	020081e8 	cmpgeui	r8,zero,519
 2007928:	020081e8 	cmpgeui	r8,zero,519
 200792c:	020081e8 	cmpgeui	r8,zero,519
 2007930:	020081e8 	cmpgeui	r8,zero,519
 2007934:	020081e8 	cmpgeui	r8,zero,519
 2007938:	020081e8 	cmpgeui	r8,zero,519
 200793c:	02007ecc 	andi	r8,zero,507
 2007940:	020081e8 	cmpgeui	r8,zero,519
 2007944:	020081e8 	cmpgeui	r8,zero,519
 2007948:	020081e8 	cmpgeui	r8,zero,519
 200794c:	020081e8 	cmpgeui	r8,zero,519
 2007950:	020081e8 	cmpgeui	r8,zero,519
 2007954:	020081e8 	cmpgeui	r8,zero,519
 2007958:	020081e8 	cmpgeui	r8,zero,519
 200795c:	020081e8 	cmpgeui	r8,zero,519
 2007960:	020081e8 	cmpgeui	r8,zero,519
 2007964:	020081e8 	cmpgeui	r8,zero,519
 2007968:	02007a58 	cmpnei	r8,zero,489
 200796c:	020081e8 	cmpgeui	r8,zero,519
 2007970:	020081e8 	cmpgeui	r8,zero,519
 2007974:	020081e8 	cmpgeui	r8,zero,519
 2007978:	020081e8 	cmpgeui	r8,zero,519
 200797c:	020081e8 	cmpgeui	r8,zero,519
 2007980:	02007a24 	muli	r8,zero,488
 2007984:	020081e8 	cmpgeui	r8,zero,519
 2007988:	020081e8 	cmpgeui	r8,zero,519
 200798c:	0200806c 	andhi	r8,zero,513
 2007990:	020081e8 	cmpgeui	r8,zero,519
 2007994:	020081e8 	cmpgeui	r8,zero,519
 2007998:	020081e8 	cmpgeui	r8,zero,519
 200799c:	020081e8 	cmpgeui	r8,zero,519
 20079a0:	020081e8 	cmpgeui	r8,zero,519
 20079a4:	020081e8 	cmpgeui	r8,zero,519
 20079a8:	020081e8 	cmpgeui	r8,zero,519
 20079ac:	020081e8 	cmpgeui	r8,zero,519
 20079b0:	020081e8 	cmpgeui	r8,zero,519
 20079b4:	020081e8 	cmpgeui	r8,zero,519
 20079b8:	0200800c 	andi	r8,zero,512
 20079bc:	02008038 	rdprs	r8,zero,512
 20079c0:	020081e8 	cmpgeui	r8,zero,519
 20079c4:	020081e8 	cmpgeui	r8,zero,519
 20079c8:	020081e8 	cmpgeui	r8,zero,519
 20079cc:	02008114 	movui	r8,516
 20079d0:	02008038 	rdprs	r8,zero,512
 20079d4:	020081e8 	cmpgeui	r8,zero,519
 20079d8:	020081e8 	cmpgeui	r8,zero,519
 20079dc:	02008124 	muli	r8,zero,516
 20079e0:	020081e8 	cmpgeui	r8,zero,519
 20079e4:	02007f50 	cmplti	r8,zero,509
 20079e8:	02007a5c 	xori	r8,zero,489
 20079ec:	02008138 	rdprs	r8,zero,516
 20079f0:	02008178 	rdprs	r8,zero,517
 20079f4:	020081e8 	cmpgeui	r8,zero,519
 20079f8:	020080c0 	call	20080c <__alt_mem_background_mem+0x20080c>
 20079fc:	020081e8 	cmpgeui	r8,zero,519
 2007a00:	02007a28 	cmpgeui	r8,zero,488
 2007a04:	020081e8 	cmpgeui	r8,zero,519
 2007a08:	020081e8 	cmpgeui	r8,zero,519
 2007a0c:	02008188 	cmpgei	r8,zero,518
 2007a10:	42000204 	addi	r8,r8,8
 2007a14:	d8802317 	ldw	r2,140(sp)
 2007a18:	1485883a 	add	r2,r2,r18
 2007a1c:	d8802315 	stw	r2,140(sp)
 2007a20:	003f8c06 	br	2007854 <___vfiprintf_internal_r+0x144>
 2007a24:	ad400414 	ori	r21,r21,16
 2007a28:	a880080c 	andi	r2,r21,32
 2007a2c:	1001e61e 	bne	r2,zero,20081c8 <___vfiprintf_internal_r+0xab8>
 2007a30:	a880040c 	andi	r2,r21,16
 2007a34:	10034726 	beq	r2,zero,2008754 <___vfiprintf_internal_r+0x1044>
 2007a38:	d8802217 	ldw	r2,136(sp)
 2007a3c:	001b883a 	mov	r13,zero
 2007a40:	15800017 	ldw	r22,0(r2)
 2007a44:	10800104 	addi	r2,r2,4
 2007a48:	d8802215 	stw	r2,136(sp)
 2007a4c:	b009883a 	mov	r4,r22
 2007a50:	00800044 	movi	r2,1
 2007a54:	00000c06 	br	2007a88 <___vfiprintf_internal_r+0x378>
 2007a58:	ad400414 	ori	r21,r21,16
 2007a5c:	a880080c 	andi	r2,r21,32
 2007a60:	1001491e 	bne	r2,zero,2007f88 <___vfiprintf_internal_r+0x878>
 2007a64:	a880040c 	andi	r2,r21,16
 2007a68:	10032d26 	beq	r2,zero,2008720 <___vfiprintf_internal_r+0x1010>
 2007a6c:	d9002217 	ldw	r4,136(sp)
 2007a70:	001b883a 	mov	r13,zero
 2007a74:	0005883a 	mov	r2,zero
 2007a78:	25800017 	ldw	r22,0(r4)
 2007a7c:	21000104 	addi	r4,r4,4
 2007a80:	d9002215 	stw	r4,136(sp)
 2007a84:	b009883a 	mov	r4,r22
 2007a88:	d8001d85 	stb	zero,118(sp)
 2007a8c:	4827883a 	mov	r19,r9
 2007a90:	001d883a 	mov	r14,zero
 2007a94:	48000216 	blt	r9,zero,2007aa0 <___vfiprintf_internal_r+0x390>
 2007a98:	00ffdfc4 	movi	r3,-129
 2007a9c:	a8ea703a 	and	r21,r21,r3
 2007aa0:	2002071e 	bne	r4,zero,20082c0 <___vfiprintf_internal_r+0xbb0>
 2007aa4:	4802ad26 	beq	r9,zero,200855c <___vfiprintf_internal_r+0xe4c>
 2007aa8:	10803fcc 	andi	r2,r2,255
 2007aac:	00c00044 	movi	r3,1
 2007ab0:	10c22b26 	beq	r2,r3,2008360 <___vfiprintf_internal_r+0xc50>
 2007ab4:	00c00084 	movi	r3,2
 2007ab8:	dd001a04 	addi	r20,sp,104
 2007abc:	10c0dd1e 	bne	r2,r3,2007e34 <___vfiprintf_internal_r+0x724>
 2007ac0:	d9002617 	ldw	r4,152(sp)
 2007ac4:	b08003cc 	andi	r2,r22,15
 2007ac8:	6806973a 	slli	r3,r13,28
 2007acc:	2085883a 	add	r2,r4,r2
 2007ad0:	b02cd13a 	srli	r22,r22,4
 2007ad4:	10800003 	ldbu	r2,0(r2)
 2007ad8:	681ad13a 	srli	r13,r13,4
 2007adc:	a53fffc4 	addi	r20,r20,-1
 2007ae0:	1dacb03a 	or	r22,r3,r22
 2007ae4:	a0800005 	stb	r2,0(r20)
 2007ae8:	b344b03a 	or	r2,r22,r13
 2007aec:	103ff51e 	bne	r2,zero,2007ac4 <___vfiprintf_internal_r+0x3b4>
 2007af0:	d9001e17 	ldw	r4,120(sp)
 2007af4:	2527c83a 	sub	r19,r4,r20
 2007af8:	9823883a 	mov	r17,r19
 2007afc:	9a40010e 	bge	r19,r9,2007b04 <___vfiprintf_internal_r+0x3f4>
 2007b00:	4823883a 	mov	r17,r9
 2007b04:	73803fcc 	andi	r14,r14,255
 2007b08:	7380201c 	xori	r14,r14,128
 2007b0c:	73bfe004 	addi	r14,r14,-128
 2007b10:	70000126 	beq	r14,zero,2007b18 <___vfiprintf_internal_r+0x408>
 2007b14:	8c400044 	addi	r17,r17,1
 2007b18:	ab40008c 	andi	r13,r21,2
 2007b1c:	68000126 	beq	r13,zero,2007b24 <___vfiprintf_internal_r+0x414>
 2007b20:	8c400084 	addi	r17,r17,2
 2007b24:	ad80210c 	andi	r22,r21,132
 2007b28:	b001c51e 	bne	r22,zero,2008240 <___vfiprintf_internal_r+0xb30>
 2007b2c:	9447c83a 	sub	r3,r18,r17
 2007b30:	00c1c30e 	bge	zero,r3,2008240 <___vfiprintf_internal_r+0xb30>
 2007b34:	01c00404 	movi	r7,16
 2007b38:	d8801c17 	ldw	r2,112(sp)
 2007b3c:	38c37b0e 	bge	r7,r3,200892c <___vfiprintf_internal_r+0x121c>
 2007b40:	01008074 	movhi	r4,513
 2007b44:	213c5c04 	addi	r4,r4,-3728
 2007b48:	dc002915 	stw	r16,164(sp)
 2007b4c:	d9801b17 	ldw	r6,108(sp)
 2007b50:	d9002415 	stw	r4,144(sp)
 2007b54:	03c001c4 	movi	r15,7
 2007b58:	da402515 	stw	r9,148(sp)
 2007b5c:	db402815 	stw	r13,160(sp)
 2007b60:	1821883a 	mov	r16,r3
 2007b64:	00000506 	br	2007b7c <___vfiprintf_internal_r+0x46c>
 2007b68:	31400084 	addi	r5,r6,2
 2007b6c:	42000204 	addi	r8,r8,8
 2007b70:	200d883a 	mov	r6,r4
 2007b74:	843ffc04 	addi	r16,r16,-16
 2007b78:	3c000d0e 	bge	r7,r16,2007bb0 <___vfiprintf_internal_r+0x4a0>
 2007b7c:	10800404 	addi	r2,r2,16
 2007b80:	31000044 	addi	r4,r6,1
 2007b84:	47000015 	stw	fp,0(r8)
 2007b88:	41c00115 	stw	r7,4(r8)
 2007b8c:	d8801c15 	stw	r2,112(sp)
 2007b90:	d9001b15 	stw	r4,108(sp)
 2007b94:	793ff40e 	bge	r15,r4,2007b68 <___vfiprintf_internal_r+0x458>
 2007b98:	10019b1e 	bne	r2,zero,2008208 <___vfiprintf_internal_r+0xaf8>
 2007b9c:	843ffc04 	addi	r16,r16,-16
 2007ba0:	000d883a 	mov	r6,zero
 2007ba4:	01400044 	movi	r5,1
 2007ba8:	d811883a 	mov	r8,sp
 2007bac:	3c3ff316 	blt	r7,r16,2007b7c <___vfiprintf_internal_r+0x46c>
 2007bb0:	8007883a 	mov	r3,r16
 2007bb4:	da402517 	ldw	r9,148(sp)
 2007bb8:	db402817 	ldw	r13,160(sp)
 2007bbc:	dc002917 	ldw	r16,164(sp)
 2007bc0:	d9002417 	ldw	r4,144(sp)
 2007bc4:	1885883a 	add	r2,r3,r2
 2007bc8:	40c00115 	stw	r3,4(r8)
 2007bcc:	41000015 	stw	r4,0(r8)
 2007bd0:	d8801c15 	stw	r2,112(sp)
 2007bd4:	d9401b15 	stw	r5,108(sp)
 2007bd8:	00c001c4 	movi	r3,7
 2007bdc:	19426a16 	blt	r3,r5,2008588 <___vfiprintf_internal_r+0xe78>
 2007be0:	d8c01d87 	ldb	r3,118(sp)
 2007be4:	42000204 	addi	r8,r8,8
 2007be8:	29000044 	addi	r4,r5,1
 2007bec:	1801991e 	bne	r3,zero,2008254 <___vfiprintf_internal_r+0xb44>
 2007bf0:	68000c26 	beq	r13,zero,2007c24 <___vfiprintf_internal_r+0x514>
 2007bf4:	d8c01d04 	addi	r3,sp,116
 2007bf8:	10800084 	addi	r2,r2,2
 2007bfc:	40c00015 	stw	r3,0(r8)
 2007c00:	00c00084 	movi	r3,2
 2007c04:	40c00115 	stw	r3,4(r8)
 2007c08:	d8801c15 	stw	r2,112(sp)
 2007c0c:	d9001b15 	stw	r4,108(sp)
 2007c10:	00c001c4 	movi	r3,7
 2007c14:	19024c16 	blt	r3,r4,2008548 <___vfiprintf_internal_r+0xe38>
 2007c18:	200b883a 	mov	r5,r4
 2007c1c:	42000204 	addi	r8,r8,8
 2007c20:	21000044 	addi	r4,r4,1
 2007c24:	00c02004 	movi	r3,128
 2007c28:	b0c20126 	beq	r22,r3,2008430 <___vfiprintf_internal_r+0xd20>
 2007c2c:	4cedc83a 	sub	r22,r9,r19
 2007c30:	0580230e 	bge	zero,r22,2007cc0 <___vfiprintf_internal_r+0x5b0>
 2007c34:	01c00404 	movi	r7,16
 2007c38:	3d83140e 	bge	r7,r22,200888c <___vfiprintf_internal_r+0x117c>
 2007c3c:	01008074 	movhi	r4,513
 2007c40:	213c5804 	addi	r4,r4,-3744
 2007c44:	d9002415 	stw	r4,144(sp)
 2007c48:	034001c4 	movi	r13,7
 2007c4c:	00000506 	br	2007c64 <___vfiprintf_internal_r+0x554>
 2007c50:	29000084 	addi	r4,r5,2
 2007c54:	42000204 	addi	r8,r8,8
 2007c58:	180b883a 	mov	r5,r3
 2007c5c:	b5bffc04 	addi	r22,r22,-16
 2007c60:	3d800d0e 	bge	r7,r22,2007c98 <___vfiprintf_internal_r+0x588>
 2007c64:	10800404 	addi	r2,r2,16
 2007c68:	28c00044 	addi	r3,r5,1
 2007c6c:	45c00015 	stw	r23,0(r8)
 2007c70:	41c00115 	stw	r7,4(r8)
 2007c74:	d8801c15 	stw	r2,112(sp)
 2007c78:	d8c01b15 	stw	r3,108(sp)
 2007c7c:	68fff40e 	bge	r13,r3,2007c50 <___vfiprintf_internal_r+0x540>
 2007c80:	1001811e 	bne	r2,zero,2008288 <___vfiprintf_internal_r+0xb78>
 2007c84:	b5bffc04 	addi	r22,r22,-16
 2007c88:	01000044 	movi	r4,1
 2007c8c:	000b883a 	mov	r5,zero
 2007c90:	d811883a 	mov	r8,sp
 2007c94:	3dbff316 	blt	r7,r22,2007c64 <___vfiprintf_internal_r+0x554>
 2007c98:	d8c02417 	ldw	r3,144(sp)
 2007c9c:	1585883a 	add	r2,r2,r22
 2007ca0:	45800115 	stw	r22,4(r8)
 2007ca4:	40c00015 	stw	r3,0(r8)
 2007ca8:	d8801c15 	stw	r2,112(sp)
 2007cac:	d9001b15 	stw	r4,108(sp)
 2007cb0:	00c001c4 	movi	r3,7
 2007cb4:	1901d016 	blt	r3,r4,20083f8 <___vfiprintf_internal_r+0xce8>
 2007cb8:	42000204 	addi	r8,r8,8
 2007cbc:	21000044 	addi	r4,r4,1
 2007cc0:	14c5883a 	add	r2,r2,r19
 2007cc4:	45000015 	stw	r20,0(r8)
 2007cc8:	44c00115 	stw	r19,4(r8)
 2007ccc:	d8801c15 	stw	r2,112(sp)
 2007cd0:	d9001b15 	stw	r4,108(sp)
 2007cd4:	00c001c4 	movi	r3,7
 2007cd8:	1901cf0e 	bge	r3,r4,2008418 <___vfiprintf_internal_r+0xd08>
 2007cdc:	1002361e 	bne	r2,zero,20085b8 <___vfiprintf_internal_r+0xea8>
 2007ce0:	d8001b15 	stw	zero,108(sp)
 2007ce4:	aac0010c 	andi	r11,r21,4
 2007ce8:	58002826 	beq	r11,zero,2007d8c <___vfiprintf_internal_r+0x67c>
 2007cec:	9467c83a 	sub	r19,r18,r17
 2007cf0:	d811883a 	mov	r8,sp
 2007cf4:	04c3340e 	bge	zero,r19,20089c8 <___vfiprintf_internal_r+0x12b8>
 2007cf8:	01c00404 	movi	r7,16
 2007cfc:	3cc31b0e 	bge	r7,r19,200896c <___vfiprintf_internal_r+0x125c>
 2007d00:	00c08074 	movhi	r3,513
 2007d04:	18fc5c04 	addi	r3,r3,-3728
 2007d08:	d9001b17 	ldw	r4,108(sp)
 2007d0c:	d8c02415 	stw	r3,144(sp)
 2007d10:	382b883a 	mov	r21,r7
 2007d14:	050001c4 	movi	r20,7
 2007d18:	dd802017 	ldw	r22,128(sp)
 2007d1c:	00000506 	br	2007d34 <___vfiprintf_internal_r+0x624>
 2007d20:	21400084 	addi	r5,r4,2
 2007d24:	42000204 	addi	r8,r8,8
 2007d28:	1809883a 	mov	r4,r3
 2007d2c:	9cfffc04 	addi	r19,r19,-16
 2007d30:	acc00d0e 	bge	r21,r19,2007d68 <___vfiprintf_internal_r+0x658>
 2007d34:	10800404 	addi	r2,r2,16
 2007d38:	20c00044 	addi	r3,r4,1
 2007d3c:	47000015 	stw	fp,0(r8)
 2007d40:	45400115 	stw	r21,4(r8)
 2007d44:	d8801c15 	stw	r2,112(sp)
 2007d48:	d8c01b15 	stw	r3,108(sp)
 2007d4c:	a0fff40e 	bge	r20,r3,2007d20 <___vfiprintf_internal_r+0x610>
 2007d50:	10019f1e 	bne	r2,zero,20083d0 <___vfiprintf_internal_r+0xcc0>
 2007d54:	9cfffc04 	addi	r19,r19,-16
 2007d58:	01400044 	movi	r5,1
 2007d5c:	0009883a 	mov	r4,zero
 2007d60:	d811883a 	mov	r8,sp
 2007d64:	acfff316 	blt	r21,r19,2007d34 <___vfiprintf_internal_r+0x624>
 2007d68:	d8c02417 	ldw	r3,144(sp)
 2007d6c:	14c5883a 	add	r2,r2,r19
 2007d70:	44c00115 	stw	r19,4(r8)
 2007d74:	40c00015 	stw	r3,0(r8)
 2007d78:	d8801c15 	stw	r2,112(sp)
 2007d7c:	d9401b15 	stw	r5,108(sp)
 2007d80:	00c001c4 	movi	r3,7
 2007d84:	1941810e 	bge	r3,r5,200838c <___vfiprintf_internal_r+0xc7c>
 2007d88:	10017a1e 	bne	r2,zero,2008374 <___vfiprintf_internal_r+0xc64>
 2007d8c:	8c82a416 	blt	r17,r18,2008820 <___vfiprintf_internal_r+0x1110>
 2007d90:	d9002317 	ldw	r4,140(sp)
 2007d94:	2449883a 	add	r4,r4,r17
 2007d98:	d9002315 	stw	r4,140(sp)
 2007d9c:	d8001b15 	stw	zero,108(sp)
 2007da0:	d811883a 	mov	r8,sp
 2007da4:	003e8e06 	br	20077e0 <___vfiprintf_internal_r+0xd0>
 2007da8:	d9002017 	ldw	r4,128(sp)
 2007dac:	a80b883a 	mov	r5,r21
 2007db0:	20024600 	call	2002460 <__swsetup_r>
 2007db4:	10000c1e 	bne	r2,zero,2007de8 <___vfiprintf_internal_r+0x6d8>
 2007db8:	a880030b 	ldhu	r2,12(r21)
 2007dbc:	00c00284 	movi	r3,10
 2007dc0:	1080068c 	andi	r2,r2,26
 2007dc4:	10fe741e 	bne	r2,r3,2007798 <___vfiprintf_internal_r+0x88>
 2007dc8:	a880038f 	ldh	r2,14(r21)
 2007dcc:	103e7216 	blt	r2,zero,2007798 <___vfiprintf_internal_r+0x88>
 2007dd0:	d9002017 	ldw	r4,128(sp)
 2007dd4:	d9c02217 	ldw	r7,136(sp)
 2007dd8:	a80b883a 	mov	r5,r21
 2007ddc:	b00d883a 	mov	r6,r22
 2007de0:	2008a040 	call	2008a04 <__sbprintf>
 2007de4:	00000106 	br	2007dec <___vfiprintf_internal_r+0x6dc>
 2007de8:	00bfffc4 	movi	r2,-1
 2007dec:	dfc03517 	ldw	ra,212(sp)
 2007df0:	df003417 	ldw	fp,208(sp)
 2007df4:	ddc03317 	ldw	r23,204(sp)
 2007df8:	dd803217 	ldw	r22,200(sp)
 2007dfc:	dd403117 	ldw	r21,196(sp)
 2007e00:	dd003017 	ldw	r20,192(sp)
 2007e04:	dcc02f17 	ldw	r19,188(sp)
 2007e08:	dc802e17 	ldw	r18,184(sp)
 2007e0c:	dc402d17 	ldw	r17,180(sp)
 2007e10:	dc002c17 	ldw	r16,176(sp)
 2007e14:	dec03604 	addi	sp,sp,216
 2007e18:	f800283a 	ret
 2007e1c:	20044c00 	call	20044c0 <__sinit>
 2007e20:	003e4d06 	br	2007758 <___vfiprintf_internal_r+0x48>
 2007e24:	8005883a 	mov	r2,r16
 2007e28:	ad400114 	ori	r21,r21,4
 2007e2c:	80c00007 	ldb	r3,0(r16)
 2007e30:	003e9506 	br	2007888 <___vfiprintf_internal_r+0x178>
 2007e34:	b006d0fa 	srli	r3,r22,3
 2007e38:	6808977a 	slli	r4,r13,29
 2007e3c:	681ad0fa 	srli	r13,r13,3
 2007e40:	b58001cc 	andi	r22,r22,7
 2007e44:	b0800c04 	addi	r2,r22,48
 2007e48:	a53fffc4 	addi	r20,r20,-1
 2007e4c:	20ecb03a 	or	r22,r4,r3
 2007e50:	a0800005 	stb	r2,0(r20)
 2007e54:	b346b03a 	or	r3,r22,r13
 2007e58:	183ff61e 	bne	r3,zero,2007e34 <___vfiprintf_internal_r+0x724>
 2007e5c:	a8c0004c 	andi	r3,r21,1
 2007e60:	a009883a 	mov	r4,r20
 2007e64:	18013b26 	beq	r3,zero,2008354 <___vfiprintf_internal_r+0xc44>
 2007e68:	10803fcc 	andi	r2,r2,255
 2007e6c:	1080201c 	xori	r2,r2,128
 2007e70:	10bfe004 	addi	r2,r2,-128
 2007e74:	00c00c04 	movi	r3,48
 2007e78:	10ff1d26 	beq	r2,r3,2007af0 <___vfiprintf_internal_r+0x3e0>
 2007e7c:	d8801e17 	ldw	r2,120(sp)
 2007e80:	a53fffc4 	addi	r20,r20,-1
 2007e84:	20ffffc5 	stb	r3,-1(r4)
 2007e88:	1527c83a 	sub	r19,r2,r20
 2007e8c:	003f1a06 	br	2007af8 <___vfiprintf_internal_r+0x3e8>
 2007e90:	ad402014 	ori	r21,r21,128
 2007e94:	8005883a 	mov	r2,r16
 2007e98:	80c00007 	ldb	r3,0(r16)
 2007e9c:	003e7a06 	br	2007888 <___vfiprintf_internal_r+0x178>
 2007ea0:	8005883a 	mov	r2,r16
 2007ea4:	0025883a 	mov	r18,zero
 2007ea8:	193ff404 	addi	r4,r3,-48
 2007eac:	10c00007 	ldb	r3,0(r2)
 2007eb0:	948002a4 	muli	r18,r18,10
 2007eb4:	84000044 	addi	r16,r16,1
 2007eb8:	8005883a 	mov	r2,r16
 2007ebc:	9125883a 	add	r18,r18,r4
 2007ec0:	193ff404 	addi	r4,r3,-48
 2007ec4:	313ff92e 	bgeu	r6,r4,2007eac <___vfiprintf_internal_r+0x79c>
 2007ec8:	003e7006 	br	200788c <___vfiprintf_internal_r+0x17c>
 2007ecc:	ad400414 	ori	r21,r21,16
 2007ed0:	d9c01d85 	stb	r7,118(sp)
 2007ed4:	a880080c 	andi	r2,r21,32
 2007ed8:	d8c02217 	ldw	r3,136(sp)
 2007edc:	10005a26 	beq	r2,zero,2008048 <___vfiprintf_internal_r+0x938>
 2007ee0:	d9002217 	ldw	r4,136(sp)
 2007ee4:	18800117 	ldw	r2,4(r3)
 2007ee8:	1d800017 	ldw	r22,0(r3)
 2007eec:	21000204 	addi	r4,r4,8
 2007ef0:	d9002215 	stw	r4,136(sp)
 2007ef4:	101b883a 	mov	r13,r2
 2007ef8:	1001f416 	blt	r2,zero,20086cc <___vfiprintf_internal_r+0xfbc>
 2007efc:	db801d83 	ldbu	r14,118(sp)
 2007f00:	4827883a 	mov	r19,r9
 2007f04:	00800044 	movi	r2,1
 2007f08:	b348b03a 	or	r4,r22,r13
 2007f0c:	003ee106 	br	2007a94 <___vfiprintf_internal_r+0x384>
 2007f10:	80c00007 	ldb	r3,0(r16)
 2007f14:	80800044 	addi	r2,r16,1
 2007f18:	1b42a326 	beq	r3,r13,20089a8 <___vfiprintf_internal_r+0x1298>
 2007f1c:	193ff404 	addi	r4,r3,-48
 2007f20:	1021883a 	mov	r16,r2
 2007f24:	0013883a 	mov	r9,zero
 2007f28:	313e5836 	bltu	r6,r4,200788c <___vfiprintf_internal_r+0x17c>
 2007f2c:	80c00007 	ldb	r3,0(r16)
 2007f30:	4a4002a4 	muli	r9,r9,10
 2007f34:	84000044 	addi	r16,r16,1
 2007f38:	2253883a 	add	r9,r4,r9
 2007f3c:	193ff404 	addi	r4,r3,-48
 2007f40:	313ffa2e 	bgeu	r6,r4,2007f2c <___vfiprintf_internal_r+0x81c>
 2007f44:	483e510e 	bge	r9,zero,200788c <___vfiprintf_internal_r+0x17c>
 2007f48:	027fffc4 	movi	r9,-1
 2007f4c:	003e4f06 	br	200788c <___vfiprintf_internal_r+0x17c>
 2007f50:	d9c01d85 	stb	r7,118(sp)
 2007f54:	a880080c 	andi	r2,r21,32
 2007f58:	10020826 	beq	r2,zero,200877c <___vfiprintf_internal_r+0x106c>
 2007f5c:	d8c02217 	ldw	r3,136(sp)
 2007f60:	d9002317 	ldw	r4,140(sp)
 2007f64:	18800017 	ldw	r2,0(r3)
 2007f68:	2007d7fa 	srai	r3,r4,31
 2007f6c:	d9002217 	ldw	r4,136(sp)
 2007f70:	10c00115 	stw	r3,4(r2)
 2007f74:	21000104 	addi	r4,r4,4
 2007f78:	d9002215 	stw	r4,136(sp)
 2007f7c:	d9002317 	ldw	r4,140(sp)
 2007f80:	11000015 	stw	r4,0(r2)
 2007f84:	003e1606 	br	20077e0 <___vfiprintf_internal_r+0xd0>
 2007f88:	d8802217 	ldw	r2,136(sp)
 2007f8c:	d8c02217 	ldw	r3,136(sp)
 2007f90:	15800017 	ldw	r22,0(r2)
 2007f94:	13400117 	ldw	r13,4(r2)
 2007f98:	18c00204 	addi	r3,r3,8
 2007f9c:	0005883a 	mov	r2,zero
 2007fa0:	d8c02215 	stw	r3,136(sp)
 2007fa4:	b348b03a 	or	r4,r22,r13
 2007fa8:	003eb706 	br	2007a88 <___vfiprintf_internal_r+0x378>
 2007fac:	38803fcc 	andi	r2,r7,255
 2007fb0:	1080201c 	xori	r2,r2,128
 2007fb4:	10bfe004 	addi	r2,r2,-128
 2007fb8:	1001e31e 	bne	r2,zero,2008748 <___vfiprintf_internal_r+0x1038>
 2007fbc:	8005883a 	mov	r2,r16
 2007fc0:	01c00804 	movi	r7,32
 2007fc4:	80c00007 	ldb	r3,0(r16)
 2007fc8:	003e2f06 	br	2007888 <___vfiprintf_internal_r+0x178>
 2007fcc:	ad400054 	ori	r21,r21,1
 2007fd0:	8005883a 	mov	r2,r16
 2007fd4:	80c00007 	ldb	r3,0(r16)
 2007fd8:	003e2b06 	br	2007888 <___vfiprintf_internal_r+0x178>
 2007fdc:	d8c02217 	ldw	r3,136(sp)
 2007fe0:	1c800017 	ldw	r18,0(r3)
 2007fe4:	18c00104 	addi	r3,r3,4
 2007fe8:	90023816 	blt	r18,zero,20088cc <___vfiprintf_internal_r+0x11bc>
 2007fec:	d8c02215 	stw	r3,136(sp)
 2007ff0:	8005883a 	mov	r2,r16
 2007ff4:	80c00007 	ldb	r3,0(r16)
 2007ff8:	003e2306 	br	2007888 <___vfiprintf_internal_r+0x178>
 2007ffc:	8005883a 	mov	r2,r16
 2008000:	01c00ac4 	movi	r7,43
 2008004:	80c00007 	ldb	r3,0(r16)
 2008008:	003e1f06 	br	2007888 <___vfiprintf_internal_r+0x178>
 200800c:	d8c02217 	ldw	r3,136(sp)
 2008010:	04400044 	movi	r17,1
 2008014:	d8001d85 	stb	zero,118(sp)
 2008018:	18800017 	ldw	r2,0(r3)
 200801c:	18c00104 	addi	r3,r3,4
 2008020:	d8c02215 	stw	r3,136(sp)
 2008024:	d8801005 	stb	r2,64(sp)
 2008028:	8827883a 	mov	r19,r17
 200802c:	dd001004 	addi	r20,sp,64
 2008030:	0013883a 	mov	r9,zero
 2008034:	003eb806 	br	2007b18 <___vfiprintf_internal_r+0x408>
 2008038:	d9c01d85 	stb	r7,118(sp)
 200803c:	a880080c 	andi	r2,r21,32
 2008040:	d8c02217 	ldw	r3,136(sp)
 2008044:	103fa61e 	bne	r2,zero,2007ee0 <___vfiprintf_internal_r+0x7d0>
 2008048:	a880040c 	andi	r2,r21,16
 200804c:	1001dd26 	beq	r2,zero,20087c4 <___vfiprintf_internal_r+0x10b4>
 2008050:	1d800017 	ldw	r22,0(r3)
 2008054:	d8802217 	ldw	r2,136(sp)
 2008058:	b01bd7fa 	srai	r13,r22,31
 200805c:	10800104 	addi	r2,r2,4
 2008060:	d8802215 	stw	r2,136(sp)
 2008064:	6805883a 	mov	r2,r13
 2008068:	003fa306 	br	2007ef8 <___vfiprintf_internal_r+0x7e8>
 200806c:	00808074 	movhi	r2,513
 2008070:	10bbf204 	addi	r2,r2,-4152
 2008074:	d8802615 	stw	r2,152(sp)
 2008078:	d9c01d85 	stb	r7,118(sp)
 200807c:	a880080c 	andi	r2,r21,32
 2008080:	10004726 	beq	r2,zero,20081a0 <___vfiprintf_internal_r+0xa90>
 2008084:	d9002217 	ldw	r4,136(sp)
 2008088:	25800017 	ldw	r22,0(r4)
 200808c:	23400117 	ldw	r13,4(r4)
 2008090:	21000204 	addi	r4,r4,8
 2008094:	d9002215 	stw	r4,136(sp)
 2008098:	a880004c 	andi	r2,r21,1
 200809c:	10014e26 	beq	r2,zero,20085d8 <___vfiprintf_internal_r+0xec8>
 20080a0:	b348b03a 	or	r4,r22,r13
 20080a4:	20019c26 	beq	r4,zero,2008718 <___vfiprintf_internal_r+0x1008>
 20080a8:	00800c04 	movi	r2,48
 20080ac:	d8801d05 	stb	r2,116(sp)
 20080b0:	d8c01d45 	stb	r3,117(sp)
 20080b4:	ad400094 	ori	r21,r21,2
 20080b8:	00800084 	movi	r2,2
 20080bc:	003e7206 	br	2007a88 <___vfiprintf_internal_r+0x378>
 20080c0:	d8c02217 	ldw	r3,136(sp)
 20080c4:	d8001d85 	stb	zero,118(sp)
 20080c8:	1d000017 	ldw	r20,0(r3)
 20080cc:	1d800104 	addi	r22,r3,4
 20080d0:	a0021c26 	beq	r20,zero,2008944 <___vfiprintf_internal_r+0x1234>
 20080d4:	a009883a 	mov	r4,r20
 20080d8:	48020016 	blt	r9,zero,20088dc <___vfiprintf_internal_r+0x11cc>
 20080dc:	480d883a 	mov	r6,r9
 20080e0:	000b883a 	mov	r5,zero
 20080e4:	da002a15 	stw	r8,168(sp)
 20080e8:	da402b15 	stw	r9,172(sp)
 20080ec:	20059ac0 	call	20059ac <memchr>
 20080f0:	da002a17 	ldw	r8,168(sp)
 20080f4:	da402b17 	ldw	r9,172(sp)
 20080f8:	10022226 	beq	r2,zero,2008984 <___vfiprintf_internal_r+0x1274>
 20080fc:	1527c83a 	sub	r19,r2,r20
 2008100:	4cc1c916 	blt	r9,r19,2008828 <___vfiprintf_internal_r+0x1118>
 2008104:	db801d83 	ldbu	r14,118(sp)
 2008108:	dd802215 	stw	r22,136(sp)
 200810c:	0013883a 	mov	r9,zero
 2008110:	003e7906 	br	2007af8 <___vfiprintf_internal_r+0x3e8>
 2008114:	ad401014 	ori	r21,r21,64
 2008118:	8005883a 	mov	r2,r16
 200811c:	80c00007 	ldb	r3,0(r16)
 2008120:	003dd906 	br	2007888 <___vfiprintf_internal_r+0x178>
 2008124:	80c00007 	ldb	r3,0(r16)
 2008128:	8005883a 	mov	r2,r16
 200812c:	1b01e326 	beq	r3,r12,20088bc <___vfiprintf_internal_r+0x11ac>
 2008130:	ad400414 	ori	r21,r21,16
 2008134:	003dd406 	br	2007888 <___vfiprintf_internal_r+0x178>
 2008138:	d9002217 	ldw	r4,136(sp)
 200813c:	00800c04 	movi	r2,48
 2008140:	d8801d05 	stb	r2,116(sp)
 2008144:	25800017 	ldw	r22,0(r4)
 2008148:	00801e04 	movi	r2,120
 200814c:	d8801d45 	stb	r2,117(sp)
 2008150:	00808074 	movhi	r2,513
 2008154:	21000104 	addi	r4,r4,4
 2008158:	10bbf704 	addi	r2,r2,-4132
 200815c:	d9002215 	stw	r4,136(sp)
 2008160:	d8802615 	stw	r2,152(sp)
 2008164:	001b883a 	mov	r13,zero
 2008168:	ad400094 	ori	r21,r21,2
 200816c:	00800084 	movi	r2,2
 2008170:	b009883a 	mov	r4,r22
 2008174:	003e4406 	br	2007a88 <___vfiprintf_internal_r+0x378>
 2008178:	ad400814 	ori	r21,r21,32
 200817c:	8005883a 	mov	r2,r16
 2008180:	80c00007 	ldb	r3,0(r16)
 2008184:	003dc006 	br	2007888 <___vfiprintf_internal_r+0x178>
 2008188:	00808074 	movhi	r2,513
 200818c:	10bbf704 	addi	r2,r2,-4132
 2008190:	d8802615 	stw	r2,152(sp)
 2008194:	d9c01d85 	stb	r7,118(sp)
 2008198:	a880080c 	andi	r2,r21,32
 200819c:	103fb91e 	bne	r2,zero,2008084 <___vfiprintf_internal_r+0x974>
 20081a0:	a880040c 	andi	r2,r21,16
 20081a4:	10010f1e 	bne	r2,zero,20085e4 <___vfiprintf_internal_r+0xed4>
 20081a8:	a880100c 	andi	r2,r21,64
 20081ac:	10010d26 	beq	r2,zero,20085e4 <___vfiprintf_internal_r+0xed4>
 20081b0:	d9002217 	ldw	r4,136(sp)
 20081b4:	001b883a 	mov	r13,zero
 20081b8:	2580000b 	ldhu	r22,0(r4)
 20081bc:	21000104 	addi	r4,r4,4
 20081c0:	d9002215 	stw	r4,136(sp)
 20081c4:	003fb406 	br	2008098 <___vfiprintf_internal_r+0x988>
 20081c8:	d9002217 	ldw	r4,136(sp)
 20081cc:	00800044 	movi	r2,1
 20081d0:	25800017 	ldw	r22,0(r4)
 20081d4:	23400117 	ldw	r13,4(r4)
 20081d8:	21000204 	addi	r4,r4,8
 20081dc:	d9002215 	stw	r4,136(sp)
 20081e0:	b348b03a 	or	r4,r22,r13
 20081e4:	003e2806 	br	2007a88 <___vfiprintf_internal_r+0x378>
 20081e8:	d9c01d85 	stb	r7,118(sp)
 20081ec:	1801ab26 	beq	r3,zero,200889c <___vfiprintf_internal_r+0x118c>
 20081f0:	04400044 	movi	r17,1
 20081f4:	d8c01005 	stb	r3,64(sp)
 20081f8:	d8001d85 	stb	zero,118(sp)
 20081fc:	8827883a 	mov	r19,r17
 2008200:	dd001004 	addi	r20,sp,64
 2008204:	003f8a06 	br	2008030 <___vfiprintf_internal_r+0x920>
 2008208:	d9002017 	ldw	r4,128(sp)
 200820c:	d9402117 	ldw	r5,132(sp)
 2008210:	d9801a04 	addi	r6,sp,104
 2008214:	d9c02b15 	stw	r7,172(sp)
 2008218:	dbc02a15 	stw	r15,168(sp)
 200821c:	20075fc0 	call	20075fc <__sprint_r.part.0>
 2008220:	d9c02b17 	ldw	r7,172(sp)
 2008224:	dbc02a17 	ldw	r15,168(sp)
 2008228:	1000631e 	bne	r2,zero,20083b8 <___vfiprintf_internal_r+0xca8>
 200822c:	d9801b17 	ldw	r6,108(sp)
 2008230:	d8801c17 	ldw	r2,112(sp)
 2008234:	d811883a 	mov	r8,sp
 2008238:	31400044 	addi	r5,r6,1
 200823c:	003e4d06 	br	2007b74 <___vfiprintf_internal_r+0x464>
 2008240:	d9401b17 	ldw	r5,108(sp)
 2008244:	d8801c17 	ldw	r2,112(sp)
 2008248:	29000044 	addi	r4,r5,1
 200824c:	d8c01d87 	ldb	r3,118(sp)
 2008250:	183e6726 	beq	r3,zero,2007bf0 <___vfiprintf_internal_r+0x4e0>
 2008254:	00c00044 	movi	r3,1
 2008258:	d9401d84 	addi	r5,sp,118
 200825c:	10c5883a 	add	r2,r2,r3
 2008260:	41400015 	stw	r5,0(r8)
 2008264:	40c00115 	stw	r3,4(r8)
 2008268:	d8801c15 	stw	r2,112(sp)
 200826c:	d9001b15 	stw	r4,108(sp)
 2008270:	014001c4 	movi	r5,7
 2008274:	2900ab16 	blt	r5,r4,2008524 <___vfiprintf_internal_r+0xe14>
 2008278:	200b883a 	mov	r5,r4
 200827c:	42000204 	addi	r8,r8,8
 2008280:	21000044 	addi	r4,r4,1
 2008284:	003e5a06 	br	2007bf0 <___vfiprintf_internal_r+0x4e0>
 2008288:	d9002017 	ldw	r4,128(sp)
 200828c:	d9402117 	ldw	r5,132(sp)
 2008290:	d9801a04 	addi	r6,sp,104
 2008294:	d9c02b15 	stw	r7,172(sp)
 2008298:	db402a15 	stw	r13,168(sp)
 200829c:	20075fc0 	call	20075fc <__sprint_r.part.0>
 20082a0:	d9c02b17 	ldw	r7,172(sp)
 20082a4:	db402a17 	ldw	r13,168(sp)
 20082a8:	1000431e 	bne	r2,zero,20083b8 <___vfiprintf_internal_r+0xca8>
 20082ac:	d9401b17 	ldw	r5,108(sp)
 20082b0:	d8801c17 	ldw	r2,112(sp)
 20082b4:	d811883a 	mov	r8,sp
 20082b8:	29000044 	addi	r4,r5,1
 20082bc:	003e6706 	br	2007c5c <___vfiprintf_internal_r+0x54c>
 20082c0:	10803fcc 	andi	r2,r2,255
 20082c4:	00c00044 	movi	r3,1
 20082c8:	10fdfa1e 	bne	r2,r3,2007ab4 <___vfiprintf_internal_r+0x3a4>
 20082cc:	6800021e 	bne	r13,zero,20082d8 <___vfiprintf_internal_r+0xbc8>
 20082d0:	00800244 	movi	r2,9
 20082d4:	1580222e 	bgeu	r2,r22,2008360 <___vfiprintf_internal_r+0xc50>
 20082d8:	dc802415 	stw	r18,144(sp)
 20082dc:	dc002515 	stw	r16,148(sp)
 20082e0:	dc401a04 	addi	r17,sp,104
 20082e4:	b021883a 	mov	r16,r22
 20082e8:	4827883a 	mov	r19,r9
 20082ec:	4029883a 	mov	r20,r8
 20082f0:	702d883a 	mov	r22,r14
 20082f4:	6825883a 	mov	r18,r13
 20082f8:	8009883a 	mov	r4,r16
 20082fc:	900b883a 	mov	r5,r18
 2008300:	01800284 	movi	r6,10
 2008304:	000f883a 	mov	r7,zero
 2008308:	20099780 	call	2009978 <__umoddi3>
 200830c:	10800c04 	addi	r2,r2,48
 2008310:	8c7fffc4 	addi	r17,r17,-1
 2008314:	8009883a 	mov	r4,r16
 2008318:	900b883a 	mov	r5,r18
 200831c:	01800284 	movi	r6,10
 2008320:	000f883a 	mov	r7,zero
 2008324:	88800005 	stb	r2,0(r17)
 2008328:	20093b80 	call	20093b8 <__udivdi3>
 200832c:	1021883a 	mov	r16,r2
 2008330:	10c4b03a 	or	r2,r2,r3
 2008334:	1825883a 	mov	r18,r3
 2008338:	103fef1e 	bne	r2,zero,20082f8 <___vfiprintf_internal_r+0xbe8>
 200833c:	dc802417 	ldw	r18,144(sp)
 2008340:	dc002517 	ldw	r16,148(sp)
 2008344:	a011883a 	mov	r8,r20
 2008348:	9813883a 	mov	r9,r19
 200834c:	b01d883a 	mov	r14,r22
 2008350:	8829883a 	mov	r20,r17
 2008354:	d8c01e17 	ldw	r3,120(sp)
 2008358:	1d27c83a 	sub	r19,r3,r20
 200835c:	003de606 	br	2007af8 <___vfiprintf_internal_r+0x3e8>
 2008360:	b5800c04 	addi	r22,r22,48
 2008364:	dd8019c5 	stb	r22,103(sp)
 2008368:	dcc02717 	ldw	r19,156(sp)
 200836c:	dd0019c4 	addi	r20,sp,103
 2008370:	003de106 	br	2007af8 <___vfiprintf_internal_r+0x3e8>
 2008374:	d9002017 	ldw	r4,128(sp)
 2008378:	d9402117 	ldw	r5,132(sp)
 200837c:	d9801a04 	addi	r6,sp,104
 2008380:	20075fc0 	call	20075fc <__sprint_r.part.0>
 2008384:	10000c1e 	bne	r2,zero,20083b8 <___vfiprintf_internal_r+0xca8>
 2008388:	d8801c17 	ldw	r2,112(sp)
 200838c:	8c80010e 	bge	r17,r18,2008394 <___vfiprintf_internal_r+0xc84>
 2008390:	9023883a 	mov	r17,r18
 2008394:	d8c02317 	ldw	r3,140(sp)
 2008398:	1c47883a 	add	r3,r3,r17
 200839c:	d8c02315 	stw	r3,140(sp)
 20083a0:	103e7e26 	beq	r2,zero,2007d9c <___vfiprintf_internal_r+0x68c>
 20083a4:	d9002017 	ldw	r4,128(sp)
 20083a8:	d9402117 	ldw	r5,132(sp)
 20083ac:	d9801a04 	addi	r6,sp,104
 20083b0:	20075fc0 	call	20075fc <__sprint_r.part.0>
 20083b4:	103e7926 	beq	r2,zero,2007d9c <___vfiprintf_internal_r+0x68c>
 20083b8:	dd402117 	ldw	r21,132(sp)
 20083bc:	a880030b 	ldhu	r2,12(r21)
 20083c0:	1080100c 	andi	r2,r2,64
 20083c4:	103e881e 	bne	r2,zero,2007de8 <___vfiprintf_internal_r+0x6d8>
 20083c8:	d8802317 	ldw	r2,140(sp)
 20083cc:	003e8706 	br	2007dec <___vfiprintf_internal_r+0x6dc>
 20083d0:	d9402117 	ldw	r5,132(sp)
 20083d4:	b009883a 	mov	r4,r22
 20083d8:	d9801a04 	addi	r6,sp,104
 20083dc:	20075fc0 	call	20075fc <__sprint_r.part.0>
 20083e0:	103ff51e 	bne	r2,zero,20083b8 <___vfiprintf_internal_r+0xca8>
 20083e4:	d9001b17 	ldw	r4,108(sp)
 20083e8:	d8801c17 	ldw	r2,112(sp)
 20083ec:	d811883a 	mov	r8,sp
 20083f0:	21400044 	addi	r5,r4,1
 20083f4:	003e4d06 	br	2007d2c <___vfiprintf_internal_r+0x61c>
 20083f8:	1000aa1e 	bne	r2,zero,20086a4 <___vfiprintf_internal_r+0xf94>
 20083fc:	00c00044 	movi	r3,1
 2008400:	9805883a 	mov	r2,r19
 2008404:	dd000015 	stw	r20,0(sp)
 2008408:	dcc00115 	stw	r19,4(sp)
 200840c:	dcc01c15 	stw	r19,112(sp)
 2008410:	d8c01b15 	stw	r3,108(sp)
 2008414:	d811883a 	mov	r8,sp
 2008418:	42000204 	addi	r8,r8,8
 200841c:	aac0010c 	andi	r11,r21,4
 2008420:	583fda26 	beq	r11,zero,200838c <___vfiprintf_internal_r+0xc7c>
 2008424:	9467c83a 	sub	r19,r18,r17
 2008428:	04fe3316 	blt	zero,r19,2007cf8 <___vfiprintf_internal_r+0x5e8>
 200842c:	003fd706 	br	200838c <___vfiprintf_internal_r+0xc7c>
 2008430:	946dc83a 	sub	r22,r18,r17
 2008434:	05bdfd0e 	bge	zero,r22,2007c2c <___vfiprintf_internal_r+0x51c>
 2008438:	00c08074 	movhi	r3,513
 200843c:	18fc5804 	addi	r3,r3,-3744
 2008440:	01c00404 	movi	r7,16
 2008444:	d8c02415 	stw	r3,144(sp)
 2008448:	3d81530e 	bge	r7,r22,2008998 <___vfiprintf_internal_r+0x1288>
 200844c:	8007883a 	mov	r3,r16
 2008450:	034001c4 	movi	r13,7
 2008454:	b021883a 	mov	r16,r22
 2008458:	da402515 	stw	r9,148(sp)
 200845c:	182d883a 	mov	r22,r3
 2008460:	00000506 	br	2008478 <___vfiprintf_internal_r+0xd68>
 2008464:	29800084 	addi	r6,r5,2
 2008468:	42000204 	addi	r8,r8,8
 200846c:	180b883a 	mov	r5,r3
 2008470:	843ffc04 	addi	r16,r16,-16
 2008474:	3c000d0e 	bge	r7,r16,20084ac <___vfiprintf_internal_r+0xd9c>
 2008478:	10800404 	addi	r2,r2,16
 200847c:	28c00044 	addi	r3,r5,1
 2008480:	45c00015 	stw	r23,0(r8)
 2008484:	41c00115 	stw	r7,4(r8)
 2008488:	d8801c15 	stw	r2,112(sp)
 200848c:	d8c01b15 	stw	r3,108(sp)
 2008490:	68fff40e 	bge	r13,r3,2008464 <___vfiprintf_internal_r+0xd54>
 2008494:	1000151e 	bne	r2,zero,20084ec <___vfiprintf_internal_r+0xddc>
 2008498:	843ffc04 	addi	r16,r16,-16
 200849c:	01800044 	movi	r6,1
 20084a0:	000b883a 	mov	r5,zero
 20084a4:	d811883a 	mov	r8,sp
 20084a8:	3c3ff316 	blt	r7,r16,2008478 <___vfiprintf_internal_r+0xd68>
 20084ac:	da402517 	ldw	r9,148(sp)
 20084b0:	b007883a 	mov	r3,r22
 20084b4:	802d883a 	mov	r22,r16
 20084b8:	1821883a 	mov	r16,r3
 20084bc:	d8c02417 	ldw	r3,144(sp)
 20084c0:	1585883a 	add	r2,r2,r22
 20084c4:	45800115 	stw	r22,4(r8)
 20084c8:	40c00015 	stw	r3,0(r8)
 20084cc:	d8801c15 	stw	r2,112(sp)
 20084d0:	d9801b15 	stw	r6,108(sp)
 20084d4:	00c001c4 	movi	r3,7
 20084d8:	19806d16 	blt	r3,r6,2008690 <___vfiprintf_internal_r+0xf80>
 20084dc:	42000204 	addi	r8,r8,8
 20084e0:	31000044 	addi	r4,r6,1
 20084e4:	300b883a 	mov	r5,r6
 20084e8:	003dd006 	br	2007c2c <___vfiprintf_internal_r+0x51c>
 20084ec:	d9002017 	ldw	r4,128(sp)
 20084f0:	d9402117 	ldw	r5,132(sp)
 20084f4:	d9801a04 	addi	r6,sp,104
 20084f8:	d9c02b15 	stw	r7,172(sp)
 20084fc:	db402a15 	stw	r13,168(sp)
 2008500:	20075fc0 	call	20075fc <__sprint_r.part.0>
 2008504:	d9c02b17 	ldw	r7,172(sp)
 2008508:	db402a17 	ldw	r13,168(sp)
 200850c:	103faa1e 	bne	r2,zero,20083b8 <___vfiprintf_internal_r+0xca8>
 2008510:	d9401b17 	ldw	r5,108(sp)
 2008514:	d8801c17 	ldw	r2,112(sp)
 2008518:	d811883a 	mov	r8,sp
 200851c:	29800044 	addi	r6,r5,1
 2008520:	003fd306 	br	2008470 <___vfiprintf_internal_r+0xd60>
 2008524:	1000401e 	bne	r2,zero,2008628 <___vfiprintf_internal_r+0xf18>
 2008528:	68003b26 	beq	r13,zero,2008618 <___vfiprintf_internal_r+0xf08>
 200852c:	d9001d04 	addi	r4,sp,116
 2008530:	00800084 	movi	r2,2
 2008534:	d9000015 	stw	r4,0(sp)
 2008538:	d8800115 	stw	r2,4(sp)
 200853c:	1809883a 	mov	r4,r3
 2008540:	d811883a 	mov	r8,sp
 2008544:	003db406 	br	2007c18 <___vfiprintf_internal_r+0x508>
 2008548:	1000451e 	bne	r2,zero,2008660 <___vfiprintf_internal_r+0xf50>
 200854c:	01000044 	movi	r4,1
 2008550:	000b883a 	mov	r5,zero
 2008554:	d811883a 	mov	r8,sp
 2008558:	003db206 	br	2007c24 <___vfiprintf_internal_r+0x514>
 200855c:	10803fcc 	andi	r2,r2,255
 2008560:	1000071e 	bne	r2,zero,2008580 <___vfiprintf_internal_r+0xe70>
 2008564:	a880004c 	andi	r2,r21,1
 2008568:	10000526 	beq	r2,zero,2008580 <___vfiprintf_internal_r+0xe70>
 200856c:	00800c04 	movi	r2,48
 2008570:	d88019c5 	stb	r2,103(sp)
 2008574:	dcc02717 	ldw	r19,156(sp)
 2008578:	dd0019c4 	addi	r20,sp,103
 200857c:	003d5e06 	br	2007af8 <___vfiprintf_internal_r+0x3e8>
 2008580:	dd001a04 	addi	r20,sp,104
 2008584:	003d5c06 	br	2007af8 <___vfiprintf_internal_r+0x3e8>
 2008588:	1000971e 	bne	r2,zero,20087e8 <___vfiprintf_internal_r+0x10d8>
 200858c:	d8c01d87 	ldb	r3,118(sp)
 2008590:	18005826 	beq	r3,zero,20086f4 <___vfiprintf_internal_r+0xfe4>
 2008594:	00800044 	movi	r2,1
 2008598:	d8c01d84 	addi	r3,sp,118
 200859c:	1009883a 	mov	r4,r2
 20085a0:	d8c00015 	stw	r3,0(sp)
 20085a4:	d8800115 	stw	r2,4(sp)
 20085a8:	d811883a 	mov	r8,sp
 20085ac:	003f3206 	br	2008278 <___vfiprintf_internal_r+0xb68>
 20085b0:	8023883a 	mov	r17,r16
 20085b4:	003ca706 	br	2007854 <___vfiprintf_internal_r+0x144>
 20085b8:	d9002017 	ldw	r4,128(sp)
 20085bc:	d9402117 	ldw	r5,132(sp)
 20085c0:	d9801a04 	addi	r6,sp,104
 20085c4:	20075fc0 	call	20075fc <__sprint_r.part.0>
 20085c8:	103f7b1e 	bne	r2,zero,20083b8 <___vfiprintf_internal_r+0xca8>
 20085cc:	d8801c17 	ldw	r2,112(sp)
 20085d0:	d811883a 	mov	r8,sp
 20085d4:	003f9106 	br	200841c <___vfiprintf_internal_r+0xd0c>
 20085d8:	00800084 	movi	r2,2
 20085dc:	b348b03a 	or	r4,r22,r13
 20085e0:	003d2906 	br	2007a88 <___vfiprintf_internal_r+0x378>
 20085e4:	d8802217 	ldw	r2,136(sp)
 20085e8:	001b883a 	mov	r13,zero
 20085ec:	15800017 	ldw	r22,0(r2)
 20085f0:	10800104 	addi	r2,r2,4
 20085f4:	d8802215 	stw	r2,136(sp)
 20085f8:	003ea706 	br	2008098 <___vfiprintf_internal_r+0x988>
 20085fc:	d9002017 	ldw	r4,128(sp)
 2008600:	d9402117 	ldw	r5,132(sp)
 2008604:	d9801a04 	addi	r6,sp,104
 2008608:	20075fc0 	call	20075fc <__sprint_r.part.0>
 200860c:	103f6a1e 	bne	r2,zero,20083b8 <___vfiprintf_internal_r+0xca8>
 2008610:	d811883a 	mov	r8,sp
 2008614:	003cff06 	br	2007a14 <___vfiprintf_internal_r+0x304>
 2008618:	000b883a 	mov	r5,zero
 200861c:	1809883a 	mov	r4,r3
 2008620:	d811883a 	mov	r8,sp
 2008624:	003d7f06 	br	2007c24 <___vfiprintf_internal_r+0x514>
 2008628:	d9002017 	ldw	r4,128(sp)
 200862c:	d9402117 	ldw	r5,132(sp)
 2008630:	d9801a04 	addi	r6,sp,104
 2008634:	da402b15 	stw	r9,172(sp)
 2008638:	db402a15 	stw	r13,168(sp)
 200863c:	20075fc0 	call	20075fc <__sprint_r.part.0>
 2008640:	da402b17 	ldw	r9,172(sp)
 2008644:	db402a17 	ldw	r13,168(sp)
 2008648:	103f5b1e 	bne	r2,zero,20083b8 <___vfiprintf_internal_r+0xca8>
 200864c:	d9401b17 	ldw	r5,108(sp)
 2008650:	d8801c17 	ldw	r2,112(sp)
 2008654:	d811883a 	mov	r8,sp
 2008658:	29000044 	addi	r4,r5,1
 200865c:	003d6406 	br	2007bf0 <___vfiprintf_internal_r+0x4e0>
 2008660:	d9002017 	ldw	r4,128(sp)
 2008664:	d9402117 	ldw	r5,132(sp)
 2008668:	d9801a04 	addi	r6,sp,104
 200866c:	da402b15 	stw	r9,172(sp)
 2008670:	20075fc0 	call	20075fc <__sprint_r.part.0>
 2008674:	da402b17 	ldw	r9,172(sp)
 2008678:	103f4f1e 	bne	r2,zero,20083b8 <___vfiprintf_internal_r+0xca8>
 200867c:	d9401b17 	ldw	r5,108(sp)
 2008680:	d8801c17 	ldw	r2,112(sp)
 2008684:	d811883a 	mov	r8,sp
 2008688:	29000044 	addi	r4,r5,1
 200868c:	003d6506 	br	2007c24 <___vfiprintf_internal_r+0x514>
 2008690:	10009a1e 	bne	r2,zero,20088fc <___vfiprintf_internal_r+0x11ec>
 2008694:	01000044 	movi	r4,1
 2008698:	000b883a 	mov	r5,zero
 200869c:	d811883a 	mov	r8,sp
 20086a0:	003d6206 	br	2007c2c <___vfiprintf_internal_r+0x51c>
 20086a4:	d9002017 	ldw	r4,128(sp)
 20086a8:	d9402117 	ldw	r5,132(sp)
 20086ac:	d9801a04 	addi	r6,sp,104
 20086b0:	20075fc0 	call	20075fc <__sprint_r.part.0>
 20086b4:	103f401e 	bne	r2,zero,20083b8 <___vfiprintf_internal_r+0xca8>
 20086b8:	d9001b17 	ldw	r4,108(sp)
 20086bc:	d8801c17 	ldw	r2,112(sp)
 20086c0:	d811883a 	mov	r8,sp
 20086c4:	21000044 	addi	r4,r4,1
 20086c8:	003d7d06 	br	2007cc0 <___vfiprintf_internal_r+0x5b0>
 20086cc:	05adc83a 	sub	r22,zero,r22
 20086d0:	b004c03a 	cmpne	r2,r22,zero
 20086d4:	035bc83a 	sub	r13,zero,r13
 20086d8:	689bc83a 	sub	r13,r13,r2
 20086dc:	03800b44 	movi	r14,45
 20086e0:	db801d85 	stb	r14,118(sp)
 20086e4:	4827883a 	mov	r19,r9
 20086e8:	00800044 	movi	r2,1
 20086ec:	b348b03a 	or	r4,r22,r13
 20086f0:	003ce806 	br	2007a94 <___vfiprintf_internal_r+0x384>
 20086f4:	000b883a 	mov	r5,zero
 20086f8:	01000044 	movi	r4,1
 20086fc:	d811883a 	mov	r8,sp
 2008700:	683d4826 	beq	r13,zero,2007c24 <___vfiprintf_internal_r+0x514>
 2008704:	00800084 	movi	r2,2
 2008708:	d8c01d04 	addi	r3,sp,116
 200870c:	d8c00015 	stw	r3,0(sp)
 2008710:	d8800115 	stw	r2,4(sp)
 2008714:	003d4006 	br	2007c18 <___vfiprintf_internal_r+0x508>
 2008718:	00800084 	movi	r2,2
 200871c:	003cda06 	br	2007a88 <___vfiprintf_internal_r+0x378>
 2008720:	a880100c 	andi	r2,r21,64
 2008724:	10004226 	beq	r2,zero,2008830 <___vfiprintf_internal_r+0x1120>
 2008728:	d8802217 	ldw	r2,136(sp)
 200872c:	001b883a 	mov	r13,zero
 2008730:	1580000b 	ldhu	r22,0(r2)
 2008734:	10800104 	addi	r2,r2,4
 2008738:	d8802215 	stw	r2,136(sp)
 200873c:	b009883a 	mov	r4,r22
 2008740:	0005883a 	mov	r2,zero
 2008744:	003cd006 	br	2007a88 <___vfiprintf_internal_r+0x378>
 2008748:	80c00007 	ldb	r3,0(r16)
 200874c:	8005883a 	mov	r2,r16
 2008750:	003c4d06 	br	2007888 <___vfiprintf_internal_r+0x178>
 2008754:	a880100c 	andi	r2,r21,64
 2008758:	10004426 	beq	r2,zero,200886c <___vfiprintf_internal_r+0x115c>
 200875c:	d8c02217 	ldw	r3,136(sp)
 2008760:	001b883a 	mov	r13,zero
 2008764:	00800044 	movi	r2,1
 2008768:	1d80000b 	ldhu	r22,0(r3)
 200876c:	18c00104 	addi	r3,r3,4
 2008770:	d8c02215 	stw	r3,136(sp)
 2008774:	b009883a 	mov	r4,r22
 2008778:	003cc306 	br	2007a88 <___vfiprintf_internal_r+0x378>
 200877c:	a880040c 	andi	r2,r21,16
 2008780:	1000091e 	bne	r2,zero,20087a8 <___vfiprintf_internal_r+0x1098>
 2008784:	aac0100c 	andi	r11,r21,64
 2008788:	58000726 	beq	r11,zero,20087a8 <___vfiprintf_internal_r+0x1098>
 200878c:	d8c02217 	ldw	r3,136(sp)
 2008790:	d9002317 	ldw	r4,140(sp)
 2008794:	18800017 	ldw	r2,0(r3)
 2008798:	18c00104 	addi	r3,r3,4
 200879c:	d8c02215 	stw	r3,136(sp)
 20087a0:	1100000d 	sth	r4,0(r2)
 20087a4:	003c0e06 	br	20077e0 <___vfiprintf_internal_r+0xd0>
 20087a8:	d8c02217 	ldw	r3,136(sp)
 20087ac:	d9002317 	ldw	r4,140(sp)
 20087b0:	18800017 	ldw	r2,0(r3)
 20087b4:	18c00104 	addi	r3,r3,4
 20087b8:	d8c02215 	stw	r3,136(sp)
 20087bc:	11000015 	stw	r4,0(r2)
 20087c0:	003c0706 	br	20077e0 <___vfiprintf_internal_r+0xd0>
 20087c4:	a880100c 	andi	r2,r21,64
 20087c8:	10002126 	beq	r2,zero,2008850 <___vfiprintf_internal_r+0x1140>
 20087cc:	1d80000f 	ldh	r22,0(r3)
 20087d0:	d8c02217 	ldw	r3,136(sp)
 20087d4:	b01bd7fa 	srai	r13,r22,31
 20087d8:	18c00104 	addi	r3,r3,4
 20087dc:	d8c02215 	stw	r3,136(sp)
 20087e0:	6805883a 	mov	r2,r13
 20087e4:	003dc406 	br	2007ef8 <___vfiprintf_internal_r+0x7e8>
 20087e8:	d9002017 	ldw	r4,128(sp)
 20087ec:	d9402117 	ldw	r5,132(sp)
 20087f0:	d9801a04 	addi	r6,sp,104
 20087f4:	da402b15 	stw	r9,172(sp)
 20087f8:	db402a15 	stw	r13,168(sp)
 20087fc:	20075fc0 	call	20075fc <__sprint_r.part.0>
 2008800:	da402b17 	ldw	r9,172(sp)
 2008804:	db402a17 	ldw	r13,168(sp)
 2008808:	103eeb1e 	bne	r2,zero,20083b8 <___vfiprintf_internal_r+0xca8>
 200880c:	d9401b17 	ldw	r5,108(sp)
 2008810:	d8801c17 	ldw	r2,112(sp)
 2008814:	d811883a 	mov	r8,sp
 2008818:	29000044 	addi	r4,r5,1
 200881c:	003e8b06 	br	200824c <___vfiprintf_internal_r+0xb3c>
 2008820:	9023883a 	mov	r17,r18
 2008824:	003d5a06 	br	2007d90 <___vfiprintf_internal_r+0x680>
 2008828:	4827883a 	mov	r19,r9
 200882c:	003e3506 	br	2008104 <___vfiprintf_internal_r+0x9f4>
 2008830:	d8c02217 	ldw	r3,136(sp)
 2008834:	001b883a 	mov	r13,zero
 2008838:	0005883a 	mov	r2,zero
 200883c:	1d800017 	ldw	r22,0(r3)
 2008840:	18c00104 	addi	r3,r3,4
 2008844:	d8c02215 	stw	r3,136(sp)
 2008848:	b009883a 	mov	r4,r22
 200884c:	003c8e06 	br	2007a88 <___vfiprintf_internal_r+0x378>
 2008850:	1d800017 	ldw	r22,0(r3)
 2008854:	d9002217 	ldw	r4,136(sp)
 2008858:	b01bd7fa 	srai	r13,r22,31
 200885c:	21000104 	addi	r4,r4,4
 2008860:	d9002215 	stw	r4,136(sp)
 2008864:	6805883a 	mov	r2,r13
 2008868:	003da306 	br	2007ef8 <___vfiprintf_internal_r+0x7e8>
 200886c:	d9002217 	ldw	r4,136(sp)
 2008870:	001b883a 	mov	r13,zero
 2008874:	00800044 	movi	r2,1
 2008878:	25800017 	ldw	r22,0(r4)
 200887c:	21000104 	addi	r4,r4,4
 2008880:	d9002215 	stw	r4,136(sp)
 2008884:	b009883a 	mov	r4,r22
 2008888:	003c7f06 	br	2007a88 <___vfiprintf_internal_r+0x378>
 200888c:	00c08074 	movhi	r3,513
 2008890:	18fc5804 	addi	r3,r3,-3744
 2008894:	d8c02415 	stw	r3,144(sp)
 2008898:	003cff06 	br	2007c98 <___vfiprintf_internal_r+0x588>
 200889c:	d8801c17 	ldw	r2,112(sp)
 20088a0:	dd402117 	ldw	r21,132(sp)
 20088a4:	103ec526 	beq	r2,zero,20083bc <___vfiprintf_internal_r+0xcac>
 20088a8:	d9002017 	ldw	r4,128(sp)
 20088ac:	a80b883a 	mov	r5,r21
 20088b0:	d9801a04 	addi	r6,sp,104
 20088b4:	20075fc0 	call	20075fc <__sprint_r.part.0>
 20088b8:	003ec006 	br	20083bc <___vfiprintf_internal_r+0xcac>
 20088bc:	80800044 	addi	r2,r16,1
 20088c0:	ad400814 	ori	r21,r21,32
 20088c4:	80c00047 	ldb	r3,1(r16)
 20088c8:	003bef06 	br	2007888 <___vfiprintf_internal_r+0x178>
 20088cc:	04a5c83a 	sub	r18,zero,r18
 20088d0:	8005883a 	mov	r2,r16
 20088d4:	d8c02215 	stw	r3,136(sp)
 20088d8:	003d5306 	br	2007e28 <___vfiprintf_internal_r+0x718>
 20088dc:	da002a15 	stw	r8,168(sp)
 20088e0:	20003980 	call	2000398 <strlen>
 20088e4:	1027883a 	mov	r19,r2
 20088e8:	db801d83 	ldbu	r14,118(sp)
 20088ec:	dd802215 	stw	r22,136(sp)
 20088f0:	0013883a 	mov	r9,zero
 20088f4:	da002a17 	ldw	r8,168(sp)
 20088f8:	003c7f06 	br	2007af8 <___vfiprintf_internal_r+0x3e8>
 20088fc:	d9002017 	ldw	r4,128(sp)
 2008900:	d9402117 	ldw	r5,132(sp)
 2008904:	d9801a04 	addi	r6,sp,104
 2008908:	da402b15 	stw	r9,172(sp)
 200890c:	20075fc0 	call	20075fc <__sprint_r.part.0>
 2008910:	da402b17 	ldw	r9,172(sp)
 2008914:	103ea81e 	bne	r2,zero,20083b8 <___vfiprintf_internal_r+0xca8>
 2008918:	d9401b17 	ldw	r5,108(sp)
 200891c:	d8801c17 	ldw	r2,112(sp)
 2008920:	d811883a 	mov	r8,sp
 2008924:	29000044 	addi	r4,r5,1
 2008928:	003cc006 	br	2007c2c <___vfiprintf_internal_r+0x51c>
 200892c:	d9401b17 	ldw	r5,108(sp)
 2008930:	01008074 	movhi	r4,513
 2008934:	213c5c04 	addi	r4,r4,-3728
 2008938:	d9002415 	stw	r4,144(sp)
 200893c:	29400044 	addi	r5,r5,1
 2008940:	003c9f06 	br	2007bc0 <___vfiprintf_internal_r+0x4b0>
 2008944:	00800184 	movi	r2,6
 2008948:	1240012e 	bgeu	r2,r9,2008950 <___vfiprintf_internal_r+0x1240>
 200894c:	1013883a 	mov	r9,r2
 2008950:	4827883a 	mov	r19,r9
 2008954:	4823883a 	mov	r17,r9
 2008958:	48001116 	blt	r9,zero,20089a0 <___vfiprintf_internal_r+0x1290>
 200895c:	05008074 	movhi	r20,513
 2008960:	dd802215 	stw	r22,136(sp)
 2008964:	a53bfc04 	addi	r20,r20,-4112
 2008968:	003db106 	br	2008030 <___vfiprintf_internal_r+0x920>
 200896c:	d9401b17 	ldw	r5,108(sp)
 2008970:	01008074 	movhi	r4,513
 2008974:	213c5c04 	addi	r4,r4,-3728
 2008978:	d9002415 	stw	r4,144(sp)
 200897c:	29400044 	addi	r5,r5,1
 2008980:	003cf906 	br	2007d68 <___vfiprintf_internal_r+0x658>
 2008984:	4827883a 	mov	r19,r9
 2008988:	db801d83 	ldbu	r14,118(sp)
 200898c:	dd802215 	stw	r22,136(sp)
 2008990:	0013883a 	mov	r9,zero
 2008994:	003c5806 	br	2007af8 <___vfiprintf_internal_r+0x3e8>
 2008998:	200d883a 	mov	r6,r4
 200899c:	003ec706 	br	20084bc <___vfiprintf_internal_r+0xdac>
 20089a0:	0023883a 	mov	r17,zero
 20089a4:	003fed06 	br	200895c <___vfiprintf_internal_r+0x124c>
 20089a8:	d9002217 	ldw	r4,136(sp)
 20089ac:	22400017 	ldw	r9,0(r4)
 20089b0:	20c00104 	addi	r3,r4,4
 20089b4:	d8c02215 	stw	r3,136(sp)
 20089b8:	483fc20e 	bge	r9,zero,20088c4 <___vfiprintf_internal_r+0x11b4>
 20089bc:	027fffc4 	movi	r9,-1
 20089c0:	80c00047 	ldb	r3,1(r16)
 20089c4:	003bb006 	br	2007888 <___vfiprintf_internal_r+0x178>
 20089c8:	8c80010e 	bge	r17,r18,20089d0 <___vfiprintf_internal_r+0x12c0>
 20089cc:	9023883a 	mov	r17,r18
 20089d0:	d8802317 	ldw	r2,140(sp)
 20089d4:	1445883a 	add	r2,r2,r17
 20089d8:	d8802315 	stw	r2,140(sp)
 20089dc:	003cef06 	br	2007d9c <___vfiprintf_internal_r+0x68c>

020089e0 <__vfiprintf_internal>:
 20089e0:	2007883a 	mov	r3,r4
 20089e4:	01008074 	movhi	r4,513
 20089e8:	21035704 	addi	r4,r4,3420
 20089ec:	21000017 	ldw	r4,0(r4)
 20089f0:	2805883a 	mov	r2,r5
 20089f4:	300f883a 	mov	r7,r6
 20089f8:	180b883a 	mov	r5,r3
 20089fc:	100d883a 	mov	r6,r2
 2008a00:	20077101 	jmpi	2007710 <___vfiprintf_internal_r>

02008a04 <__sbprintf>:
 2008a04:	2880030b 	ldhu	r2,12(r5)
 2008a08:	2ac01917 	ldw	r11,100(r5)
 2008a0c:	2a80038b 	ldhu	r10,14(r5)
 2008a10:	2a400717 	ldw	r9,28(r5)
 2008a14:	2a000917 	ldw	r8,36(r5)
 2008a18:	defee204 	addi	sp,sp,-1144
 2008a1c:	00c10004 	movi	r3,1024
 2008a20:	dc011a15 	stw	r16,1128(sp)
 2008a24:	10bfff4c 	andi	r2,r2,65533
 2008a28:	2821883a 	mov	r16,r5
 2008a2c:	d8cb883a 	add	r5,sp,r3
 2008a30:	dc811c15 	stw	r18,1136(sp)
 2008a34:	dc411b15 	stw	r17,1132(sp)
 2008a38:	dfc11d15 	stw	ra,1140(sp)
 2008a3c:	2025883a 	mov	r18,r4
 2008a40:	d881030d 	sth	r2,1036(sp)
 2008a44:	dac11915 	stw	r11,1124(sp)
 2008a48:	da81038d 	sth	r10,1038(sp)
 2008a4c:	da410715 	stw	r9,1052(sp)
 2008a50:	da010915 	stw	r8,1060(sp)
 2008a54:	dec10015 	stw	sp,1024(sp)
 2008a58:	dec10415 	stw	sp,1040(sp)
 2008a5c:	d8c10215 	stw	r3,1032(sp)
 2008a60:	d8c10515 	stw	r3,1044(sp)
 2008a64:	d8010615 	stw	zero,1048(sp)
 2008a68:	20077100 	call	2007710 <___vfiprintf_internal_r>
 2008a6c:	1023883a 	mov	r17,r2
 2008a70:	10000416 	blt	r2,zero,2008a84 <__sbprintf+0x80>
 2008a74:	9009883a 	mov	r4,r18
 2008a78:	d9410004 	addi	r5,sp,1024
 2008a7c:	20040e40 	call	20040e4 <_fflush_r>
 2008a80:	10000d1e 	bne	r2,zero,2008ab8 <__sbprintf+0xb4>
 2008a84:	d8c1030b 	ldhu	r3,1036(sp)
 2008a88:	18c0100c 	andi	r3,r3,64
 2008a8c:	18000326 	beq	r3,zero,2008a9c <__sbprintf+0x98>
 2008a90:	8080030b 	ldhu	r2,12(r16)
 2008a94:	10801014 	ori	r2,r2,64
 2008a98:	8080030d 	sth	r2,12(r16)
 2008a9c:	8805883a 	mov	r2,r17
 2008aa0:	dfc11d17 	ldw	ra,1140(sp)
 2008aa4:	dc811c17 	ldw	r18,1136(sp)
 2008aa8:	dc411b17 	ldw	r17,1132(sp)
 2008aac:	dc011a17 	ldw	r16,1128(sp)
 2008ab0:	dec11e04 	addi	sp,sp,1144
 2008ab4:	f800283a 	ret
 2008ab8:	047fffc4 	movi	r17,-1
 2008abc:	003ff106 	br	2008a84 <__sbprintf+0x80>

02008ac0 <_write_r>:
 2008ac0:	defffd04 	addi	sp,sp,-12
 2008ac4:	dc000015 	stw	r16,0(sp)
 2008ac8:	04008074 	movhi	r16,513
 2008acc:	dc400115 	stw	r17,4(sp)
 2008ad0:	840a2704 	addi	r16,r16,10396
 2008ad4:	2023883a 	mov	r17,r4
 2008ad8:	2809883a 	mov	r4,r5
 2008adc:	300b883a 	mov	r5,r6
 2008ae0:	380d883a 	mov	r6,r7
 2008ae4:	dfc00215 	stw	ra,8(sp)
 2008ae8:	80000015 	stw	zero,0(r16)
 2008aec:	200cf100 	call	200cf10 <write>
 2008af0:	00ffffc4 	movi	r3,-1
 2008af4:	10c00526 	beq	r2,r3,2008b0c <_write_r+0x4c>
 2008af8:	dfc00217 	ldw	ra,8(sp)
 2008afc:	dc400117 	ldw	r17,4(sp)
 2008b00:	dc000017 	ldw	r16,0(sp)
 2008b04:	dec00304 	addi	sp,sp,12
 2008b08:	f800283a 	ret
 2008b0c:	80c00017 	ldw	r3,0(r16)
 2008b10:	183ff926 	beq	r3,zero,2008af8 <_write_r+0x38>
 2008b14:	88c00015 	stw	r3,0(r17)
 2008b18:	003ff706 	br	2008af8 <_write_r+0x38>

02008b1c <_close_r>:
 2008b1c:	defffd04 	addi	sp,sp,-12
 2008b20:	dc000015 	stw	r16,0(sp)
 2008b24:	04008074 	movhi	r16,513
 2008b28:	dc400115 	stw	r17,4(sp)
 2008b2c:	840a2704 	addi	r16,r16,10396
 2008b30:	2023883a 	mov	r17,r4
 2008b34:	2809883a 	mov	r4,r5
 2008b38:	dfc00215 	stw	ra,8(sp)
 2008b3c:	80000015 	stw	zero,0(r16)
 2008b40:	200c6840 	call	200c684 <close>
 2008b44:	00ffffc4 	movi	r3,-1
 2008b48:	10c00526 	beq	r2,r3,2008b60 <_close_r+0x44>
 2008b4c:	dfc00217 	ldw	ra,8(sp)
 2008b50:	dc400117 	ldw	r17,4(sp)
 2008b54:	dc000017 	ldw	r16,0(sp)
 2008b58:	dec00304 	addi	sp,sp,12
 2008b5c:	f800283a 	ret
 2008b60:	80c00017 	ldw	r3,0(r16)
 2008b64:	183ff926 	beq	r3,zero,2008b4c <_close_r+0x30>
 2008b68:	88c00015 	stw	r3,0(r17)
 2008b6c:	003ff706 	br	2008b4c <_close_r+0x30>

02008b70 <_calloc_r>:
 2008b70:	298b383a 	mul	r5,r5,r6
 2008b74:	defffe04 	addi	sp,sp,-8
 2008b78:	dc000015 	stw	r16,0(sp)
 2008b7c:	dfc00115 	stw	ra,4(sp)
 2008b80:	20052040 	call	2005204 <_malloc_r>
 2008b84:	1021883a 	mov	r16,r2
 2008b88:	10002826 	beq	r2,zero,2008c2c <_calloc_r+0xbc>
 2008b8c:	11bfff17 	ldw	r6,-4(r2)
 2008b90:	00bfff04 	movi	r2,-4
 2008b94:	00c00904 	movi	r3,36
 2008b98:	308c703a 	and	r6,r6,r2
 2008b9c:	308d883a 	add	r6,r6,r2
 2008ba0:	19801436 	bltu	r3,r6,2008bf4 <_calloc_r+0x84>
 2008ba4:	008004c4 	movi	r2,19
 2008ba8:	11800936 	bltu	r2,r6,2008bd0 <_calloc_r+0x60>
 2008bac:	8005883a 	mov	r2,r16
 2008bb0:	10000015 	stw	zero,0(r2)
 2008bb4:	10000115 	stw	zero,4(r2)
 2008bb8:	10000215 	stw	zero,8(r2)
 2008bbc:	8005883a 	mov	r2,r16
 2008bc0:	dfc00117 	ldw	ra,4(sp)
 2008bc4:	dc000017 	ldw	r16,0(sp)
 2008bc8:	dec00204 	addi	sp,sp,8
 2008bcc:	f800283a 	ret
 2008bd0:	80000015 	stw	zero,0(r16)
 2008bd4:	80000115 	stw	zero,4(r16)
 2008bd8:	008006c4 	movi	r2,27
 2008bdc:	11800d2e 	bgeu	r2,r6,2008c14 <_calloc_r+0xa4>
 2008be0:	80000215 	stw	zero,8(r16)
 2008be4:	80000315 	stw	zero,12(r16)
 2008be8:	30c00c26 	beq	r6,r3,2008c1c <_calloc_r+0xac>
 2008bec:	80800404 	addi	r2,r16,16
 2008bf0:	003fef06 	br	2008bb0 <_calloc_r+0x40>
 2008bf4:	8009883a 	mov	r4,r16
 2008bf8:	000b883a 	mov	r5,zero
 2008bfc:	2005d280 	call	2005d28 <memset>
 2008c00:	8005883a 	mov	r2,r16
 2008c04:	dfc00117 	ldw	ra,4(sp)
 2008c08:	dc000017 	ldw	r16,0(sp)
 2008c0c:	dec00204 	addi	sp,sp,8
 2008c10:	f800283a 	ret
 2008c14:	80800204 	addi	r2,r16,8
 2008c18:	003fe506 	br	2008bb0 <_calloc_r+0x40>
 2008c1c:	80000415 	stw	zero,16(r16)
 2008c20:	80800604 	addi	r2,r16,24
 2008c24:	80000515 	stw	zero,20(r16)
 2008c28:	003fe106 	br	2008bb0 <_calloc_r+0x40>
 2008c2c:	0005883a 	mov	r2,zero
 2008c30:	003fe306 	br	2008bc0 <_calloc_r+0x50>

02008c34 <_fclose_r>:
 2008c34:	28003926 	beq	r5,zero,2008d1c <_fclose_r+0xe8>
 2008c38:	defffc04 	addi	sp,sp,-16
 2008c3c:	dc400115 	stw	r17,4(sp)
 2008c40:	dc000015 	stw	r16,0(sp)
 2008c44:	dfc00315 	stw	ra,12(sp)
 2008c48:	dc800215 	stw	r18,8(sp)
 2008c4c:	2023883a 	mov	r17,r4
 2008c50:	2821883a 	mov	r16,r5
 2008c54:	20000226 	beq	r4,zero,2008c60 <_fclose_r+0x2c>
 2008c58:	20800e17 	ldw	r2,56(r4)
 2008c5c:	10002726 	beq	r2,zero,2008cfc <_fclose_r+0xc8>
 2008c60:	8080030f 	ldh	r2,12(r16)
 2008c64:	1000071e 	bne	r2,zero,2008c84 <_fclose_r+0x50>
 2008c68:	0005883a 	mov	r2,zero
 2008c6c:	dfc00317 	ldw	ra,12(sp)
 2008c70:	dc800217 	ldw	r18,8(sp)
 2008c74:	dc400117 	ldw	r17,4(sp)
 2008c78:	dc000017 	ldw	r16,0(sp)
 2008c7c:	dec00404 	addi	sp,sp,16
 2008c80:	f800283a 	ret
 2008c84:	8809883a 	mov	r4,r17
 2008c88:	800b883a 	mov	r5,r16
 2008c8c:	2003edc0 	call	2003edc <__sflush_r>
 2008c90:	1025883a 	mov	r18,r2
 2008c94:	80800b17 	ldw	r2,44(r16)
 2008c98:	10000426 	beq	r2,zero,2008cac <_fclose_r+0x78>
 2008c9c:	81400717 	ldw	r5,28(r16)
 2008ca0:	8809883a 	mov	r4,r17
 2008ca4:	103ee83a 	callr	r2
 2008ca8:	10001616 	blt	r2,zero,2008d04 <_fclose_r+0xd0>
 2008cac:	8080030b 	ldhu	r2,12(r16)
 2008cb0:	1080200c 	andi	r2,r2,128
 2008cb4:	1000151e 	bne	r2,zero,2008d0c <_fclose_r+0xd8>
 2008cb8:	81400c17 	ldw	r5,48(r16)
 2008cbc:	28000526 	beq	r5,zero,2008cd4 <_fclose_r+0xa0>
 2008cc0:	80801004 	addi	r2,r16,64
 2008cc4:	28800226 	beq	r5,r2,2008cd0 <_fclose_r+0x9c>
 2008cc8:	8809883a 	mov	r4,r17
 2008ccc:	20046340 	call	2004634 <_free_r>
 2008cd0:	80000c15 	stw	zero,48(r16)
 2008cd4:	81401117 	ldw	r5,68(r16)
 2008cd8:	28000326 	beq	r5,zero,2008ce8 <_fclose_r+0xb4>
 2008cdc:	8809883a 	mov	r4,r17
 2008ce0:	20046340 	call	2004634 <_free_r>
 2008ce4:	80001115 	stw	zero,68(r16)
 2008ce8:	20044d00 	call	20044d0 <__sfp_lock_acquire>
 2008cec:	8000030d 	sth	zero,12(r16)
 2008cf0:	20044d40 	call	20044d4 <__sfp_lock_release>
 2008cf4:	9005883a 	mov	r2,r18
 2008cf8:	003fdc06 	br	2008c6c <_fclose_r+0x38>
 2008cfc:	20044c00 	call	20044c0 <__sinit>
 2008d00:	003fd706 	br	2008c60 <_fclose_r+0x2c>
 2008d04:	04bfffc4 	movi	r18,-1
 2008d08:	003fe806 	br	2008cac <_fclose_r+0x78>
 2008d0c:	81400417 	ldw	r5,16(r16)
 2008d10:	8809883a 	mov	r4,r17
 2008d14:	20046340 	call	2004634 <_free_r>
 2008d18:	003fe706 	br	2008cb8 <_fclose_r+0x84>
 2008d1c:	0005883a 	mov	r2,zero
 2008d20:	f800283a 	ret

02008d24 <fclose>:
 2008d24:	00808074 	movhi	r2,513
 2008d28:	10835704 	addi	r2,r2,3420
 2008d2c:	200b883a 	mov	r5,r4
 2008d30:	11000017 	ldw	r4,0(r2)
 2008d34:	2008c341 	jmpi	2008c34 <_fclose_r>

02008d38 <_fputwc_r>:
 2008d38:	3080030b 	ldhu	r2,12(r6)
 2008d3c:	defff804 	addi	sp,sp,-32
 2008d40:	dcc00415 	stw	r19,16(sp)
 2008d44:	dc800315 	stw	r18,12(sp)
 2008d48:	dc000115 	stw	r16,4(sp)
 2008d4c:	dfc00715 	stw	ra,28(sp)
 2008d50:	dd400615 	stw	r21,24(sp)
 2008d54:	dd000515 	stw	r20,20(sp)
 2008d58:	dc400215 	stw	r17,8(sp)
 2008d5c:	10c8000c 	andi	r3,r2,8192
 2008d60:	3021883a 	mov	r16,r6
 2008d64:	2027883a 	mov	r19,r4
 2008d68:	2825883a 	mov	r18,r5
 2008d6c:	1800051e 	bne	r3,zero,2008d84 <_fputwc_r+0x4c>
 2008d70:	30c01917 	ldw	r3,100(r6)
 2008d74:	10880014 	ori	r2,r2,8192
 2008d78:	3080030d 	sth	r2,12(r6)
 2008d7c:	18880014 	ori	r2,r3,8192
 2008d80:	30801915 	stw	r2,100(r6)
 2008d84:	2004ff40 	call	2004ff4 <__locale_mb_cur_max>
 2008d88:	00c00044 	movi	r3,1
 2008d8c:	10c03e26 	beq	r2,r3,2008e88 <_fputwc_r+0x150>
 2008d90:	9809883a 	mov	r4,r19
 2008d94:	d80b883a 	mov	r5,sp
 2008d98:	900d883a 	mov	r6,r18
 2008d9c:	81c01704 	addi	r7,r16,92
 2008da0:	20091d00 	call	20091d0 <_wcrtomb_r>
 2008da4:	1029883a 	mov	r20,r2
 2008da8:	00bfffc4 	movi	r2,-1
 2008dac:	a0802026 	beq	r20,r2,2008e30 <_fputwc_r+0xf8>
 2008db0:	d9400003 	ldbu	r5,0(sp)
 2008db4:	a0001c26 	beq	r20,zero,2008e28 <_fputwc_r+0xf0>
 2008db8:	0023883a 	mov	r17,zero
 2008dbc:	05400284 	movi	r21,10
 2008dc0:	00000906 	br	2008de8 <_fputwc_r+0xb0>
 2008dc4:	80800017 	ldw	r2,0(r16)
 2008dc8:	11400005 	stb	r5,0(r2)
 2008dcc:	80c00017 	ldw	r3,0(r16)
 2008dd0:	18c00044 	addi	r3,r3,1
 2008dd4:	80c00015 	stw	r3,0(r16)
 2008dd8:	8c400044 	addi	r17,r17,1
 2008ddc:	dc45883a 	add	r2,sp,r17
 2008de0:	8d00112e 	bgeu	r17,r20,2008e28 <_fputwc_r+0xf0>
 2008de4:	11400003 	ldbu	r5,0(r2)
 2008de8:	80c00217 	ldw	r3,8(r16)
 2008dec:	18ffffc4 	addi	r3,r3,-1
 2008df0:	80c00215 	stw	r3,8(r16)
 2008df4:	183ff30e 	bge	r3,zero,2008dc4 <_fputwc_r+0x8c>
 2008df8:	80800617 	ldw	r2,24(r16)
 2008dfc:	18801916 	blt	r3,r2,2008e64 <_fputwc_r+0x12c>
 2008e00:	80800017 	ldw	r2,0(r16)
 2008e04:	11400005 	stb	r5,0(r2)
 2008e08:	80800017 	ldw	r2,0(r16)
 2008e0c:	10c00003 	ldbu	r3,0(r2)
 2008e10:	10800044 	addi	r2,r2,1
 2008e14:	1d402326 	beq	r3,r21,2008ea4 <_fputwc_r+0x16c>
 2008e18:	80800015 	stw	r2,0(r16)
 2008e1c:	8c400044 	addi	r17,r17,1
 2008e20:	dc45883a 	add	r2,sp,r17
 2008e24:	8d3fef36 	bltu	r17,r20,2008de4 <_fputwc_r+0xac>
 2008e28:	9005883a 	mov	r2,r18
 2008e2c:	00000406 	br	2008e40 <_fputwc_r+0x108>
 2008e30:	80c0030b 	ldhu	r3,12(r16)
 2008e34:	a005883a 	mov	r2,r20
 2008e38:	18c01014 	ori	r3,r3,64
 2008e3c:	80c0030d 	sth	r3,12(r16)
 2008e40:	dfc00717 	ldw	ra,28(sp)
 2008e44:	dd400617 	ldw	r21,24(sp)
 2008e48:	dd000517 	ldw	r20,20(sp)
 2008e4c:	dcc00417 	ldw	r19,16(sp)
 2008e50:	dc800317 	ldw	r18,12(sp)
 2008e54:	dc400217 	ldw	r17,8(sp)
 2008e58:	dc000117 	ldw	r16,4(sp)
 2008e5c:	dec00804 	addi	sp,sp,32
 2008e60:	f800283a 	ret
 2008e64:	9809883a 	mov	r4,r19
 2008e68:	29403fcc 	andi	r5,r5,255
 2008e6c:	800d883a 	mov	r6,r16
 2008e70:	200907c0 	call	200907c <__swbuf_r>
 2008e74:	10bfffe0 	cmpeqi	r2,r2,-1
 2008e78:	10803fcc 	andi	r2,r2,255
 2008e7c:	103fd626 	beq	r2,zero,2008dd8 <_fputwc_r+0xa0>
 2008e80:	00bfffc4 	movi	r2,-1
 2008e84:	003fee06 	br	2008e40 <_fputwc_r+0x108>
 2008e88:	90ffffc4 	addi	r3,r18,-1
 2008e8c:	01003f84 	movi	r4,254
 2008e90:	20ffbf36 	bltu	r4,r3,2008d90 <_fputwc_r+0x58>
 2008e94:	900b883a 	mov	r5,r18
 2008e98:	dc800005 	stb	r18,0(sp)
 2008e9c:	1029883a 	mov	r20,r2
 2008ea0:	003fc506 	br	2008db8 <_fputwc_r+0x80>
 2008ea4:	9809883a 	mov	r4,r19
 2008ea8:	a80b883a 	mov	r5,r21
 2008eac:	800d883a 	mov	r6,r16
 2008eb0:	200907c0 	call	200907c <__swbuf_r>
 2008eb4:	10bfffe0 	cmpeqi	r2,r2,-1
 2008eb8:	003fef06 	br	2008e78 <_fputwc_r+0x140>

02008ebc <fputwc>:
 2008ebc:	00808074 	movhi	r2,513
 2008ec0:	defffc04 	addi	sp,sp,-16
 2008ec4:	10835704 	addi	r2,r2,3420
 2008ec8:	dc000115 	stw	r16,4(sp)
 2008ecc:	14000017 	ldw	r16,0(r2)
 2008ed0:	dc400215 	stw	r17,8(sp)
 2008ed4:	dfc00315 	stw	ra,12(sp)
 2008ed8:	2023883a 	mov	r17,r4
 2008edc:	280d883a 	mov	r6,r5
 2008ee0:	80000626 	beq	r16,zero,2008efc <fputwc+0x40>
 2008ee4:	80800e17 	ldw	r2,56(r16)
 2008ee8:	1000041e 	bne	r2,zero,2008efc <fputwc+0x40>
 2008eec:	8009883a 	mov	r4,r16
 2008ef0:	d9400015 	stw	r5,0(sp)
 2008ef4:	20044c00 	call	20044c0 <__sinit>
 2008ef8:	d9800017 	ldw	r6,0(sp)
 2008efc:	8009883a 	mov	r4,r16
 2008f00:	880b883a 	mov	r5,r17
 2008f04:	dfc00317 	ldw	ra,12(sp)
 2008f08:	dc400217 	ldw	r17,8(sp)
 2008f0c:	dc000117 	ldw	r16,4(sp)
 2008f10:	dec00404 	addi	sp,sp,16
 2008f14:	2008d381 	jmpi	2008d38 <_fputwc_r>

02008f18 <_fstat_r>:
 2008f18:	defffd04 	addi	sp,sp,-12
 2008f1c:	dc000015 	stw	r16,0(sp)
 2008f20:	04008074 	movhi	r16,513
 2008f24:	dc400115 	stw	r17,4(sp)
 2008f28:	840a2704 	addi	r16,r16,10396
 2008f2c:	2023883a 	mov	r17,r4
 2008f30:	2809883a 	mov	r4,r5
 2008f34:	300b883a 	mov	r5,r6
 2008f38:	dfc00215 	stw	ra,8(sp)
 2008f3c:	80000015 	stw	zero,0(r16)
 2008f40:	200c7d00 	call	200c7d0 <fstat>
 2008f44:	00ffffc4 	movi	r3,-1
 2008f48:	10c00526 	beq	r2,r3,2008f60 <_fstat_r+0x48>
 2008f4c:	dfc00217 	ldw	ra,8(sp)
 2008f50:	dc400117 	ldw	r17,4(sp)
 2008f54:	dc000017 	ldw	r16,0(sp)
 2008f58:	dec00304 	addi	sp,sp,12
 2008f5c:	f800283a 	ret
 2008f60:	80c00017 	ldw	r3,0(r16)
 2008f64:	183ff926 	beq	r3,zero,2008f4c <_fstat_r+0x34>
 2008f68:	88c00015 	stw	r3,0(r17)
 2008f6c:	003ff706 	br	2008f4c <_fstat_r+0x34>

02008f70 <_isatty_r>:
 2008f70:	defffd04 	addi	sp,sp,-12
 2008f74:	dc000015 	stw	r16,0(sp)
 2008f78:	04008074 	movhi	r16,513
 2008f7c:	dc400115 	stw	r17,4(sp)
 2008f80:	840a2704 	addi	r16,r16,10396
 2008f84:	2023883a 	mov	r17,r4
 2008f88:	2809883a 	mov	r4,r5
 2008f8c:	dfc00215 	stw	ra,8(sp)
 2008f90:	80000015 	stw	zero,0(r16)
 2008f94:	200c8d00 	call	200c8d0 <isatty>
 2008f98:	00ffffc4 	movi	r3,-1
 2008f9c:	10c00526 	beq	r2,r3,2008fb4 <_isatty_r+0x44>
 2008fa0:	dfc00217 	ldw	ra,8(sp)
 2008fa4:	dc400117 	ldw	r17,4(sp)
 2008fa8:	dc000017 	ldw	r16,0(sp)
 2008fac:	dec00304 	addi	sp,sp,12
 2008fb0:	f800283a 	ret
 2008fb4:	80c00017 	ldw	r3,0(r16)
 2008fb8:	183ff926 	beq	r3,zero,2008fa0 <_isatty_r+0x30>
 2008fbc:	88c00015 	stw	r3,0(r17)
 2008fc0:	003ff706 	br	2008fa0 <_isatty_r+0x30>

02008fc4 <_lseek_r>:
 2008fc4:	defffd04 	addi	sp,sp,-12
 2008fc8:	dc000015 	stw	r16,0(sp)
 2008fcc:	04008074 	movhi	r16,513
 2008fd0:	dc400115 	stw	r17,4(sp)
 2008fd4:	840a2704 	addi	r16,r16,10396
 2008fd8:	2023883a 	mov	r17,r4
 2008fdc:	2809883a 	mov	r4,r5
 2008fe0:	300b883a 	mov	r5,r6
 2008fe4:	380d883a 	mov	r6,r7
 2008fe8:	dfc00215 	stw	ra,8(sp)
 2008fec:	80000015 	stw	zero,0(r16)
 2008ff0:	200caa80 	call	200caa8 <lseek>
 2008ff4:	00ffffc4 	movi	r3,-1
 2008ff8:	10c00526 	beq	r2,r3,2009010 <_lseek_r+0x4c>
 2008ffc:	dfc00217 	ldw	ra,8(sp)
 2009000:	dc400117 	ldw	r17,4(sp)
 2009004:	dc000017 	ldw	r16,0(sp)
 2009008:	dec00304 	addi	sp,sp,12
 200900c:	f800283a 	ret
 2009010:	80c00017 	ldw	r3,0(r16)
 2009014:	183ff926 	beq	r3,zero,2008ffc <_lseek_r+0x38>
 2009018:	88c00015 	stw	r3,0(r17)
 200901c:	003ff706 	br	2008ffc <_lseek_r+0x38>

02009020 <_read_r>:
 2009020:	defffd04 	addi	sp,sp,-12
 2009024:	dc000015 	stw	r16,0(sp)
 2009028:	04008074 	movhi	r16,513
 200902c:	dc400115 	stw	r17,4(sp)
 2009030:	840a2704 	addi	r16,r16,10396
 2009034:	2023883a 	mov	r17,r4
 2009038:	2809883a 	mov	r4,r5
 200903c:	300b883a 	mov	r5,r6
 2009040:	380d883a 	mov	r6,r7
 2009044:	dfc00215 	stw	ra,8(sp)
 2009048:	80000015 	stw	zero,0(r16)
 200904c:	200cc840 	call	200cc84 <read>
 2009050:	00ffffc4 	movi	r3,-1
 2009054:	10c00526 	beq	r2,r3,200906c <_read_r+0x4c>
 2009058:	dfc00217 	ldw	ra,8(sp)
 200905c:	dc400117 	ldw	r17,4(sp)
 2009060:	dc000017 	ldw	r16,0(sp)
 2009064:	dec00304 	addi	sp,sp,12
 2009068:	f800283a 	ret
 200906c:	80c00017 	ldw	r3,0(r16)
 2009070:	183ff926 	beq	r3,zero,2009058 <_read_r+0x38>
 2009074:	88c00015 	stw	r3,0(r17)
 2009078:	003ff706 	br	2009058 <_read_r+0x38>

0200907c <__swbuf_r>:
 200907c:	defffc04 	addi	sp,sp,-16
 2009080:	dc800215 	stw	r18,8(sp)
 2009084:	dc400115 	stw	r17,4(sp)
 2009088:	dc000015 	stw	r16,0(sp)
 200908c:	dfc00315 	stw	ra,12(sp)
 2009090:	2025883a 	mov	r18,r4
 2009094:	2823883a 	mov	r17,r5
 2009098:	3021883a 	mov	r16,r6
 200909c:	20000226 	beq	r4,zero,20090a8 <__swbuf_r+0x2c>
 20090a0:	20800e17 	ldw	r2,56(r4)
 20090a4:	10004126 	beq	r2,zero,20091ac <__swbuf_r+0x130>
 20090a8:	80c00617 	ldw	r3,24(r16)
 20090ac:	8180030b 	ldhu	r6,12(r16)
 20090b0:	80c00215 	stw	r3,8(r16)
 20090b4:	30c0020c 	andi	r3,r6,8
 20090b8:	18003526 	beq	r3,zero,2009190 <__swbuf_r+0x114>
 20090bc:	80c00417 	ldw	r3,16(r16)
 20090c0:	18003326 	beq	r3,zero,2009190 <__swbuf_r+0x114>
 20090c4:	3088000c 	andi	r2,r6,8192
 20090c8:	8c403fcc 	andi	r17,r17,255
 20090cc:	10001726 	beq	r2,zero,200912c <__swbuf_r+0xb0>
 20090d0:	80800017 	ldw	r2,0(r16)
 20090d4:	81000517 	ldw	r4,20(r16)
 20090d8:	10c7c83a 	sub	r3,r2,r3
 20090dc:	19001d0e 	bge	r3,r4,2009154 <__swbuf_r+0xd8>
 20090e0:	18c00044 	addi	r3,r3,1
 20090e4:	81400217 	ldw	r5,8(r16)
 20090e8:	11000044 	addi	r4,r2,1
 20090ec:	81000015 	stw	r4,0(r16)
 20090f0:	297fffc4 	addi	r5,r5,-1
 20090f4:	81400215 	stw	r5,8(r16)
 20090f8:	14400005 	stb	r17,0(r2)
 20090fc:	80800517 	ldw	r2,20(r16)
 2009100:	10c01d26 	beq	r2,r3,2009178 <__swbuf_r+0xfc>
 2009104:	8080030b 	ldhu	r2,12(r16)
 2009108:	1080004c 	andi	r2,r2,1
 200910c:	1000181e 	bne	r2,zero,2009170 <__swbuf_r+0xf4>
 2009110:	8805883a 	mov	r2,r17
 2009114:	dfc00317 	ldw	ra,12(sp)
 2009118:	dc800217 	ldw	r18,8(sp)
 200911c:	dc400117 	ldw	r17,4(sp)
 2009120:	dc000017 	ldw	r16,0(sp)
 2009124:	dec00404 	addi	sp,sp,16
 2009128:	f800283a 	ret
 200912c:	81001917 	ldw	r4,100(r16)
 2009130:	00b7ffc4 	movi	r2,-8193
 2009134:	31880014 	ori	r6,r6,8192
 2009138:	2084703a 	and	r2,r4,r2
 200913c:	80801915 	stw	r2,100(r16)
 2009140:	80800017 	ldw	r2,0(r16)
 2009144:	81000517 	ldw	r4,20(r16)
 2009148:	8180030d 	sth	r6,12(r16)
 200914c:	10c7c83a 	sub	r3,r2,r3
 2009150:	193fe316 	blt	r3,r4,20090e0 <__swbuf_r+0x64>
 2009154:	9009883a 	mov	r4,r18
 2009158:	800b883a 	mov	r5,r16
 200915c:	20040e40 	call	20040e4 <_fflush_r>
 2009160:	1000091e 	bne	r2,zero,2009188 <__swbuf_r+0x10c>
 2009164:	80800017 	ldw	r2,0(r16)
 2009168:	00c00044 	movi	r3,1
 200916c:	003fdd06 	br	20090e4 <__swbuf_r+0x68>
 2009170:	00800284 	movi	r2,10
 2009174:	88bfe61e 	bne	r17,r2,2009110 <__swbuf_r+0x94>
 2009178:	9009883a 	mov	r4,r18
 200917c:	800b883a 	mov	r5,r16
 2009180:	20040e40 	call	20040e4 <_fflush_r>
 2009184:	103fe226 	beq	r2,zero,2009110 <__swbuf_r+0x94>
 2009188:	00bfffc4 	movi	r2,-1
 200918c:	003fe106 	br	2009114 <__swbuf_r+0x98>
 2009190:	9009883a 	mov	r4,r18
 2009194:	800b883a 	mov	r5,r16
 2009198:	20024600 	call	2002460 <__swsetup_r>
 200919c:	103ffa1e 	bne	r2,zero,2009188 <__swbuf_r+0x10c>
 20091a0:	8180030b 	ldhu	r6,12(r16)
 20091a4:	80c00417 	ldw	r3,16(r16)
 20091a8:	003fc606 	br	20090c4 <__swbuf_r+0x48>
 20091ac:	20044c00 	call	20044c0 <__sinit>
 20091b0:	003fbd06 	br	20090a8 <__swbuf_r+0x2c>

020091b4 <__swbuf>:
 20091b4:	00c08074 	movhi	r3,513
 20091b8:	18c35704 	addi	r3,r3,3420
 20091bc:	2005883a 	mov	r2,r4
 20091c0:	19000017 	ldw	r4,0(r3)
 20091c4:	280d883a 	mov	r6,r5
 20091c8:	100b883a 	mov	r5,r2
 20091cc:	200907c1 	jmpi	200907c <__swbuf_r>

020091d0 <_wcrtomb_r>:
 20091d0:	defff604 	addi	sp,sp,-40
 20091d4:	00808074 	movhi	r2,513
 20091d8:	dc800815 	stw	r18,32(sp)
 20091dc:	dc400715 	stw	r17,28(sp)
 20091e0:	dc000615 	stw	r16,24(sp)
 20091e4:	10835b04 	addi	r2,r2,3436
 20091e8:	dfc00915 	stw	ra,36(sp)
 20091ec:	2021883a 	mov	r16,r4
 20091f0:	3823883a 	mov	r17,r7
 20091f4:	14800017 	ldw	r18,0(r2)
 20091f8:	28001426 	beq	r5,zero,200924c <_wcrtomb_r+0x7c>
 20091fc:	d9400415 	stw	r5,16(sp)
 2009200:	d9800515 	stw	r6,20(sp)
 2009204:	2004fe80 	call	2004fe8 <__locale_charset>
 2009208:	d9400417 	ldw	r5,16(sp)
 200920c:	d9800517 	ldw	r6,20(sp)
 2009210:	8009883a 	mov	r4,r16
 2009214:	dc400015 	stw	r17,0(sp)
 2009218:	100f883a 	mov	r7,r2
 200921c:	903ee83a 	callr	r18
 2009220:	00ffffc4 	movi	r3,-1
 2009224:	10c0031e 	bne	r2,r3,2009234 <_wcrtomb_r+0x64>
 2009228:	88000015 	stw	zero,0(r17)
 200922c:	00c02284 	movi	r3,138
 2009230:	80c00015 	stw	r3,0(r16)
 2009234:	dfc00917 	ldw	ra,36(sp)
 2009238:	dc800817 	ldw	r18,32(sp)
 200923c:	dc400717 	ldw	r17,28(sp)
 2009240:	dc000617 	ldw	r16,24(sp)
 2009244:	dec00a04 	addi	sp,sp,40
 2009248:	f800283a 	ret
 200924c:	2004fe80 	call	2004fe8 <__locale_charset>
 2009250:	8009883a 	mov	r4,r16
 2009254:	dc400015 	stw	r17,0(sp)
 2009258:	d9400104 	addi	r5,sp,4
 200925c:	000d883a 	mov	r6,zero
 2009260:	100f883a 	mov	r7,r2
 2009264:	903ee83a 	callr	r18
 2009268:	003fed06 	br	2009220 <_wcrtomb_r+0x50>

0200926c <wcrtomb>:
 200926c:	defff604 	addi	sp,sp,-40
 2009270:	00808074 	movhi	r2,513
 2009274:	dc800615 	stw	r18,24(sp)
 2009278:	dc400515 	stw	r17,20(sp)
 200927c:	dc000415 	stw	r16,16(sp)
 2009280:	10835704 	addi	r2,r2,3420
 2009284:	dfc00915 	stw	ra,36(sp)
 2009288:	dd000815 	stw	r20,32(sp)
 200928c:	dcc00715 	stw	r19,28(sp)
 2009290:	2021883a 	mov	r16,r4
 2009294:	3025883a 	mov	r18,r6
 2009298:	14400017 	ldw	r17,0(r2)
 200929c:	20001826 	beq	r4,zero,2009300 <wcrtomb+0x94>
 20092a0:	00808074 	movhi	r2,513
 20092a4:	10835b04 	addi	r2,r2,3436
 20092a8:	15000017 	ldw	r20,0(r2)
 20092ac:	2827883a 	mov	r19,r5
 20092b0:	2004fe80 	call	2004fe8 <__locale_charset>
 20092b4:	8809883a 	mov	r4,r17
 20092b8:	dc800015 	stw	r18,0(sp)
 20092bc:	800b883a 	mov	r5,r16
 20092c0:	980d883a 	mov	r6,r19
 20092c4:	100f883a 	mov	r7,r2
 20092c8:	a03ee83a 	callr	r20
 20092cc:	00ffffc4 	movi	r3,-1
 20092d0:	10c0031e 	bne	r2,r3,20092e0 <wcrtomb+0x74>
 20092d4:	90000015 	stw	zero,0(r18)
 20092d8:	00c02284 	movi	r3,138
 20092dc:	88c00015 	stw	r3,0(r17)
 20092e0:	dfc00917 	ldw	ra,36(sp)
 20092e4:	dd000817 	ldw	r20,32(sp)
 20092e8:	dcc00717 	ldw	r19,28(sp)
 20092ec:	dc800617 	ldw	r18,24(sp)
 20092f0:	dc400517 	ldw	r17,20(sp)
 20092f4:	dc000417 	ldw	r16,16(sp)
 20092f8:	dec00a04 	addi	sp,sp,40
 20092fc:	f800283a 	ret
 2009300:	00808074 	movhi	r2,513
 2009304:	10835b04 	addi	r2,r2,3436
 2009308:	14000017 	ldw	r16,0(r2)
 200930c:	2004fe80 	call	2004fe8 <__locale_charset>
 2009310:	8809883a 	mov	r4,r17
 2009314:	dc800015 	stw	r18,0(sp)
 2009318:	d9400104 	addi	r5,sp,4
 200931c:	000d883a 	mov	r6,zero
 2009320:	100f883a 	mov	r7,r2
 2009324:	803ee83a 	callr	r16
 2009328:	003fe806 	br	20092cc <wcrtomb+0x60>

0200932c <__ascii_wctomb>:
 200932c:	28000526 	beq	r5,zero,2009344 <__ascii_wctomb+0x18>
 2009330:	00803fc4 	movi	r2,255
 2009334:	11800536 	bltu	r2,r6,200934c <__ascii_wctomb+0x20>
 2009338:	29800005 	stb	r6,0(r5)
 200933c:	00800044 	movi	r2,1
 2009340:	f800283a 	ret
 2009344:	0005883a 	mov	r2,zero
 2009348:	f800283a 	ret
 200934c:	00802284 	movi	r2,138
 2009350:	20800015 	stw	r2,0(r4)
 2009354:	00bfffc4 	movi	r2,-1
 2009358:	f800283a 	ret

0200935c <_wctomb_r>:
 200935c:	00808074 	movhi	r2,513
 2009360:	defff904 	addi	sp,sp,-28
 2009364:	10835b04 	addi	r2,r2,3436
 2009368:	dfc00615 	stw	ra,24(sp)
 200936c:	dc400515 	stw	r17,20(sp)
 2009370:	dc000415 	stw	r16,16(sp)
 2009374:	3823883a 	mov	r17,r7
 2009378:	14000017 	ldw	r16,0(r2)
 200937c:	d9000115 	stw	r4,4(sp)
 2009380:	d9400215 	stw	r5,8(sp)
 2009384:	d9800315 	stw	r6,12(sp)
 2009388:	2004fe80 	call	2004fe8 <__locale_charset>
 200938c:	d9000117 	ldw	r4,4(sp)
 2009390:	d9400217 	ldw	r5,8(sp)
 2009394:	d9800317 	ldw	r6,12(sp)
 2009398:	dc400015 	stw	r17,0(sp)
 200939c:	100f883a 	mov	r7,r2
 20093a0:	803ee83a 	callr	r16
 20093a4:	dfc00617 	ldw	ra,24(sp)
 20093a8:	dc400517 	ldw	r17,20(sp)
 20093ac:	dc000417 	ldw	r16,16(sp)
 20093b0:	dec00704 	addi	sp,sp,28
 20093b4:	f800283a 	ret

020093b8 <__udivdi3>:
 20093b8:	defff504 	addi	sp,sp,-44
 20093bc:	dcc00415 	stw	r19,16(sp)
 20093c0:	dc000115 	stw	r16,4(sp)
 20093c4:	dfc00a15 	stw	ra,40(sp)
 20093c8:	df000915 	stw	fp,36(sp)
 20093cc:	ddc00815 	stw	r23,32(sp)
 20093d0:	dd800715 	stw	r22,28(sp)
 20093d4:	dd400615 	stw	r21,24(sp)
 20093d8:	dd000515 	stw	r20,20(sp)
 20093dc:	dc800315 	stw	r18,12(sp)
 20093e0:	dc400215 	stw	r17,8(sp)
 20093e4:	2027883a 	mov	r19,r4
 20093e8:	2821883a 	mov	r16,r5
 20093ec:	3800421e 	bne	r7,zero,20094f8 <__udivdi3+0x140>
 20093f0:	3025883a 	mov	r18,r6
 20093f4:	2023883a 	mov	r17,r4
 20093f8:	2980542e 	bgeu	r5,r6,200954c <__udivdi3+0x194>
 20093fc:	00bfffd4 	movui	r2,65535
 2009400:	282d883a 	mov	r22,r5
 2009404:	1180a836 	bltu	r2,r6,20096a8 <__udivdi3+0x2f0>
 2009408:	00803fc4 	movi	r2,255
 200940c:	1181422e 	bgeu	r2,r6,2009918 <__udivdi3+0x560>
 2009410:	00800204 	movi	r2,8
 2009414:	1007883a 	mov	r3,r2
 2009418:	3084d83a 	srl	r2,r6,r2
 200941c:	01008074 	movhi	r4,513
 2009420:	213c6004 	addi	r4,r4,-3712
 2009424:	2085883a 	add	r2,r4,r2
 2009428:	10800003 	ldbu	r2,0(r2)
 200942c:	10c7883a 	add	r3,r2,r3
 2009430:	00800804 	movi	r2,32
 2009434:	10c5c83a 	sub	r2,r2,r3
 2009438:	10000526 	beq	r2,zero,2009450 <__udivdi3+0x98>
 200943c:	80a0983a 	sll	r16,r16,r2
 2009440:	98c6d83a 	srl	r3,r19,r3
 2009444:	30a4983a 	sll	r18,r6,r2
 2009448:	98a2983a 	sll	r17,r19,r2
 200944c:	80ecb03a 	or	r22,r16,r3
 2009450:	902ad43a 	srli	r21,r18,16
 2009454:	b009883a 	mov	r4,r22
 2009458:	953fffcc 	andi	r20,r18,65535
 200945c:	a80b883a 	mov	r5,r21
 2009460:	200a02c0 	call	200a02c <__umodsi3>
 2009464:	b009883a 	mov	r4,r22
 2009468:	a80b883a 	mov	r5,r21
 200946c:	1027883a 	mov	r19,r2
 2009470:	200a0240 	call	200a024 <__udivsi3>
 2009474:	1021883a 	mov	r16,r2
 2009478:	8806d43a 	srli	r3,r17,16
 200947c:	9804943a 	slli	r2,r19,16
 2009480:	8527383a 	mul	r19,r16,r20
 2009484:	10c4b03a 	or	r2,r2,r3
 2009488:	14c0052e 	bgeu	r2,r19,20094a0 <__udivdi3+0xe8>
 200948c:	1485883a 	add	r2,r2,r18
 2009490:	80ffffc4 	addi	r3,r16,-1
 2009494:	14800136 	bltu	r2,r18,200949c <__udivdi3+0xe4>
 2009498:	14c13436 	bltu	r2,r19,200996c <__udivdi3+0x5b4>
 200949c:	1821883a 	mov	r16,r3
 20094a0:	14e7c83a 	sub	r19,r2,r19
 20094a4:	9809883a 	mov	r4,r19
 20094a8:	a80b883a 	mov	r5,r21
 20094ac:	200a02c0 	call	200a02c <__umodsi3>
 20094b0:	102d883a 	mov	r22,r2
 20094b4:	9809883a 	mov	r4,r19
 20094b8:	a80b883a 	mov	r5,r21
 20094bc:	200a0240 	call	200a024 <__udivsi3>
 20094c0:	b02c943a 	slli	r22,r22,16
 20094c4:	1529383a 	mul	r20,r2,r20
 20094c8:	8c7fffcc 	andi	r17,r17,65535
 20094cc:	b462b03a 	or	r17,r22,r17
 20094d0:	8d00052e 	bgeu	r17,r20,20094e8 <__udivdi3+0x130>
 20094d4:	8ca3883a 	add	r17,r17,r18
 20094d8:	10ffffc4 	addi	r3,r2,-1
 20094dc:	8c80f636 	bltu	r17,r18,20098b8 <__udivdi3+0x500>
 20094e0:	8d00f52e 	bgeu	r17,r20,20098b8 <__udivdi3+0x500>
 20094e4:	10bfff84 	addi	r2,r2,-2
 20094e8:	8020943a 	slli	r16,r16,16
 20094ec:	0007883a 	mov	r3,zero
 20094f0:	1404b03a 	or	r2,r2,r16
 20094f4:	00005b06 	br	2009664 <__udivdi3+0x2ac>
 20094f8:	29c05836 	bltu	r5,r7,200965c <__udivdi3+0x2a4>
 20094fc:	00bfffd4 	movui	r2,65535
 2009500:	11c0642e 	bgeu	r2,r7,2009694 <__udivdi3+0x2dc>
 2009504:	00804034 	movhi	r2,256
 2009508:	10bfffc4 	addi	r2,r2,-1
 200950c:	11c0f32e 	bgeu	r2,r7,20098dc <__udivdi3+0x524>
 2009510:	00c00604 	movi	r3,24
 2009514:	180b883a 	mov	r5,r3
 2009518:	38c6d83a 	srl	r3,r7,r3
 200951c:	00808074 	movhi	r2,513
 2009520:	10bc6004 	addi	r2,r2,-3712
 2009524:	10c7883a 	add	r3,r2,r3
 2009528:	18c00003 	ldbu	r3,0(r3)
 200952c:	01000804 	movi	r4,32
 2009530:	1947883a 	add	r3,r3,r5
 2009534:	20e5c83a 	sub	r18,r4,r3
 2009538:	9000661e 	bne	r18,zero,20096d4 <__udivdi3+0x31c>
 200953c:	3c00f936 	bltu	r7,r16,2009924 <__udivdi3+0x56c>
 2009540:	9985403a 	cmpgeu	r2,r19,r6
 2009544:	0007883a 	mov	r3,zero
 2009548:	00004606 	br	2009664 <__udivdi3+0x2ac>
 200954c:	3000041e 	bne	r6,zero,2009560 <__udivdi3+0x1a8>
 2009550:	01000044 	movi	r4,1
 2009554:	000b883a 	mov	r5,zero
 2009558:	200a0240 	call	200a024 <__udivsi3>
 200955c:	1025883a 	mov	r18,r2
 2009560:	00bfffd4 	movui	r2,65535
 2009564:	1480562e 	bgeu	r2,r18,20096c0 <__udivdi3+0x308>
 2009568:	00804034 	movhi	r2,256
 200956c:	10bfffc4 	addi	r2,r2,-1
 2009570:	1480e32e 	bgeu	r2,r18,2009900 <__udivdi3+0x548>
 2009574:	00800604 	movi	r2,24
 2009578:	1007883a 	mov	r3,r2
 200957c:	9084d83a 	srl	r2,r18,r2
 2009580:	01008074 	movhi	r4,513
 2009584:	213c6004 	addi	r4,r4,-3712
 2009588:	2085883a 	add	r2,r4,r2
 200958c:	10800003 	ldbu	r2,0(r2)
 2009590:	10c5883a 	add	r2,r2,r3
 2009594:	00c00804 	movi	r3,32
 2009598:	1887c83a 	sub	r3,r3,r2
 200959c:	1800911e 	bne	r3,zero,20097e4 <__udivdi3+0x42c>
 20095a0:	9028d43a 	srli	r20,r18,16
 20095a4:	84a1c83a 	sub	r16,r16,r18
 20095a8:	957fffcc 	andi	r21,r18,65535
 20095ac:	00c00044 	movi	r3,1
 20095b0:	8009883a 	mov	r4,r16
 20095b4:	a00b883a 	mov	r5,r20
 20095b8:	d8c00015 	stw	r3,0(sp)
 20095bc:	200a02c0 	call	200a02c <__umodsi3>
 20095c0:	8009883a 	mov	r4,r16
 20095c4:	a00b883a 	mov	r5,r20
 20095c8:	1027883a 	mov	r19,r2
 20095cc:	200a0240 	call	200a024 <__udivsi3>
 20095d0:	1021883a 	mov	r16,r2
 20095d4:	880cd43a 	srli	r6,r17,16
 20095d8:	9804943a 	slli	r2,r19,16
 20095dc:	8567383a 	mul	r19,r16,r21
 20095e0:	d8c00017 	ldw	r3,0(sp)
 20095e4:	1188b03a 	or	r4,r2,r6
 20095e8:	24c0052e 	bgeu	r4,r19,2009600 <__udivdi3+0x248>
 20095ec:	2489883a 	add	r4,r4,r18
 20095f0:	80bfffc4 	addi	r2,r16,-1
 20095f4:	24800136 	bltu	r4,r18,20095fc <__udivdi3+0x244>
 20095f8:	24c0d936 	bltu	r4,r19,2009960 <__udivdi3+0x5a8>
 20095fc:	1021883a 	mov	r16,r2
 2009600:	24e7c83a 	sub	r19,r4,r19
 2009604:	9809883a 	mov	r4,r19
 2009608:	a00b883a 	mov	r5,r20
 200960c:	d8c00015 	stw	r3,0(sp)
 2009610:	200a02c0 	call	200a02c <__umodsi3>
 2009614:	102d883a 	mov	r22,r2
 2009618:	9809883a 	mov	r4,r19
 200961c:	a00b883a 	mov	r5,r20
 2009620:	200a0240 	call	200a024 <__udivsi3>
 2009624:	b02c943a 	slli	r22,r22,16
 2009628:	156b383a 	mul	r21,r2,r21
 200962c:	8c7fffcc 	andi	r17,r17,65535
 2009630:	b462b03a 	or	r17,r22,r17
 2009634:	d8c00017 	ldw	r3,0(sp)
 2009638:	8d40052e 	bgeu	r17,r21,2009650 <__udivdi3+0x298>
 200963c:	8ca3883a 	add	r17,r17,r18
 2009640:	113fffc4 	addi	r4,r2,-1
 2009644:	8c809a36 	bltu	r17,r18,20098b0 <__udivdi3+0x4f8>
 2009648:	8d40992e 	bgeu	r17,r21,20098b0 <__udivdi3+0x4f8>
 200964c:	10bfff84 	addi	r2,r2,-2
 2009650:	8020943a 	slli	r16,r16,16
 2009654:	1404b03a 	or	r2,r2,r16
 2009658:	00000206 	br	2009664 <__udivdi3+0x2ac>
 200965c:	0007883a 	mov	r3,zero
 2009660:	0005883a 	mov	r2,zero
 2009664:	dfc00a17 	ldw	ra,40(sp)
 2009668:	df000917 	ldw	fp,36(sp)
 200966c:	ddc00817 	ldw	r23,32(sp)
 2009670:	dd800717 	ldw	r22,28(sp)
 2009674:	dd400617 	ldw	r21,24(sp)
 2009678:	dd000517 	ldw	r20,20(sp)
 200967c:	dcc00417 	ldw	r19,16(sp)
 2009680:	dc800317 	ldw	r18,12(sp)
 2009684:	dc400217 	ldw	r17,8(sp)
 2009688:	dc000117 	ldw	r16,4(sp)
 200968c:	dec00b04 	addi	sp,sp,44
 2009690:	f800283a 	ret
 2009694:	00803fc4 	movi	r2,255
 2009698:	11c0932e 	bgeu	r2,r7,20098e8 <__udivdi3+0x530>
 200969c:	00c00204 	movi	r3,8
 20096a0:	180b883a 	mov	r5,r3
 20096a4:	003f9c06 	br	2009518 <__udivdi3+0x160>
 20096a8:	00804034 	movhi	r2,256
 20096ac:	10bfffc4 	addi	r2,r2,-1
 20096b0:	1180902e 	bgeu	r2,r6,20098f4 <__udivdi3+0x53c>
 20096b4:	00800604 	movi	r2,24
 20096b8:	1007883a 	mov	r3,r2
 20096bc:	003f5606 	br	2009418 <__udivdi3+0x60>
 20096c0:	00803fc4 	movi	r2,255
 20096c4:	1480912e 	bgeu	r2,r18,200990c <__udivdi3+0x554>
 20096c8:	00800204 	movi	r2,8
 20096cc:	1007883a 	mov	r3,r2
 20096d0:	003faa06 	br	200957c <__udivdi3+0x1c4>
 20096d4:	30eed83a 	srl	r23,r6,r3
 20096d8:	3c8e983a 	sll	r7,r7,r18
 20096dc:	80f8d83a 	srl	fp,r16,r3
 20096e0:	98c6d83a 	srl	r3,r19,r3
 20096e4:	3deeb03a 	or	r23,r7,r23
 20096e8:	b828d43a 	srli	r20,r23,16
 20096ec:	84a0983a 	sll	r16,r16,r18
 20096f0:	e009883a 	mov	r4,fp
 20096f4:	a00b883a 	mov	r5,r20
 20096f8:	80e2b03a 	or	r17,r16,r3
 20096fc:	34aa983a 	sll	r21,r6,r18
 2009700:	200a02c0 	call	200a02c <__umodsi3>
 2009704:	e009883a 	mov	r4,fp
 2009708:	a00b883a 	mov	r5,r20
 200970c:	102d883a 	mov	r22,r2
 2009710:	200a0240 	call	200a024 <__udivsi3>
 2009714:	1021883a 	mov	r16,r2
 2009718:	bf3fffcc 	andi	fp,r23,65535
 200971c:	b004943a 	slli	r2,r22,16
 2009720:	8808d43a 	srli	r4,r17,16
 2009724:	872d383a 	mul	r22,r16,fp
 2009728:	1104b03a 	or	r2,r2,r4
 200972c:	1580042e 	bgeu	r2,r22,2009740 <__udivdi3+0x388>
 2009730:	15c5883a 	add	r2,r2,r23
 2009734:	80ffffc4 	addi	r3,r16,-1
 2009738:	15c0812e 	bgeu	r2,r23,2009940 <__udivdi3+0x588>
 200973c:	1821883a 	mov	r16,r3
 2009740:	15adc83a 	sub	r22,r2,r22
 2009744:	b009883a 	mov	r4,r22
 2009748:	a00b883a 	mov	r5,r20
 200974c:	200a02c0 	call	200a02c <__umodsi3>
 2009750:	a00b883a 	mov	r5,r20
 2009754:	b009883a 	mov	r4,r22
 2009758:	d8800015 	stw	r2,0(sp)
 200975c:	200a0240 	call	200a024 <__udivsi3>
 2009760:	d8c00017 	ldw	r3,0(sp)
 2009764:	170b383a 	mul	r5,r2,fp
 2009768:	8c7fffcc 	andi	r17,r17,65535
 200976c:	1806943a 	slli	r3,r3,16
 2009770:	1c46b03a 	or	r3,r3,r17
 2009774:	1940042e 	bgeu	r3,r5,2009788 <__udivdi3+0x3d0>
 2009778:	1dc7883a 	add	r3,r3,r23
 200977c:	113fffc4 	addi	r4,r2,-1
 2009780:	1dc06b2e 	bgeu	r3,r23,2009930 <__udivdi3+0x578>
 2009784:	2005883a 	mov	r2,r4
 2009788:	8020943a 	slli	r16,r16,16
 200978c:	a9ffffcc 	andi	r7,r21,65535
 2009790:	a82ad43a 	srli	r21,r21,16
 2009794:	1404b03a 	or	r2,r2,r16
 2009798:	113fffcc 	andi	r4,r2,65535
 200979c:	100cd43a 	srli	r6,r2,16
 20097a0:	21d3383a 	mul	r9,r4,r7
 20097a4:	2549383a 	mul	r4,r4,r21
 20097a8:	31cf383a 	mul	r7,r6,r7
 20097ac:	4810d43a 	srli	r8,r9,16
 20097b0:	1947c83a 	sub	r3,r3,r5
 20097b4:	3909883a 	add	r4,r7,r4
 20097b8:	2209883a 	add	r4,r4,r8
 20097bc:	354d383a 	mul	r6,r6,r21
 20097c0:	21c0022e 	bgeu	r4,r7,20097cc <__udivdi3+0x414>
 20097c4:	01400074 	movhi	r5,1
 20097c8:	314d883a 	add	r6,r6,r5
 20097cc:	202ad43a 	srli	r21,r4,16
 20097d0:	354d883a 	add	r6,r6,r21
 20097d4:	19803f36 	bltu	r3,r6,20098d4 <__udivdi3+0x51c>
 20097d8:	19803926 	beq	r3,r6,20098c0 <__udivdi3+0x508>
 20097dc:	0007883a 	mov	r3,zero
 20097e0:	003fa006 	br	2009664 <__udivdi3+0x2ac>
 20097e4:	90e4983a 	sll	r18,r18,r3
 20097e8:	80aad83a 	srl	r21,r16,r2
 20097ec:	80e0983a 	sll	r16,r16,r3
 20097f0:	9028d43a 	srli	r20,r18,16
 20097f4:	9884d83a 	srl	r2,r19,r2
 20097f8:	a809883a 	mov	r4,r21
 20097fc:	a00b883a 	mov	r5,r20
 2009800:	80acb03a 	or	r22,r16,r2
 2009804:	98e2983a 	sll	r17,r19,r3
 2009808:	200a02c0 	call	200a02c <__umodsi3>
 200980c:	a809883a 	mov	r4,r21
 2009810:	a00b883a 	mov	r5,r20
 2009814:	1021883a 	mov	r16,r2
 2009818:	200a0240 	call	200a024 <__udivsi3>
 200981c:	957fffcc 	andi	r21,r18,65535
 2009820:	8020943a 	slli	r16,r16,16
 2009824:	b00ad43a 	srli	r5,r22,16
 2009828:	1567383a 	mul	r19,r2,r21
 200982c:	102f883a 	mov	r23,r2
 2009830:	8148b03a 	or	r4,r16,r5
 2009834:	24c0062e 	bgeu	r4,r19,2009850 <__udivdi3+0x498>
 2009838:	2489883a 	add	r4,r4,r18
 200983c:	10bfffc4 	addi	r2,r2,-1
 2009840:	24804536 	bltu	r4,r18,2009958 <__udivdi3+0x5a0>
 2009844:	24c0442e 	bgeu	r4,r19,2009958 <__udivdi3+0x5a0>
 2009848:	bdffff84 	addi	r23,r23,-2
 200984c:	2489883a 	add	r4,r4,r18
 2009850:	24e7c83a 	sub	r19,r4,r19
 2009854:	9809883a 	mov	r4,r19
 2009858:	a00b883a 	mov	r5,r20
 200985c:	200a02c0 	call	200a02c <__umodsi3>
 2009860:	1021883a 	mov	r16,r2
 2009864:	9809883a 	mov	r4,r19
 2009868:	a00b883a 	mov	r5,r20
 200986c:	200a0240 	call	200a024 <__udivsi3>
 2009870:	8020943a 	slli	r16,r16,16
 2009874:	1007883a 	mov	r3,r2
 2009878:	1545383a 	mul	r2,r2,r21
 200987c:	b13fffcc 	andi	r4,r22,65535
 2009880:	8108b03a 	or	r4,r16,r4
 2009884:	2080062e 	bgeu	r4,r2,20098a0 <__udivdi3+0x4e8>
 2009888:	2489883a 	add	r4,r4,r18
 200988c:	197fffc4 	addi	r5,r3,-1
 2009890:	24802f36 	bltu	r4,r18,2009950 <__udivdi3+0x598>
 2009894:	20802e2e 	bgeu	r4,r2,2009950 <__udivdi3+0x598>
 2009898:	18ffff84 	addi	r3,r3,-2
 200989c:	2489883a 	add	r4,r4,r18
 20098a0:	b82e943a 	slli	r23,r23,16
 20098a4:	20a1c83a 	sub	r16,r4,r2
 20098a8:	1dc6b03a 	or	r3,r3,r23
 20098ac:	003f4006 	br	20095b0 <__udivdi3+0x1f8>
 20098b0:	2005883a 	mov	r2,r4
 20098b4:	003f6606 	br	2009650 <__udivdi3+0x298>
 20098b8:	1805883a 	mov	r2,r3
 20098bc:	003f0a06 	br	20094e8 <__udivdi3+0x130>
 20098c0:	2006943a 	slli	r3,r4,16
 20098c4:	9c88983a 	sll	r4,r19,r18
 20098c8:	4a7fffcc 	andi	r9,r9,65535
 20098cc:	1a47883a 	add	r3,r3,r9
 20098d0:	20ffc22e 	bgeu	r4,r3,20097dc <__udivdi3+0x424>
 20098d4:	10bfffc4 	addi	r2,r2,-1
 20098d8:	003fc006 	br	20097dc <__udivdi3+0x424>
 20098dc:	00c00404 	movi	r3,16
 20098e0:	180b883a 	mov	r5,r3
 20098e4:	003f0c06 	br	2009518 <__udivdi3+0x160>
 20098e8:	0007883a 	mov	r3,zero
 20098ec:	000b883a 	mov	r5,zero
 20098f0:	003f0906 	br	2009518 <__udivdi3+0x160>
 20098f4:	00800404 	movi	r2,16
 20098f8:	1007883a 	mov	r3,r2
 20098fc:	003ec606 	br	2009418 <__udivdi3+0x60>
 2009900:	00800404 	movi	r2,16
 2009904:	1007883a 	mov	r3,r2
 2009908:	003f1c06 	br	200957c <__udivdi3+0x1c4>
 200990c:	0005883a 	mov	r2,zero
 2009910:	0007883a 	mov	r3,zero
 2009914:	003f1906 	br	200957c <__udivdi3+0x1c4>
 2009918:	0005883a 	mov	r2,zero
 200991c:	0007883a 	mov	r3,zero
 2009920:	003ebd06 	br	2009418 <__udivdi3+0x60>
 2009924:	0007883a 	mov	r3,zero
 2009928:	00800044 	movi	r2,1
 200992c:	003f4d06 	br	2009664 <__udivdi3+0x2ac>
 2009930:	197f942e 	bgeu	r3,r5,2009784 <__udivdi3+0x3cc>
 2009934:	10bfff84 	addi	r2,r2,-2
 2009938:	1dc7883a 	add	r3,r3,r23
 200993c:	003f9206 	br	2009788 <__udivdi3+0x3d0>
 2009940:	15bf7e2e 	bgeu	r2,r22,200973c <__udivdi3+0x384>
 2009944:	843fff84 	addi	r16,r16,-2
 2009948:	15c5883a 	add	r2,r2,r23
 200994c:	003f7c06 	br	2009740 <__udivdi3+0x388>
 2009950:	2807883a 	mov	r3,r5
 2009954:	003fd206 	br	20098a0 <__udivdi3+0x4e8>
 2009958:	102f883a 	mov	r23,r2
 200995c:	003fbc06 	br	2009850 <__udivdi3+0x498>
 2009960:	843fff84 	addi	r16,r16,-2
 2009964:	2489883a 	add	r4,r4,r18
 2009968:	003f2506 	br	2009600 <__udivdi3+0x248>
 200996c:	843fff84 	addi	r16,r16,-2
 2009970:	1485883a 	add	r2,r2,r18
 2009974:	003eca06 	br	20094a0 <__udivdi3+0xe8>

02009978 <__umoddi3>:
 2009978:	defff404 	addi	sp,sp,-48
 200997c:	ddc00915 	stw	r23,36(sp)
 2009980:	dc400315 	stw	r17,12(sp)
 2009984:	dc000215 	stw	r16,8(sp)
 2009988:	dfc00b15 	stw	ra,44(sp)
 200998c:	df000a15 	stw	fp,40(sp)
 2009990:	dd800815 	stw	r22,32(sp)
 2009994:	dd400715 	stw	r21,28(sp)
 2009998:	dd000615 	stw	r20,24(sp)
 200999c:	dcc00515 	stw	r19,20(sp)
 20099a0:	dc800415 	stw	r18,16(sp)
 20099a4:	2021883a 	mov	r16,r4
 20099a8:	2823883a 	mov	r17,r5
 20099ac:	282f883a 	mov	r23,r5
 20099b0:	3800381e 	bne	r7,zero,2009a94 <__umoddi3+0x11c>
 20099b4:	3027883a 	mov	r19,r6
 20099b8:	2029883a 	mov	r20,r4
 20099bc:	29804e2e 	bgeu	r5,r6,2009af8 <__umoddi3+0x180>
 20099c0:	00bfffd4 	movui	r2,65535
 20099c4:	11809c36 	bltu	r2,r6,2009c38 <__umoddi3+0x2c0>
 20099c8:	00803fc4 	movi	r2,255
 20099cc:	11813b2e 	bgeu	r2,r6,2009ebc <__umoddi3+0x544>
 20099d0:	01400204 	movi	r5,8
 20099d4:	2805883a 	mov	r2,r5
 20099d8:	314ad83a 	srl	r5,r6,r5
 20099dc:	00c08074 	movhi	r3,513
 20099e0:	18fc6004 	addi	r3,r3,-3712
 20099e4:	194b883a 	add	r5,r3,r5
 20099e8:	29000003 	ldbu	r4,0(r5)
 20099ec:	2089883a 	add	r4,r4,r2
 20099f0:	00800804 	movi	r2,32
 20099f4:	1105c83a 	sub	r2,r2,r4
 20099f8:	1000ec26 	beq	r2,zero,2009dac <__umoddi3+0x434>
 20099fc:	88a2983a 	sll	r17,r17,r2
 2009a00:	8108d83a 	srl	r4,r16,r4
 2009a04:	30a6983a 	sll	r19,r6,r2
 2009a08:	80a8983a 	sll	r20,r16,r2
 2009a0c:	1025883a 	mov	r18,r2
 2009a10:	892eb03a 	or	r23,r17,r4
 2009a14:	982cd43a 	srli	r22,r19,16
 2009a18:	b809883a 	mov	r4,r23
 2009a1c:	9d7fffcc 	andi	r21,r19,65535
 2009a20:	b00b883a 	mov	r5,r22
 2009a24:	200a02c0 	call	200a02c <__umodsi3>
 2009a28:	b809883a 	mov	r4,r23
 2009a2c:	b00b883a 	mov	r5,r22
 2009a30:	1021883a 	mov	r16,r2
 2009a34:	200a0240 	call	200a024 <__udivsi3>
 2009a38:	8020943a 	slli	r16,r16,16
 2009a3c:	a00cd43a 	srli	r6,r20,16
 2009a40:	1545383a 	mul	r2,r2,r21
 2009a44:	8188b03a 	or	r4,r16,r6
 2009a48:	2080042e 	bgeu	r4,r2,2009a5c <__umoddi3+0xe4>
 2009a4c:	24c9883a 	add	r4,r4,r19
 2009a50:	24c00236 	bltu	r4,r19,2009a5c <__umoddi3+0xe4>
 2009a54:	2080012e 	bgeu	r4,r2,2009a5c <__umoddi3+0xe4>
 2009a58:	24c9883a 	add	r4,r4,r19
 2009a5c:	20a3c83a 	sub	r17,r4,r2
 2009a60:	8809883a 	mov	r4,r17
 2009a64:	b00b883a 	mov	r5,r22
 2009a68:	200a02c0 	call	200a02c <__umodsi3>
 2009a6c:	8809883a 	mov	r4,r17
 2009a70:	b00b883a 	mov	r5,r22
 2009a74:	1021883a 	mov	r16,r2
 2009a78:	200a0240 	call	200a024 <__udivsi3>
 2009a7c:	8006943a 	slli	r3,r16,16
 2009a80:	1545383a 	mul	r2,r2,r21
 2009a84:	a13fffcc 	andi	r4,r20,65535
 2009a88:	1906b03a 	or	r3,r3,r4
 2009a8c:	1880532e 	bgeu	r3,r2,2009bdc <__umoddi3+0x264>
 2009a90:	00004e06 	br	2009bcc <__umoddi3+0x254>
 2009a94:	29c05536 	bltu	r5,r7,2009bec <__umoddi3+0x274>
 2009a98:	00bfffd4 	movui	r2,65535
 2009a9c:	11c0612e 	bgeu	r2,r7,2009c24 <__umoddi3+0x2ac>
 2009aa0:	00804034 	movhi	r2,256
 2009aa4:	10bfffc4 	addi	r2,r2,-1
 2009aa8:	11c0f82e 	bgeu	r2,r7,2009e8c <__umoddi3+0x514>
 2009aac:	01400604 	movi	r5,24
 2009ab0:	282b883a 	mov	r21,r5
 2009ab4:	394ad83a 	srl	r5,r7,r5
 2009ab8:	00c08074 	movhi	r3,513
 2009abc:	18fc6004 	addi	r3,r3,-3712
 2009ac0:	194b883a 	add	r5,r3,r5
 2009ac4:	28800003 	ldbu	r2,0(r5)
 2009ac8:	00c00804 	movi	r3,32
 2009acc:	156b883a 	add	r21,r2,r21
 2009ad0:	1d69c83a 	sub	r20,r3,r21
 2009ad4:	a000631e 	bne	r20,zero,2009c64 <__umoddi3+0x2ec>
 2009ad8:	3c400136 	bltu	r7,r17,2009ae0 <__umoddi3+0x168>
 2009adc:	81810436 	bltu	r16,r6,2009ef0 <__umoddi3+0x578>
 2009ae0:	8185c83a 	sub	r2,r16,r6
 2009ae4:	89e3c83a 	sub	r17,r17,r7
 2009ae8:	8087803a 	cmpltu	r3,r16,r2
 2009aec:	88efc83a 	sub	r23,r17,r3
 2009af0:	b807883a 	mov	r3,r23
 2009af4:	00003f06 	br	2009bf4 <__umoddi3+0x27c>
 2009af8:	3000041e 	bne	r6,zero,2009b0c <__umoddi3+0x194>
 2009afc:	01000044 	movi	r4,1
 2009b00:	000b883a 	mov	r5,zero
 2009b04:	200a0240 	call	200a024 <__udivsi3>
 2009b08:	1027883a 	mov	r19,r2
 2009b0c:	00bfffd4 	movui	r2,65535
 2009b10:	14c04f2e 	bgeu	r2,r19,2009c50 <__umoddi3+0x2d8>
 2009b14:	00804034 	movhi	r2,256
 2009b18:	10bfffc4 	addi	r2,r2,-1
 2009b1c:	14c0e42e 	bgeu	r2,r19,2009eb0 <__umoddi3+0x538>
 2009b20:	00800604 	movi	r2,24
 2009b24:	1007883a 	mov	r3,r2
 2009b28:	9884d83a 	srl	r2,r19,r2
 2009b2c:	01008074 	movhi	r4,513
 2009b30:	213c6004 	addi	r4,r4,-3712
 2009b34:	2085883a 	add	r2,r4,r2
 2009b38:	11000003 	ldbu	r4,0(r2)
 2009b3c:	00800804 	movi	r2,32
 2009b40:	20c7883a 	add	r3,r4,r3
 2009b44:	10c5c83a 	sub	r2,r2,r3
 2009b48:	10009a1e 	bne	r2,zero,2009db4 <__umoddi3+0x43c>
 2009b4c:	982cd43a 	srli	r22,r19,16
 2009b50:	8ce3c83a 	sub	r17,r17,r19
 2009b54:	9c3fffcc 	andi	r16,r19,65535
 2009b58:	0025883a 	mov	r18,zero
 2009b5c:	8809883a 	mov	r4,r17
 2009b60:	b00b883a 	mov	r5,r22
 2009b64:	200a02c0 	call	200a02c <__umodsi3>
 2009b68:	8809883a 	mov	r4,r17
 2009b6c:	b00b883a 	mov	r5,r22
 2009b70:	102b883a 	mov	r21,r2
 2009b74:	200a0240 	call	200a024 <__udivsi3>
 2009b78:	a806943a 	slli	r3,r21,16
 2009b7c:	a008d43a 	srli	r4,r20,16
 2009b80:	1405383a 	mul	r2,r2,r16
 2009b84:	190cb03a 	or	r6,r3,r4
 2009b88:	3080032e 	bgeu	r6,r2,2009b98 <__umoddi3+0x220>
 2009b8c:	34cd883a 	add	r6,r6,r19
 2009b90:	34c00136 	bltu	r6,r19,2009b98 <__umoddi3+0x220>
 2009b94:	3080d436 	bltu	r6,r2,2009ee8 <__umoddi3+0x570>
 2009b98:	30abc83a 	sub	r21,r6,r2
 2009b9c:	a809883a 	mov	r4,r21
 2009ba0:	b00b883a 	mov	r5,r22
 2009ba4:	200a02c0 	call	200a02c <__umodsi3>
 2009ba8:	1023883a 	mov	r17,r2
 2009bac:	a809883a 	mov	r4,r21
 2009bb0:	b00b883a 	mov	r5,r22
 2009bb4:	200a0240 	call	200a024 <__udivsi3>
 2009bb8:	8822943a 	slli	r17,r17,16
 2009bbc:	1405383a 	mul	r2,r2,r16
 2009bc0:	a13fffcc 	andi	r4,r20,65535
 2009bc4:	8906b03a 	or	r3,r17,r4
 2009bc8:	1880042e 	bgeu	r3,r2,2009bdc <__umoddi3+0x264>
 2009bcc:	1cc7883a 	add	r3,r3,r19
 2009bd0:	1cc00236 	bltu	r3,r19,2009bdc <__umoddi3+0x264>
 2009bd4:	1880012e 	bgeu	r3,r2,2009bdc <__umoddi3+0x264>
 2009bd8:	1cc7883a 	add	r3,r3,r19
 2009bdc:	1887c83a 	sub	r3,r3,r2
 2009be0:	1c84d83a 	srl	r2,r3,r18
 2009be4:	0007883a 	mov	r3,zero
 2009be8:	00000206 	br	2009bf4 <__umoddi3+0x27c>
 2009bec:	2005883a 	mov	r2,r4
 2009bf0:	2807883a 	mov	r3,r5
 2009bf4:	dfc00b17 	ldw	ra,44(sp)
 2009bf8:	df000a17 	ldw	fp,40(sp)
 2009bfc:	ddc00917 	ldw	r23,36(sp)
 2009c00:	dd800817 	ldw	r22,32(sp)
 2009c04:	dd400717 	ldw	r21,28(sp)
 2009c08:	dd000617 	ldw	r20,24(sp)
 2009c0c:	dcc00517 	ldw	r19,20(sp)
 2009c10:	dc800417 	ldw	r18,16(sp)
 2009c14:	dc400317 	ldw	r17,12(sp)
 2009c18:	dc000217 	ldw	r16,8(sp)
 2009c1c:	dec00c04 	addi	sp,sp,48
 2009c20:	f800283a 	ret
 2009c24:	00803fc4 	movi	r2,255
 2009c28:	11c0952e 	bgeu	r2,r7,2009e80 <__umoddi3+0x508>
 2009c2c:	01400204 	movi	r5,8
 2009c30:	282b883a 	mov	r21,r5
 2009c34:	003f9f06 	br	2009ab4 <__umoddi3+0x13c>
 2009c38:	00804034 	movhi	r2,256
 2009c3c:	10bfffc4 	addi	r2,r2,-1
 2009c40:	1180952e 	bgeu	r2,r6,2009e98 <__umoddi3+0x520>
 2009c44:	01400604 	movi	r5,24
 2009c48:	2805883a 	mov	r2,r5
 2009c4c:	003f6206 	br	20099d8 <__umoddi3+0x60>
 2009c50:	00803fc4 	movi	r2,255
 2009c54:	14c0932e 	bgeu	r2,r19,2009ea4 <__umoddi3+0x52c>
 2009c58:	00800204 	movi	r2,8
 2009c5c:	1007883a 	mov	r3,r2
 2009c60:	003fb106 	br	2009b28 <__umoddi3+0x1b0>
 2009c64:	3548d83a 	srl	r4,r6,r21
 2009c68:	3d0e983a 	sll	r7,r7,r20
 2009c6c:	8d10983a 	sll	r8,r17,r20
 2009c70:	8d6cd83a 	srl	r22,r17,r21
 2009c74:	3922b03a 	or	r17,r7,r4
 2009c78:	882ed43a 	srli	r23,r17,16
 2009c7c:	8564d83a 	srl	r18,r16,r21
 2009c80:	b009883a 	mov	r4,r22
 2009c84:	b80b883a 	mov	r5,r23
 2009c88:	44a4b03a 	or	r18,r8,r18
 2009c8c:	3526983a 	sll	r19,r6,r20
 2009c90:	200a02c0 	call	200a02c <__umodsi3>
 2009c94:	b009883a 	mov	r4,r22
 2009c98:	b80b883a 	mov	r5,r23
 2009c9c:	1039883a 	mov	fp,r2
 2009ca0:	200a0240 	call	200a024 <__udivsi3>
 2009ca4:	102d883a 	mov	r22,r2
 2009ca8:	8a3fffcc 	andi	r8,r17,65535
 2009cac:	e004943a 	slli	r2,fp,16
 2009cb0:	900cd43a 	srli	r6,r18,16
 2009cb4:	b239383a 	mul	fp,r22,r8
 2009cb8:	8520983a 	sll	r16,r16,r20
 2009cbc:	118ab03a 	or	r5,r2,r6
 2009cc0:	2f00042e 	bgeu	r5,fp,2009cd4 <__umoddi3+0x35c>
 2009cc4:	2c4b883a 	add	r5,r5,r17
 2009cc8:	b0bfffc4 	addi	r2,r22,-1
 2009ccc:	2c40822e 	bgeu	r5,r17,2009ed8 <__umoddi3+0x560>
 2009cd0:	102d883a 	mov	r22,r2
 2009cd4:	2f39c83a 	sub	fp,r5,fp
 2009cd8:	e009883a 	mov	r4,fp
 2009cdc:	b80b883a 	mov	r5,r23
 2009ce0:	da000115 	stw	r8,4(sp)
 2009ce4:	200a02c0 	call	200a02c <__umodsi3>
 2009ce8:	e009883a 	mov	r4,fp
 2009cec:	b80b883a 	mov	r5,r23
 2009cf0:	d8800015 	stw	r2,0(sp)
 2009cf4:	200a0240 	call	200a024 <__udivsi3>
 2009cf8:	d9800017 	ldw	r6,0(sp)
 2009cfc:	da000117 	ldw	r8,4(sp)
 2009d00:	94bfffcc 	andi	r18,r18,65535
 2009d04:	300c943a 	slli	r6,r6,16
 2009d08:	1209383a 	mul	r4,r2,r8
 2009d0c:	3490b03a 	or	r8,r6,r18
 2009d10:	4100042e 	bgeu	r8,r4,2009d24 <__umoddi3+0x3ac>
 2009d14:	4451883a 	add	r8,r8,r17
 2009d18:	10ffffc4 	addi	r3,r2,-1
 2009d1c:	44406a2e 	bgeu	r8,r17,2009ec8 <__umoddi3+0x550>
 2009d20:	1805883a 	mov	r2,r3
 2009d24:	b012943a 	slli	r9,r22,16
 2009d28:	9abfffcc 	andi	r10,r19,65535
 2009d2c:	980ed43a 	srli	r7,r19,16
 2009d30:	124ab03a 	or	r5,r2,r9
 2009d34:	2a7fffcc 	andi	r9,r5,65535
 2009d38:	280ad43a 	srli	r5,r5,16
 2009d3c:	4a8d383a 	mul	r6,r9,r10
 2009d40:	49d3383a 	mul	r9,r9,r7
 2009d44:	2a95383a 	mul	r10,r5,r10
 2009d48:	3004d43a 	srli	r2,r6,16
 2009d4c:	4111c83a 	sub	r8,r8,r4
 2009d50:	5253883a 	add	r9,r10,r9
 2009d54:	4893883a 	add	r9,r9,r2
 2009d58:	29cb383a 	mul	r5,r5,r7
 2009d5c:	4a80022e 	bgeu	r9,r10,2009d68 <__umoddi3+0x3f0>
 2009d60:	00800074 	movhi	r2,1
 2009d64:	288b883a 	add	r5,r5,r2
 2009d68:	4808d43a 	srli	r4,r9,16
 2009d6c:	4812943a 	slli	r9,r9,16
 2009d70:	31bfffcc 	andi	r6,r6,65535
 2009d74:	290b883a 	add	r5,r5,r4
 2009d78:	498d883a 	add	r6,r9,r6
 2009d7c:	41403a36 	bltu	r8,r5,2009e68 <__umoddi3+0x4f0>
 2009d80:	41405d26 	beq	r8,r5,2009ef8 <__umoddi3+0x580>
 2009d84:	4149c83a 	sub	r4,r8,r5
 2009d88:	300f883a 	mov	r7,r6
 2009d8c:	81cfc83a 	sub	r7,r16,r7
 2009d90:	81c7803a 	cmpltu	r3,r16,r7
 2009d94:	20c7c83a 	sub	r3,r4,r3
 2009d98:	1d44983a 	sll	r2,r3,r21
 2009d9c:	3d0ed83a 	srl	r7,r7,r20
 2009da0:	1d06d83a 	srl	r3,r3,r20
 2009da4:	11c4b03a 	or	r2,r2,r7
 2009da8:	003f9206 	br	2009bf4 <__umoddi3+0x27c>
 2009dac:	0025883a 	mov	r18,zero
 2009db0:	003f1806 	br	2009a14 <__umoddi3+0x9c>
 2009db4:	98a6983a 	sll	r19,r19,r2
 2009db8:	88e8d83a 	srl	r20,r17,r3
 2009dbc:	80c6d83a 	srl	r3,r16,r3
 2009dc0:	982cd43a 	srli	r22,r19,16
 2009dc4:	88a2983a 	sll	r17,r17,r2
 2009dc8:	a009883a 	mov	r4,r20
 2009dcc:	b00b883a 	mov	r5,r22
 2009dd0:	88eab03a 	or	r21,r17,r3
 2009dd4:	1025883a 	mov	r18,r2
 2009dd8:	200a02c0 	call	200a02c <__umodsi3>
 2009ddc:	a009883a 	mov	r4,r20
 2009de0:	b00b883a 	mov	r5,r22
 2009de4:	1023883a 	mov	r17,r2
 2009de8:	200a0240 	call	200a024 <__udivsi3>
 2009dec:	9f3fffcc 	andi	fp,r19,65535
 2009df0:	8822943a 	slli	r17,r17,16
 2009df4:	a80ad43a 	srli	r5,r21,16
 2009df8:	1705383a 	mul	r2,r2,fp
 2009dfc:	84a8983a 	sll	r20,r16,r18
 2009e00:	8948b03a 	or	r4,r17,r5
 2009e04:	2080042e 	bgeu	r4,r2,2009e18 <__umoddi3+0x4a0>
 2009e08:	24c9883a 	add	r4,r4,r19
 2009e0c:	24c00236 	bltu	r4,r19,2009e18 <__umoddi3+0x4a0>
 2009e10:	2080012e 	bgeu	r4,r2,2009e18 <__umoddi3+0x4a0>
 2009e14:	24c9883a 	add	r4,r4,r19
 2009e18:	20afc83a 	sub	r23,r4,r2
 2009e1c:	b809883a 	mov	r4,r23
 2009e20:	b00b883a 	mov	r5,r22
 2009e24:	200a02c0 	call	200a02c <__umodsi3>
 2009e28:	1023883a 	mov	r17,r2
 2009e2c:	b809883a 	mov	r4,r23
 2009e30:	b00b883a 	mov	r5,r22
 2009e34:	200a0240 	call	200a024 <__udivsi3>
 2009e38:	8822943a 	slli	r17,r17,16
 2009e3c:	1705383a 	mul	r2,r2,fp
 2009e40:	a93fffcc 	andi	r4,r21,65535
 2009e44:	8908b03a 	or	r4,r17,r4
 2009e48:	2080042e 	bgeu	r4,r2,2009e5c <__umoddi3+0x4e4>
 2009e4c:	24c9883a 	add	r4,r4,r19
 2009e50:	24c00236 	bltu	r4,r19,2009e5c <__umoddi3+0x4e4>
 2009e54:	2080012e 	bgeu	r4,r2,2009e5c <__umoddi3+0x4e4>
 2009e58:	24c9883a 	add	r4,r4,r19
 2009e5c:	20a3c83a 	sub	r17,r4,r2
 2009e60:	e021883a 	mov	r16,fp
 2009e64:	003f3d06 	br	2009b5c <__umoddi3+0x1e4>
 2009e68:	34cfc83a 	sub	r7,r6,r19
 2009e6c:	2c4bc83a 	sub	r5,r5,r17
 2009e70:	31cd803a 	cmpltu	r6,r6,r7
 2009e74:	298dc83a 	sub	r6,r5,r6
 2009e78:	4189c83a 	sub	r4,r8,r6
 2009e7c:	003fc306 	br	2009d8c <__umoddi3+0x414>
 2009e80:	000b883a 	mov	r5,zero
 2009e84:	002b883a 	mov	r21,zero
 2009e88:	003f0a06 	br	2009ab4 <__umoddi3+0x13c>
 2009e8c:	01400404 	movi	r5,16
 2009e90:	282b883a 	mov	r21,r5
 2009e94:	003f0706 	br	2009ab4 <__umoddi3+0x13c>
 2009e98:	01400404 	movi	r5,16
 2009e9c:	2805883a 	mov	r2,r5
 2009ea0:	003ecd06 	br	20099d8 <__umoddi3+0x60>
 2009ea4:	0005883a 	mov	r2,zero
 2009ea8:	0007883a 	mov	r3,zero
 2009eac:	003f1e06 	br	2009b28 <__umoddi3+0x1b0>
 2009eb0:	00800404 	movi	r2,16
 2009eb4:	1007883a 	mov	r3,r2
 2009eb8:	003f1b06 	br	2009b28 <__umoddi3+0x1b0>
 2009ebc:	000b883a 	mov	r5,zero
 2009ec0:	0005883a 	mov	r2,zero
 2009ec4:	003ec406 	br	20099d8 <__umoddi3+0x60>
 2009ec8:	413f952e 	bgeu	r8,r4,2009d20 <__umoddi3+0x3a8>
 2009ecc:	10bfff84 	addi	r2,r2,-2
 2009ed0:	4451883a 	add	r8,r8,r17
 2009ed4:	003f9306 	br	2009d24 <__umoddi3+0x3ac>
 2009ed8:	2f3f7d2e 	bgeu	r5,fp,2009cd0 <__umoddi3+0x358>
 2009edc:	b5bfff84 	addi	r22,r22,-2
 2009ee0:	2c4b883a 	add	r5,r5,r17
 2009ee4:	003f7b06 	br	2009cd4 <__umoddi3+0x35c>
 2009ee8:	34cd883a 	add	r6,r6,r19
 2009eec:	003f2a06 	br	2009b98 <__umoddi3+0x220>
 2009ef0:	8005883a 	mov	r2,r16
 2009ef4:	003efe06 	br	2009af0 <__umoddi3+0x178>
 2009ef8:	81bfdb36 	bltu	r16,r6,2009e68 <__umoddi3+0x4f0>
 2009efc:	300f883a 	mov	r7,r6
 2009f00:	0009883a 	mov	r4,zero
 2009f04:	003fa106 	br	2009d8c <__umoddi3+0x414>

02009f08 <udivmodsi4>:
 2009f08:	2900182e 	bgeu	r5,r4,2009f6c <udivmodsi4+0x64>
 2009f0c:	28001716 	blt	r5,zero,2009f6c <udivmodsi4+0x64>
 2009f10:	00800804 	movi	r2,32
 2009f14:	00c00044 	movi	r3,1
 2009f18:	00000206 	br	2009f24 <udivmodsi4+0x1c>
 2009f1c:	10001126 	beq	r2,zero,2009f64 <udivmodsi4+0x5c>
 2009f20:	28000516 	blt	r5,zero,2009f38 <udivmodsi4+0x30>
 2009f24:	294b883a 	add	r5,r5,r5
 2009f28:	10bfffc4 	addi	r2,r2,-1
 2009f2c:	18c7883a 	add	r3,r3,r3
 2009f30:	293ffa36 	bltu	r5,r4,2009f1c <udivmodsi4+0x14>
 2009f34:	18000b26 	beq	r3,zero,2009f64 <udivmodsi4+0x5c>
 2009f38:	0005883a 	mov	r2,zero
 2009f3c:	21400236 	bltu	r4,r5,2009f48 <udivmodsi4+0x40>
 2009f40:	2149c83a 	sub	r4,r4,r5
 2009f44:	10c4b03a 	or	r2,r2,r3
 2009f48:	1806d07a 	srli	r3,r3,1
 2009f4c:	280ad07a 	srli	r5,r5,1
 2009f50:	183ffa1e 	bne	r3,zero,2009f3c <udivmodsi4+0x34>
 2009f54:	3000011e 	bne	r6,zero,2009f5c <udivmodsi4+0x54>
 2009f58:	f800283a 	ret
 2009f5c:	2005883a 	mov	r2,r4
 2009f60:	f800283a 	ret
 2009f64:	0005883a 	mov	r2,zero
 2009f68:	003ffa06 	br	2009f54 <udivmodsi4+0x4c>
 2009f6c:	00c00044 	movi	r3,1
 2009f70:	003ff106 	br	2009f38 <udivmodsi4+0x30>

02009f74 <__divsi3>:
 2009f74:	defffe04 	addi	sp,sp,-8
 2009f78:	dfc00115 	stw	ra,4(sp)
 2009f7c:	dc000015 	stw	r16,0(sp)
 2009f80:	20000b16 	blt	r4,zero,2009fb0 <__divsi3+0x3c>
 2009f84:	0021883a 	mov	r16,zero
 2009f88:	28000c16 	blt	r5,zero,2009fbc <__divsi3+0x48>
 2009f8c:	000d883a 	mov	r6,zero
 2009f90:	2009f080 	call	2009f08 <udivmodsi4>
 2009f94:	0407c83a 	sub	r3,zero,r16
 2009f98:	1884f03a 	xor	r2,r3,r2
 2009f9c:	1405883a 	add	r2,r2,r16
 2009fa0:	dfc00117 	ldw	ra,4(sp)
 2009fa4:	dc000017 	ldw	r16,0(sp)
 2009fa8:	dec00204 	addi	sp,sp,8
 2009fac:	f800283a 	ret
 2009fb0:	0109c83a 	sub	r4,zero,r4
 2009fb4:	04000044 	movi	r16,1
 2009fb8:	283ff40e 	bge	r5,zero,2009f8c <__divsi3+0x18>
 2009fbc:	014bc83a 	sub	r5,zero,r5
 2009fc0:	8400005c 	xori	r16,r16,1
 2009fc4:	003ff106 	br	2009f8c <__divsi3+0x18>

02009fc8 <__modsi3>:
 2009fc8:	defffd04 	addi	sp,sp,-12
 2009fcc:	dfc00215 	stw	ra,8(sp)
 2009fd0:	dc400115 	stw	r17,4(sp)
 2009fd4:	dc000015 	stw	r16,0(sp)
 2009fd8:	20000c16 	blt	r4,zero,200a00c <__modsi3+0x44>
 2009fdc:	0023883a 	mov	r17,zero
 2009fe0:	0021883a 	mov	r16,zero
 2009fe4:	28000d16 	blt	r5,zero,200a01c <__modsi3+0x54>
 2009fe8:	01800044 	movi	r6,1
 2009fec:	2009f080 	call	2009f08 <udivmodsi4>
 2009ff0:	1404f03a 	xor	r2,r2,r16
 2009ff4:	8885883a 	add	r2,r17,r2
 2009ff8:	dfc00217 	ldw	ra,8(sp)
 2009ffc:	dc400117 	ldw	r17,4(sp)
 200a000:	dc000017 	ldw	r16,0(sp)
 200a004:	dec00304 	addi	sp,sp,12
 200a008:	f800283a 	ret
 200a00c:	0109c83a 	sub	r4,zero,r4
 200a010:	04400044 	movi	r17,1
 200a014:	043fffc4 	movi	r16,-1
 200a018:	283ff30e 	bge	r5,zero,2009fe8 <__modsi3+0x20>
 200a01c:	014bc83a 	sub	r5,zero,r5
 200a020:	003ff106 	br	2009fe8 <__modsi3+0x20>

0200a024 <__udivsi3>:
 200a024:	000d883a 	mov	r6,zero
 200a028:	2009f081 	jmpi	2009f08 <udivmodsi4>

0200a02c <__umodsi3>:
 200a02c:	01800044 	movi	r6,1
 200a030:	2009f081 	jmpi	2009f08 <udivmodsi4>

0200a034 <__adddf3>:
 200a034:	02000434 	movhi	r8,16
 200a038:	423fffc4 	addi	r8,r8,-1
 200a03c:	defffb04 	addi	sp,sp,-20
 200a040:	2a12703a 	and	r9,r5,r8
 200a044:	2806d7fa 	srli	r3,r5,31
 200a048:	3a10703a 	and	r8,r7,r8
 200a04c:	3804d53a 	srli	r2,r7,20
 200a050:	3014d77a 	srli	r10,r6,29
 200a054:	dc000015 	stw	r16,0(sp)
 200a058:	481290fa 	slli	r9,r9,3
 200a05c:	2820d53a 	srli	r16,r5,20
 200a060:	401090fa 	slli	r8,r8,3
 200a064:	200ad77a 	srli	r5,r4,29
 200a068:	380ed7fa 	srli	r7,r7,31
 200a06c:	dc800215 	stw	r18,8(sp)
 200a070:	dc400115 	stw	r17,4(sp)
 200a074:	dfc00415 	stw	ra,16(sp)
 200a078:	dcc00315 	stw	r19,12(sp)
 200a07c:	1c803fcc 	andi	r18,r3,255
 200a080:	8401ffcc 	andi	r16,r16,2047
 200a084:	494ab03a 	or	r5,r9,r5
 200a088:	202290fa 	slli	r17,r4,3
 200a08c:	1081ffcc 	andi	r2,r2,2047
 200a090:	4290b03a 	or	r8,r8,r10
 200a094:	300c90fa 	slli	r6,r6,3
 200a098:	91c07026 	beq	r18,r7,200a25c <__adddf3+0x228>
 200a09c:	8087c83a 	sub	r3,r16,r2
 200a0a0:	00c0b30e 	bge	zero,r3,200a370 <__adddf3+0x33c>
 200a0a4:	10002a1e 	bne	r2,zero,200a150 <__adddf3+0x11c>
 200a0a8:	4184b03a 	or	r2,r8,r6
 200a0ac:	1000991e 	bne	r2,zero,200a314 <__adddf3+0x2e0>
 200a0b0:	888001cc 	andi	r2,r17,7
 200a0b4:	10005b26 	beq	r2,zero,200a224 <__adddf3+0x1f0>
 200a0b8:	88c003cc 	andi	r3,r17,15
 200a0bc:	00800104 	movi	r2,4
 200a0c0:	18805826 	beq	r3,r2,200a224 <__adddf3+0x1f0>
 200a0c4:	89800104 	addi	r6,r17,4
 200a0c8:	3463803a 	cmpltu	r17,r6,r17
 200a0cc:	2c4b883a 	add	r5,r5,r17
 200a0d0:	2880202c 	andhi	r2,r5,128
 200a0d4:	9007883a 	mov	r3,r18
 200a0d8:	3023883a 	mov	r17,r6
 200a0dc:	10005426 	beq	r2,zero,200a230 <__adddf3+0x1fc>
 200a0e0:	84000044 	addi	r16,r16,1
 200a0e4:	0081ffc4 	movi	r2,2047
 200a0e8:	8080c126 	beq	r16,r2,200a3f0 <__adddf3+0x3bc>
 200a0ec:	013fe034 	movhi	r4,65408
 200a0f0:	213fffc4 	addi	r4,r4,-1
 200a0f4:	290a703a 	and	r5,r5,r4
 200a0f8:	2804977a 	slli	r2,r5,29
 200a0fc:	280a927a 	slli	r5,r5,9
 200a100:	8822d0fa 	srli	r17,r17,3
 200a104:	8401ffcc 	andi	r16,r16,2047
 200a108:	2808d33a 	srli	r4,r5,12
 200a10c:	1444b03a 	or	r2,r2,r17
 200a110:	8401ffcc 	andi	r16,r16,2047
 200a114:	800a953a 	slli	r5,r16,20
 200a118:	18c03fcc 	andi	r3,r3,255
 200a11c:	04000434 	movhi	r16,16
 200a120:	180697fa 	slli	r3,r3,31
 200a124:	843fffc4 	addi	r16,r16,-1
 200a128:	2420703a 	and	r16,r4,r16
 200a12c:	8160b03a 	or	r16,r16,r5
 200a130:	80c6b03a 	or	r3,r16,r3
 200a134:	dfc00417 	ldw	ra,16(sp)
 200a138:	dcc00317 	ldw	r19,12(sp)
 200a13c:	dc800217 	ldw	r18,8(sp)
 200a140:	dc400117 	ldw	r17,4(sp)
 200a144:	dc000017 	ldw	r16,0(sp)
 200a148:	dec00504 	addi	sp,sp,20
 200a14c:	f800283a 	ret
 200a150:	0081ffc4 	movi	r2,2047
 200a154:	80bfd626 	beq	r16,r2,200a0b0 <__adddf3+0x7c>
 200a158:	42002034 	orhi	r8,r8,128
 200a15c:	00800e04 	movi	r2,56
 200a160:	10c0a616 	blt	r2,r3,200a3fc <__adddf3+0x3c8>
 200a164:	008007c4 	movi	r2,31
 200a168:	10c0c916 	blt	r2,r3,200a490 <__adddf3+0x45c>
 200a16c:	00800804 	movi	r2,32
 200a170:	10c5c83a 	sub	r2,r2,r3
 200a174:	408e983a 	sll	r7,r8,r2
 200a178:	30c8d83a 	srl	r4,r6,r3
 200a17c:	3084983a 	sll	r2,r6,r2
 200a180:	40c6d83a 	srl	r3,r8,r3
 200a184:	390cb03a 	or	r6,r7,r4
 200a188:	1004c03a 	cmpne	r2,r2,zero
 200a18c:	308cb03a 	or	r6,r6,r2
 200a190:	898dc83a 	sub	r6,r17,r6
 200a194:	89a3803a 	cmpltu	r17,r17,r6
 200a198:	28cbc83a 	sub	r5,r5,r3
 200a19c:	2c4bc83a 	sub	r5,r5,r17
 200a1a0:	3023883a 	mov	r17,r6
 200a1a4:	2880202c 	andhi	r2,r5,128
 200a1a8:	10006d26 	beq	r2,zero,200a360 <__adddf3+0x32c>
 200a1ac:	04c02034 	movhi	r19,128
 200a1b0:	9cffffc4 	addi	r19,r19,-1
 200a1b4:	2ce6703a 	and	r19,r5,r19
 200a1b8:	98007e26 	beq	r19,zero,200a3b4 <__adddf3+0x380>
 200a1bc:	9809883a 	mov	r4,r19
 200a1c0:	200c5d00 	call	200c5d0 <__clzsi2>
 200a1c4:	10fffe04 	addi	r3,r2,-8
 200a1c8:	010007c4 	movi	r4,31
 200a1cc:	20c07f16 	blt	r4,r3,200a3cc <__adddf3+0x398>
 200a1d0:	01400a04 	movi	r5,40
 200a1d4:	2885c83a 	sub	r2,r5,r2
 200a1d8:	888ad83a 	srl	r5,r17,r2
 200a1dc:	98e6983a 	sll	r19,r19,r3
 200a1e0:	88e2983a 	sll	r17,r17,r3
 200a1e4:	2ce6b03a 	or	r19,r5,r19
 200a1e8:	1c007c16 	blt	r3,r16,200a3dc <__adddf3+0x3a8>
 200a1ec:	1c21c83a 	sub	r16,r3,r16
 200a1f0:	81400044 	addi	r5,r16,1
 200a1f4:	00c007c4 	movi	r3,31
 200a1f8:	19409816 	blt	r3,r5,200a45c <__adddf3+0x428>
 200a1fc:	1c21c83a 	sub	r16,r3,r16
 200a200:	8c08983a 	sll	r4,r17,r16
 200a204:	8946d83a 	srl	r3,r17,r5
 200a208:	9c20983a 	sll	r16,r19,r16
 200a20c:	2008c03a 	cmpne	r4,r4,zero
 200a210:	994ad83a 	srl	r5,r19,r5
 200a214:	1c06b03a 	or	r3,r3,r16
 200a218:	1922b03a 	or	r17,r3,r4
 200a21c:	0021883a 	mov	r16,zero
 200a220:	003fa306 	br	200a0b0 <__adddf3+0x7c>
 200a224:	2880202c 	andhi	r2,r5,128
 200a228:	9007883a 	mov	r3,r18
 200a22c:	103fac1e 	bne	r2,zero,200a0e0 <__adddf3+0xac>
 200a230:	2804977a 	slli	r2,r5,29
 200a234:	8822d0fa 	srli	r17,r17,3
 200a238:	0101ffc4 	movi	r4,2047
 200a23c:	280ad0fa 	srli	r5,r5,3
 200a240:	1444b03a 	or	r2,r2,r17
 200a244:	81002c26 	beq	r16,r4,200a2f8 <__adddf3+0x2c4>
 200a248:	8120703a 	and	r16,r16,r4
 200a24c:	01000434 	movhi	r4,16
 200a250:	213fffc4 	addi	r4,r4,-1
 200a254:	2908703a 	and	r4,r5,r4
 200a258:	003fad06 	br	200a110 <__adddf3+0xdc>
 200a25c:	8089c83a 	sub	r4,r16,r2
 200a260:	01006a0e 	bge	zero,r4,200a40c <__adddf3+0x3d8>
 200a264:	10003326 	beq	r2,zero,200a334 <__adddf3+0x300>
 200a268:	0081ffc4 	movi	r2,2047
 200a26c:	80bf9026 	beq	r16,r2,200a0b0 <__adddf3+0x7c>
 200a270:	42002034 	orhi	r8,r8,128
 200a274:	00800e04 	movi	r2,56
 200a278:	1100b116 	blt	r2,r4,200a540 <__adddf3+0x50c>
 200a27c:	008007c4 	movi	r2,31
 200a280:	1100e216 	blt	r2,r4,200a60c <__adddf3+0x5d8>
 200a284:	00800804 	movi	r2,32
 200a288:	1105c83a 	sub	r2,r2,r4
 200a28c:	4092983a 	sll	r9,r8,r2
 200a290:	310ed83a 	srl	r7,r6,r4
 200a294:	3084983a 	sll	r2,r6,r2
 200a298:	4110d83a 	srl	r8,r8,r4
 200a29c:	49ccb03a 	or	r6,r9,r7
 200a2a0:	1004c03a 	cmpne	r2,r2,zero
 200a2a4:	308cb03a 	or	r6,r6,r2
 200a2a8:	344d883a 	add	r6,r6,r17
 200a2ac:	3463803a 	cmpltu	r17,r6,r17
 200a2b0:	414b883a 	add	r5,r8,r5
 200a2b4:	2c4b883a 	add	r5,r5,r17
 200a2b8:	3023883a 	mov	r17,r6
 200a2bc:	2880202c 	andhi	r2,r5,128
 200a2c0:	10002726 	beq	r2,zero,200a360 <__adddf3+0x32c>
 200a2c4:	84000044 	addi	r16,r16,1
 200a2c8:	0081ffc4 	movi	r2,2047
 200a2cc:	8080ae26 	beq	r16,r2,200a588 <__adddf3+0x554>
 200a2d0:	00bfe034 	movhi	r2,65408
 200a2d4:	10bfffc4 	addi	r2,r2,-1
 200a2d8:	288a703a 	and	r5,r5,r2
 200a2dc:	880cd07a 	srli	r6,r17,1
 200a2e0:	280897fa 	slli	r4,r5,31
 200a2e4:	88c0004c 	andi	r3,r17,1
 200a2e8:	30e2b03a 	or	r17,r6,r3
 200a2ec:	280ad07a 	srli	r5,r5,1
 200a2f0:	8922b03a 	or	r17,r17,r4
 200a2f4:	003f6e06 	br	200a0b0 <__adddf3+0x7c>
 200a2f8:	1148b03a 	or	r4,r2,r5
 200a2fc:	20003c26 	beq	r4,zero,200a3f0 <__adddf3+0x3bc>
 200a300:	29000234 	orhi	r4,r5,8
 200a304:	01400434 	movhi	r5,16
 200a308:	297fffc4 	addi	r5,r5,-1
 200a30c:	2148703a 	and	r4,r4,r5
 200a310:	003f7f06 	br	200a110 <__adddf3+0xdc>
 200a314:	18ffffc4 	addi	r3,r3,-1
 200a318:	18004d1e 	bne	r3,zero,200a450 <__adddf3+0x41c>
 200a31c:	898dc83a 	sub	r6,r17,r6
 200a320:	89a3803a 	cmpltu	r17,r17,r6
 200a324:	2a0bc83a 	sub	r5,r5,r8
 200a328:	2c4bc83a 	sub	r5,r5,r17
 200a32c:	3023883a 	mov	r17,r6
 200a330:	003f9c06 	br	200a1a4 <__adddf3+0x170>
 200a334:	4184b03a 	or	r2,r8,r6
 200a338:	103f5d26 	beq	r2,zero,200a0b0 <__adddf3+0x7c>
 200a33c:	213fffc4 	addi	r4,r4,-1
 200a340:	203fd926 	beq	r4,zero,200a2a8 <__adddf3+0x274>
 200a344:	0081ffc4 	movi	r2,2047
 200a348:	80bfca1e 	bne	r16,r2,200a274 <__adddf3+0x240>
 200a34c:	003f5806 	br	200a0b0 <__adddf3+0x7c>
 200a350:	10c8b03a 	or	r4,r2,r3
 200a354:	20008b26 	beq	r4,zero,200a584 <__adddf3+0x550>
 200a358:	100b883a 	mov	r5,r2
 200a35c:	1823883a 	mov	r17,r3
 200a360:	888001cc 	andi	r2,r17,7
 200a364:	103f541e 	bne	r2,zero,200a0b8 <__adddf3+0x84>
 200a368:	9007883a 	mov	r3,r18
 200a36c:	003fb006 	br	200a230 <__adddf3+0x1fc>
 200a370:	1800531e 	bne	r3,zero,200a4c0 <__adddf3+0x48c>
 200a374:	80800044 	addi	r2,r16,1
 200a378:	1081ffcc 	andi	r2,r2,2047
 200a37c:	00c00044 	movi	r3,1
 200a380:	1880990e 	bge	r3,r2,200a5e8 <__adddf3+0x5b4>
 200a384:	8985c83a 	sub	r2,r17,r6
 200a388:	8887803a 	cmpltu	r3,r17,r2
 200a38c:	2a27c83a 	sub	r19,r5,r8
 200a390:	98e7c83a 	sub	r19,r19,r3
 200a394:	98c0202c 	andhi	r3,r19,128
 200a398:	18006226 	beq	r3,zero,200a524 <__adddf3+0x4f0>
 200a39c:	3463c83a 	sub	r17,r6,r17
 200a3a0:	4151c83a 	sub	r8,r8,r5
 200a3a4:	344d803a 	cmpltu	r6,r6,r17
 200a3a8:	41a7c83a 	sub	r19,r8,r6
 200a3ac:	3825883a 	mov	r18,r7
 200a3b0:	983f821e 	bne	r19,zero,200a1bc <__adddf3+0x188>
 200a3b4:	8809883a 	mov	r4,r17
 200a3b8:	200c5d00 	call	200c5d0 <__clzsi2>
 200a3bc:	10800804 	addi	r2,r2,32
 200a3c0:	10fffe04 	addi	r3,r2,-8
 200a3c4:	010007c4 	movi	r4,31
 200a3c8:	20ff810e 	bge	r4,r3,200a1d0 <__adddf3+0x19c>
 200a3cc:	14fff604 	addi	r19,r2,-40
 200a3d0:	8ce6983a 	sll	r19,r17,r19
 200a3d4:	0023883a 	mov	r17,zero
 200a3d8:	1c3f840e 	bge	r3,r16,200a1ec <__adddf3+0x1b8>
 200a3dc:	017fe034 	movhi	r5,65408
 200a3e0:	297fffc4 	addi	r5,r5,-1
 200a3e4:	80e1c83a 	sub	r16,r16,r3
 200a3e8:	994a703a 	and	r5,r19,r5
 200a3ec:	003f3006 	br	200a0b0 <__adddf3+0x7c>
 200a3f0:	0009883a 	mov	r4,zero
 200a3f4:	0005883a 	mov	r2,zero
 200a3f8:	003f4506 	br	200a110 <__adddf3+0xdc>
 200a3fc:	418cb03a 	or	r6,r8,r6
 200a400:	300cc03a 	cmpne	r6,r6,zero
 200a404:	0007883a 	mov	r3,zero
 200a408:	003f6106 	br	200a190 <__adddf3+0x15c>
 200a40c:	2000921e 	bne	r4,zero,200a658 <__adddf3+0x624>
 200a410:	80800044 	addi	r2,r16,1
 200a414:	11c1ffcc 	andi	r7,r2,2047
 200a418:	01000044 	movi	r4,1
 200a41c:	21c0610e 	bge	r4,r7,200a5a4 <__adddf3+0x570>
 200a420:	0101ffc4 	movi	r4,2047
 200a424:	1100a326 	beq	r2,r4,200a6b4 <__adddf3+0x680>
 200a428:	344d883a 	add	r6,r6,r17
 200a42c:	3463803a 	cmpltu	r17,r6,r17
 200a430:	414b883a 	add	r5,r8,r5
 200a434:	2c4b883a 	add	r5,r5,r17
 200a438:	282297fa 	slli	r17,r5,31
 200a43c:	300cd07a 	srli	r6,r6,1
 200a440:	280ad07a 	srli	r5,r5,1
 200a444:	1021883a 	mov	r16,r2
 200a448:	89a2b03a 	or	r17,r17,r6
 200a44c:	003f1806 	br	200a0b0 <__adddf3+0x7c>
 200a450:	0081ffc4 	movi	r2,2047
 200a454:	80bf411e 	bne	r16,r2,200a15c <__adddf3+0x128>
 200a458:	003f1506 	br	200a0b0 <__adddf3+0x7c>
 200a45c:	80bff844 	addi	r2,r16,-31
 200a460:	00c00804 	movi	r3,32
 200a464:	9884d83a 	srl	r2,r19,r2
 200a468:	28c04a26 	beq	r5,r3,200a594 <__adddf3+0x560>
 200a46c:	00c00fc4 	movi	r3,63
 200a470:	1c21c83a 	sub	r16,r3,r16
 200a474:	9c26983a 	sll	r19,r19,r16
 200a478:	9c62b03a 	or	r17,r19,r17
 200a47c:	8822c03a 	cmpne	r17,r17,zero
 200a480:	88a2b03a 	or	r17,r17,r2
 200a484:	000b883a 	mov	r5,zero
 200a488:	0021883a 	mov	r16,zero
 200a48c:	003fb406 	br	200a360 <__adddf3+0x32c>
 200a490:	18bff804 	addi	r2,r3,-32
 200a494:	01000804 	movi	r4,32
 200a498:	4084d83a 	srl	r2,r8,r2
 200a49c:	19003f26 	beq	r3,r4,200a59c <__adddf3+0x568>
 200a4a0:	01001004 	movi	r4,64
 200a4a4:	20c7c83a 	sub	r3,r4,r3
 200a4a8:	40d0983a 	sll	r8,r8,r3
 200a4ac:	418cb03a 	or	r6,r8,r6
 200a4b0:	300cc03a 	cmpne	r6,r6,zero
 200a4b4:	308cb03a 	or	r6,r6,r2
 200a4b8:	0007883a 	mov	r3,zero
 200a4bc:	003f3406 	br	200a190 <__adddf3+0x15c>
 200a4c0:	80002326 	beq	r16,zero,200a550 <__adddf3+0x51c>
 200a4c4:	0101ffc4 	movi	r4,2047
 200a4c8:	11005e26 	beq	r2,r4,200a644 <__adddf3+0x610>
 200a4cc:	00c7c83a 	sub	r3,zero,r3
 200a4d0:	29402034 	orhi	r5,r5,128
 200a4d4:	01000e04 	movi	r4,56
 200a4d8:	20c07216 	blt	r4,r3,200a6a4 <__adddf3+0x670>
 200a4dc:	010007c4 	movi	r4,31
 200a4e0:	20c0ce16 	blt	r4,r3,200a81c <__adddf3+0x7e8>
 200a4e4:	01000804 	movi	r4,32
 200a4e8:	20c9c83a 	sub	r4,r4,r3
 200a4ec:	2914983a 	sll	r10,r5,r4
 200a4f0:	88d2d83a 	srl	r9,r17,r3
 200a4f4:	8908983a 	sll	r4,r17,r4
 200a4f8:	28c6d83a 	srl	r3,r5,r3
 200a4fc:	5262b03a 	or	r17,r10,r9
 200a500:	2008c03a 	cmpne	r4,r4,zero
 200a504:	8922b03a 	or	r17,r17,r4
 200a508:	3463c83a 	sub	r17,r6,r17
 200a50c:	40c7c83a 	sub	r3,r8,r3
 200a510:	344d803a 	cmpltu	r6,r6,r17
 200a514:	198bc83a 	sub	r5,r3,r6
 200a518:	1021883a 	mov	r16,r2
 200a51c:	3825883a 	mov	r18,r7
 200a520:	003f2006 	br	200a1a4 <__adddf3+0x170>
 200a524:	9886b03a 	or	r3,r19,r2
 200a528:	1800141e 	bne	r3,zero,200a57c <__adddf3+0x548>
 200a52c:	0007883a 	mov	r3,zero
 200a530:	000b883a 	mov	r5,zero
 200a534:	0023883a 	mov	r17,zero
 200a538:	0021883a 	mov	r16,zero
 200a53c:	003f3c06 	br	200a230 <__adddf3+0x1fc>
 200a540:	418cb03a 	or	r6,r8,r6
 200a544:	300cc03a 	cmpne	r6,r6,zero
 200a548:	0011883a 	mov	r8,zero
 200a54c:	003f5606 	br	200a2a8 <__adddf3+0x274>
 200a550:	2c48b03a 	or	r4,r5,r17
 200a554:	20003b26 	beq	r4,zero,200a644 <__adddf3+0x610>
 200a558:	00c6303a 	nor	r3,zero,r3
 200a55c:	1800371e 	bne	r3,zero,200a63c <__adddf3+0x608>
 200a560:	3463c83a 	sub	r17,r6,r17
 200a564:	414bc83a 	sub	r5,r8,r5
 200a568:	344d803a 	cmpltu	r6,r6,r17
 200a56c:	298bc83a 	sub	r5,r5,r6
 200a570:	1021883a 	mov	r16,r2
 200a574:	3825883a 	mov	r18,r7
 200a578:	003f0a06 	br	200a1a4 <__adddf3+0x170>
 200a57c:	1023883a 	mov	r17,r2
 200a580:	003f0d06 	br	200a1b8 <__adddf3+0x184>
 200a584:	0007883a 	mov	r3,zero
 200a588:	000b883a 	mov	r5,zero
 200a58c:	0023883a 	mov	r17,zero
 200a590:	003f2706 	br	200a230 <__adddf3+0x1fc>
 200a594:	0027883a 	mov	r19,zero
 200a598:	003fb706 	br	200a478 <__adddf3+0x444>
 200a59c:	0011883a 	mov	r8,zero
 200a5a0:	003fc206 	br	200a4ac <__adddf3+0x478>
 200a5a4:	2c44b03a 	or	r2,r5,r17
 200a5a8:	8000871e 	bne	r16,zero,200a7c8 <__adddf3+0x794>
 200a5ac:	1000b126 	beq	r2,zero,200a874 <__adddf3+0x840>
 200a5b0:	4184b03a 	or	r2,r8,r6
 200a5b4:	103ebe26 	beq	r2,zero,200a0b0 <__adddf3+0x7c>
 200a5b8:	3445883a 	add	r2,r6,r17
 200a5bc:	1463803a 	cmpltu	r17,r2,r17
 200a5c0:	414b883a 	add	r5,r8,r5
 200a5c4:	2c4b883a 	add	r5,r5,r17
 200a5c8:	28c0202c 	andhi	r3,r5,128
 200a5cc:	1023883a 	mov	r17,r2
 200a5d0:	183f6326 	beq	r3,zero,200a360 <__adddf3+0x32c>
 200a5d4:	00bfe034 	movhi	r2,65408
 200a5d8:	10bfffc4 	addi	r2,r2,-1
 200a5dc:	2021883a 	mov	r16,r4
 200a5e0:	288a703a 	and	r5,r5,r2
 200a5e4:	003eb206 	br	200a0b0 <__adddf3+0x7c>
 200a5e8:	2c44b03a 	or	r2,r5,r17
 200a5ec:	8000251e 	bne	r16,zero,200a684 <__adddf3+0x650>
 200a5f0:	10004b1e 	bne	r2,zero,200a720 <__adddf3+0x6ec>
 200a5f4:	4184b03a 	or	r2,r8,r6
 200a5f8:	103fe226 	beq	r2,zero,200a584 <__adddf3+0x550>
 200a5fc:	400b883a 	mov	r5,r8
 200a600:	3023883a 	mov	r17,r6
 200a604:	3825883a 	mov	r18,r7
 200a608:	003ea906 	br	200a0b0 <__adddf3+0x7c>
 200a60c:	20bff804 	addi	r2,r4,-32
 200a610:	01c00804 	movi	r7,32
 200a614:	4084d83a 	srl	r2,r8,r2
 200a618:	21c07e26 	beq	r4,r7,200a814 <__adddf3+0x7e0>
 200a61c:	01c01004 	movi	r7,64
 200a620:	3909c83a 	sub	r4,r7,r4
 200a624:	4110983a 	sll	r8,r8,r4
 200a628:	418cb03a 	or	r6,r8,r6
 200a62c:	300cc03a 	cmpne	r6,r6,zero
 200a630:	308cb03a 	or	r6,r6,r2
 200a634:	0011883a 	mov	r8,zero
 200a638:	003f1b06 	br	200a2a8 <__adddf3+0x274>
 200a63c:	0101ffc4 	movi	r4,2047
 200a640:	113fa41e 	bne	r2,r4,200a4d4 <__adddf3+0x4a0>
 200a644:	400b883a 	mov	r5,r8
 200a648:	3023883a 	mov	r17,r6
 200a64c:	1021883a 	mov	r16,r2
 200a650:	3825883a 	mov	r18,r7
 200a654:	003e9606 	br	200a0b0 <__adddf3+0x7c>
 200a658:	80001a1e 	bne	r16,zero,200a6c4 <__adddf3+0x690>
 200a65c:	2c4eb03a 	or	r7,r5,r17
 200a660:	38005526 	beq	r7,zero,200a7b8 <__adddf3+0x784>
 200a664:	0108303a 	nor	r4,zero,r4
 200a668:	2000511e 	bne	r4,zero,200a7b0 <__adddf3+0x77c>
 200a66c:	89a3883a 	add	r17,r17,r6
 200a670:	414b883a 	add	r5,r8,r5
 200a674:	898d803a 	cmpltu	r6,r17,r6
 200a678:	298b883a 	add	r5,r5,r6
 200a67c:	1021883a 	mov	r16,r2
 200a680:	003f0e06 	br	200a2bc <__adddf3+0x288>
 200a684:	1000341e 	bne	r2,zero,200a758 <__adddf3+0x724>
 200a688:	4184b03a 	or	r2,r8,r6
 200a68c:	10006f26 	beq	r2,zero,200a84c <__adddf3+0x818>
 200a690:	400b883a 	mov	r5,r8
 200a694:	3023883a 	mov	r17,r6
 200a698:	3825883a 	mov	r18,r7
 200a69c:	0401ffc4 	movi	r16,2047
 200a6a0:	003e8306 	br	200a0b0 <__adddf3+0x7c>
 200a6a4:	2c62b03a 	or	r17,r5,r17
 200a6a8:	8822c03a 	cmpne	r17,r17,zero
 200a6ac:	0007883a 	mov	r3,zero
 200a6b0:	003f9506 	br	200a508 <__adddf3+0x4d4>
 200a6b4:	1021883a 	mov	r16,r2
 200a6b8:	000b883a 	mov	r5,zero
 200a6bc:	0023883a 	mov	r17,zero
 200a6c0:	003edb06 	br	200a230 <__adddf3+0x1fc>
 200a6c4:	01c1ffc4 	movi	r7,2047
 200a6c8:	11c03b26 	beq	r2,r7,200a7b8 <__adddf3+0x784>
 200a6cc:	0109c83a 	sub	r4,zero,r4
 200a6d0:	29402034 	orhi	r5,r5,128
 200a6d4:	01c00e04 	movi	r7,56
 200a6d8:	39006216 	blt	r7,r4,200a864 <__adddf3+0x830>
 200a6dc:	01c007c4 	movi	r7,31
 200a6e0:	39006b16 	blt	r7,r4,200a890 <__adddf3+0x85c>
 200a6e4:	01c00804 	movi	r7,32
 200a6e8:	390fc83a 	sub	r7,r7,r4
 200a6ec:	29d4983a 	sll	r10,r5,r7
 200a6f0:	8912d83a 	srl	r9,r17,r4
 200a6f4:	89ce983a 	sll	r7,r17,r7
 200a6f8:	2908d83a 	srl	r4,r5,r4
 200a6fc:	5262b03a 	or	r17,r10,r9
 200a700:	380ac03a 	cmpne	r5,r7,zero
 200a704:	8962b03a 	or	r17,r17,r5
 200a708:	89a3883a 	add	r17,r17,r6
 200a70c:	2211883a 	add	r8,r4,r8
 200a710:	898d803a 	cmpltu	r6,r17,r6
 200a714:	418b883a 	add	r5,r8,r6
 200a718:	1021883a 	mov	r16,r2
 200a71c:	003ee706 	br	200a2bc <__adddf3+0x288>
 200a720:	4184b03a 	or	r2,r8,r6
 200a724:	103e6226 	beq	r2,zero,200a0b0 <__adddf3+0x7c>
 200a728:	8987c83a 	sub	r3,r17,r6
 200a72c:	88c9803a 	cmpltu	r4,r17,r3
 200a730:	2a05c83a 	sub	r2,r5,r8
 200a734:	1105c83a 	sub	r2,r2,r4
 200a738:	1100202c 	andhi	r4,r2,128
 200a73c:	203f0426 	beq	r4,zero,200a350 <__adddf3+0x31c>
 200a740:	3463c83a 	sub	r17,r6,r17
 200a744:	414bc83a 	sub	r5,r8,r5
 200a748:	344d803a 	cmpltu	r6,r6,r17
 200a74c:	298bc83a 	sub	r5,r5,r6
 200a750:	3825883a 	mov	r18,r7
 200a754:	003e5606 	br	200a0b0 <__adddf3+0x7c>
 200a758:	4184b03a 	or	r2,r8,r6
 200a75c:	10002b26 	beq	r2,zero,200a80c <__adddf3+0x7d8>
 200a760:	2804d0fa 	srli	r2,r5,3
 200a764:	8822d0fa 	srli	r17,r17,3
 200a768:	280a977a 	slli	r5,r5,29
 200a76c:	10c0022c 	andhi	r3,r2,8
 200a770:	2c62b03a 	or	r17,r5,r17
 200a774:	18000826 	beq	r3,zero,200a798 <__adddf3+0x764>
 200a778:	4008d0fa 	srli	r4,r8,3
 200a77c:	20c0022c 	andhi	r3,r4,8
 200a780:	1800051e 	bne	r3,zero,200a798 <__adddf3+0x764>
 200a784:	300cd0fa 	srli	r6,r6,3
 200a788:	4010977a 	slli	r8,r8,29
 200a78c:	2005883a 	mov	r2,r4
 200a790:	3825883a 	mov	r18,r7
 200a794:	41a2b03a 	or	r17,r8,r6
 200a798:	880ad77a 	srli	r5,r17,29
 200a79c:	100490fa 	slli	r2,r2,3
 200a7a0:	882290fa 	slli	r17,r17,3
 200a7a4:	0401ffc4 	movi	r16,2047
 200a7a8:	288ab03a 	or	r5,r5,r2
 200a7ac:	003e4006 	br	200a0b0 <__adddf3+0x7c>
 200a7b0:	01c1ffc4 	movi	r7,2047
 200a7b4:	11ffc71e 	bne	r2,r7,200a6d4 <__adddf3+0x6a0>
 200a7b8:	400b883a 	mov	r5,r8
 200a7bc:	3023883a 	mov	r17,r6
 200a7c0:	1021883a 	mov	r16,r2
 200a7c4:	003e3a06 	br	200a0b0 <__adddf3+0x7c>
 200a7c8:	10002d26 	beq	r2,zero,200a880 <__adddf3+0x84c>
 200a7cc:	4184b03a 	or	r2,r8,r6
 200a7d0:	10000e26 	beq	r2,zero,200a80c <__adddf3+0x7d8>
 200a7d4:	2804d0fa 	srli	r2,r5,3
 200a7d8:	8822d0fa 	srli	r17,r17,3
 200a7dc:	280a977a 	slli	r5,r5,29
 200a7e0:	10c0022c 	andhi	r3,r2,8
 200a7e4:	2c62b03a 	or	r17,r5,r17
 200a7e8:	183feb26 	beq	r3,zero,200a798 <__adddf3+0x764>
 200a7ec:	4008d0fa 	srli	r4,r8,3
 200a7f0:	20c0022c 	andhi	r3,r4,8
 200a7f4:	183fe81e 	bne	r3,zero,200a798 <__adddf3+0x764>
 200a7f8:	300cd0fa 	srli	r6,r6,3
 200a7fc:	4010977a 	slli	r8,r8,29
 200a800:	2005883a 	mov	r2,r4
 200a804:	41a2b03a 	or	r17,r8,r6
 200a808:	003fe306 	br	200a798 <__adddf3+0x764>
 200a80c:	0401ffc4 	movi	r16,2047
 200a810:	003e2706 	br	200a0b0 <__adddf3+0x7c>
 200a814:	0011883a 	mov	r8,zero
 200a818:	003f8306 	br	200a628 <__adddf3+0x5f4>
 200a81c:	193ff804 	addi	r4,r3,-32
 200a820:	02400804 	movi	r9,32
 200a824:	2908d83a 	srl	r4,r5,r4
 200a828:	1a402526 	beq	r3,r9,200a8c0 <__adddf3+0x88c>
 200a82c:	02401004 	movi	r9,64
 200a830:	48c7c83a 	sub	r3,r9,r3
 200a834:	28ca983a 	sll	r5,r5,r3
 200a838:	2c62b03a 	or	r17,r5,r17
 200a83c:	8822c03a 	cmpne	r17,r17,zero
 200a840:	8922b03a 	or	r17,r17,r4
 200a844:	0007883a 	mov	r3,zero
 200a848:	003f2f06 	br	200a508 <__adddf3+0x4d4>
 200a84c:	01402034 	movhi	r5,128
 200a850:	0007883a 	mov	r3,zero
 200a854:	297fffc4 	addi	r5,r5,-1
 200a858:	047ffe04 	movi	r17,-8
 200a85c:	0401ffc4 	movi	r16,2047
 200a860:	003e7306 	br	200a230 <__adddf3+0x1fc>
 200a864:	2c62b03a 	or	r17,r5,r17
 200a868:	8822c03a 	cmpne	r17,r17,zero
 200a86c:	0009883a 	mov	r4,zero
 200a870:	003fa506 	br	200a708 <__adddf3+0x6d4>
 200a874:	400b883a 	mov	r5,r8
 200a878:	3023883a 	mov	r17,r6
 200a87c:	003e0c06 	br	200a0b0 <__adddf3+0x7c>
 200a880:	400b883a 	mov	r5,r8
 200a884:	3023883a 	mov	r17,r6
 200a888:	0401ffc4 	movi	r16,2047
 200a88c:	003e0806 	br	200a0b0 <__adddf3+0x7c>
 200a890:	21fff804 	addi	r7,r4,-32
 200a894:	02400804 	movi	r9,32
 200a898:	29ced83a 	srl	r7,r5,r7
 200a89c:	22400a26 	beq	r4,r9,200a8c8 <__adddf3+0x894>
 200a8a0:	02401004 	movi	r9,64
 200a8a4:	4909c83a 	sub	r4,r9,r4
 200a8a8:	290a983a 	sll	r5,r5,r4
 200a8ac:	2c62b03a 	or	r17,r5,r17
 200a8b0:	8822c03a 	cmpne	r17,r17,zero
 200a8b4:	89e2b03a 	or	r17,r17,r7
 200a8b8:	0009883a 	mov	r4,zero
 200a8bc:	003f9206 	br	200a708 <__adddf3+0x6d4>
 200a8c0:	000b883a 	mov	r5,zero
 200a8c4:	003fdc06 	br	200a838 <__adddf3+0x804>
 200a8c8:	000b883a 	mov	r5,zero
 200a8cc:	003ff706 	br	200a8ac <__adddf3+0x878>

0200a8d0 <__divdf3>:
 200a8d0:	defff204 	addi	sp,sp,-56
 200a8d4:	dd000815 	stw	r20,32(sp)
 200a8d8:	2828d53a 	srli	r20,r5,20
 200a8dc:	dd800a15 	stw	r22,40(sp)
 200a8e0:	282cd7fa 	srli	r22,r5,31
 200a8e4:	dc000415 	stw	r16,16(sp)
 200a8e8:	04000434 	movhi	r16,16
 200a8ec:	df000c15 	stw	fp,48(sp)
 200a8f0:	dcc00715 	stw	r19,28(sp)
 200a8f4:	dc800615 	stw	r18,24(sp)
 200a8f8:	dc400515 	stw	r17,20(sp)
 200a8fc:	843fffc4 	addi	r16,r16,-1
 200a900:	dfc00d15 	stw	ra,52(sp)
 200a904:	ddc00b15 	stw	r23,44(sp)
 200a908:	dd400915 	stw	r21,36(sp)
 200a90c:	a501ffcc 	andi	r20,r20,2047
 200a910:	2025883a 	mov	r18,r4
 200a914:	2027883a 	mov	r19,r4
 200a918:	2c22703a 	and	r17,r5,r16
 200a91c:	b7003fcc 	andi	fp,r22,255
 200a920:	a0005e26 	beq	r20,zero,200aa9c <__divdf3+0x1cc>
 200a924:	0081ffc4 	movi	r2,2047
 200a928:	a0803526 	beq	r20,r2,200aa00 <__divdf3+0x130>
 200a92c:	8c000434 	orhi	r16,r17,16
 200a930:	2004d77a 	srli	r2,r4,29
 200a934:	802090fa 	slli	r16,r16,3
 200a938:	202690fa 	slli	r19,r4,3
 200a93c:	a53f0044 	addi	r20,r20,-1023
 200a940:	80a2b03a 	or	r17,r16,r2
 200a944:	0025883a 	mov	r18,zero
 200a948:	0011883a 	mov	r8,zero
 200a94c:	380ad53a 	srli	r5,r7,20
 200a950:	382ed7fa 	srli	r23,r7,31
 200a954:	04000434 	movhi	r16,16
 200a958:	843fffc4 	addi	r16,r16,-1
 200a95c:	2941ffcc 	andi	r5,r5,2047
 200a960:	302b883a 	mov	r21,r6
 200a964:	3c20703a 	and	r16,r7,r16
 200a968:	ba403fcc 	andi	r9,r23,255
 200a96c:	28006726 	beq	r5,zero,200ab0c <__divdf3+0x23c>
 200a970:	0081ffc4 	movi	r2,2047
 200a974:	28805f26 	beq	r5,r2,200aaf4 <__divdf3+0x224>
 200a978:	84000434 	orhi	r16,r16,16
 200a97c:	3004d77a 	srli	r2,r6,29
 200a980:	802090fa 	slli	r16,r16,3
 200a984:	302a90fa 	slli	r21,r6,3
 200a988:	297f0044 	addi	r5,r5,-1023
 200a98c:	80a0b03a 	or	r16,r16,r2
 200a990:	000f883a 	mov	r7,zero
 200a994:	3c86b03a 	or	r3,r7,r18
 200a998:	180690ba 	slli	r3,r3,2
 200a99c:	00808074 	movhi	r2,513
 200a9a0:	10aa7004 	addi	r2,r2,-22080
 200a9a4:	1887883a 	add	r3,r3,r2
 200a9a8:	18c00017 	ldw	r3,0(r3)
 200a9ac:	b5c8f03a 	xor	r4,r22,r23
 200a9b0:	200d883a 	mov	r6,r4
 200a9b4:	24803fcc 	andi	r18,r4,255
 200a9b8:	a169c83a 	sub	r20,r20,r5
 200a9bc:	1800683a 	jmp	r3
 200a9c0:	0200ac08 	cmpgei	r8,zero,688
 200a9c4:	0200aa38 	rdprs	r8,zero,680
 200a9c8:	0200abcc 	andi	r8,zero,687
 200a9cc:	0200aa1c 	xori	r8,zero,680
 200a9d0:	0200abcc 	andi	r8,zero,687
 200a9d4:	0200aba0 	cmpeqi	r8,zero,686
 200a9d8:	0200abcc 	andi	r8,zero,687
 200a9dc:	0200aa1c 	xori	r8,zero,680
 200a9e0:	0200aa38 	rdprs	r8,zero,680
 200a9e4:	0200aa38 	rdprs	r8,zero,680
 200a9e8:	0200aba0 	cmpeqi	r8,zero,686
 200a9ec:	0200aa1c 	xori	r8,zero,680
 200a9f0:	0200aa2c 	andhi	r8,zero,680
 200a9f4:	0200aa2c 	andhi	r8,zero,680
 200a9f8:	0200aa2c 	andhi	r8,zero,680
 200a9fc:	0200abdc 	xori	r8,zero,687
 200aa00:	8904b03a 	or	r2,r17,r4
 200aa04:	1000631e 	bne	r2,zero,200ab94 <__divdf3+0x2c4>
 200aa08:	04800204 	movi	r18,8
 200aa0c:	0023883a 	mov	r17,zero
 200aa10:	0027883a 	mov	r19,zero
 200aa14:	02000084 	movi	r8,2
 200aa18:	003fcc06 	br	200a94c <__divdf3+0x7c>
 200aa1c:	8023883a 	mov	r17,r16
 200aa20:	a827883a 	mov	r19,r21
 200aa24:	4839883a 	mov	fp,r9
 200aa28:	3811883a 	mov	r8,r7
 200aa2c:	00800084 	movi	r2,2
 200aa30:	40812a1e 	bne	r8,r2,200aedc <__divdf3+0x60c>
 200aa34:	e025883a 	mov	r18,fp
 200aa38:	9180004c 	andi	r6,r18,1
 200aa3c:	0101ffc4 	movi	r4,2047
 200aa40:	000b883a 	mov	r5,zero
 200aa44:	0027883a 	mov	r19,zero
 200aa48:	2008953a 	slli	r4,r4,20
 200aa4c:	30c03fcc 	andi	r3,r6,255
 200aa50:	04000434 	movhi	r16,16
 200aa54:	180697fa 	slli	r3,r3,31
 200aa58:	843fffc4 	addi	r16,r16,-1
 200aa5c:	2c20703a 	and	r16,r5,r16
 200aa60:	8120b03a 	or	r16,r16,r4
 200aa64:	80c6b03a 	or	r3,r16,r3
 200aa68:	9805883a 	mov	r2,r19
 200aa6c:	dfc00d17 	ldw	ra,52(sp)
 200aa70:	df000c17 	ldw	fp,48(sp)
 200aa74:	ddc00b17 	ldw	r23,44(sp)
 200aa78:	dd800a17 	ldw	r22,40(sp)
 200aa7c:	dd400917 	ldw	r21,36(sp)
 200aa80:	dd000817 	ldw	r20,32(sp)
 200aa84:	dcc00717 	ldw	r19,28(sp)
 200aa88:	dc800617 	ldw	r18,24(sp)
 200aa8c:	dc400517 	ldw	r17,20(sp)
 200aa90:	dc000417 	ldw	r16,16(sp)
 200aa94:	dec00e04 	addi	sp,sp,56
 200aa98:	f800283a 	ret
 200aa9c:	8904b03a 	or	r2,r17,r4
 200aaa0:	10003726 	beq	r2,zero,200ab80 <__divdf3+0x2b0>
 200aaa4:	88011c26 	beq	r17,zero,200af18 <__divdf3+0x648>
 200aaa8:	8809883a 	mov	r4,r17
 200aaac:	d9800315 	stw	r6,12(sp)
 200aab0:	d9c00115 	stw	r7,4(sp)
 200aab4:	200c5d00 	call	200c5d0 <__clzsi2>
 200aab8:	d9800317 	ldw	r6,12(sp)
 200aabc:	d9c00117 	ldw	r7,4(sp)
 200aac0:	1007883a 	mov	r3,r2
 200aac4:	01000a04 	movi	r4,40
 200aac8:	1cfffe04 	addi	r19,r3,-8
 200aacc:	20c9c83a 	sub	r4,r4,r3
 200aad0:	8cca983a 	sll	r5,r17,r19
 200aad4:	9108d83a 	srl	r4,r18,r4
 200aad8:	94e6983a 	sll	r19,r18,r19
 200aadc:	2162b03a 	or	r17,r4,r5
 200aae0:	053f0344 	movi	r20,-1011
 200aae4:	a0e9c83a 	sub	r20,r20,r3
 200aae8:	0025883a 	mov	r18,zero
 200aaec:	0011883a 	mov	r8,zero
 200aaf0:	003f9606 	br	200a94c <__divdf3+0x7c>
 200aaf4:	8184b03a 	or	r2,r16,r6
 200aaf8:	10001f1e 	bne	r2,zero,200ab78 <__divdf3+0x2a8>
 200aafc:	0021883a 	mov	r16,zero
 200ab00:	002b883a 	mov	r21,zero
 200ab04:	01c00084 	movi	r7,2
 200ab08:	003fa206 	br	200a994 <__divdf3+0xc4>
 200ab0c:	8184b03a 	or	r2,r16,r6
 200ab10:	10001526 	beq	r2,zero,200ab68 <__divdf3+0x298>
 200ab14:	80010c26 	beq	r16,zero,200af48 <__divdf3+0x678>
 200ab18:	8009883a 	mov	r4,r16
 200ab1c:	d9800315 	stw	r6,12(sp)
 200ab20:	da000215 	stw	r8,8(sp)
 200ab24:	da400015 	stw	r9,0(sp)
 200ab28:	200c5d00 	call	200c5d0 <__clzsi2>
 200ab2c:	d9800317 	ldw	r6,12(sp)
 200ab30:	da000217 	ldw	r8,8(sp)
 200ab34:	da400017 	ldw	r9,0(sp)
 200ab38:	1007883a 	mov	r3,r2
 200ab3c:	01000a04 	movi	r4,40
 200ab40:	1d7ffe04 	addi	r21,r3,-8
 200ab44:	20c9c83a 	sub	r4,r4,r3
 200ab48:	8560983a 	sll	r16,r16,r21
 200ab4c:	3108d83a 	srl	r4,r6,r4
 200ab50:	356a983a 	sll	r21,r6,r21
 200ab54:	2420b03a 	or	r16,r4,r16
 200ab58:	017f0344 	movi	r5,-1011
 200ab5c:	28cbc83a 	sub	r5,r5,r3
 200ab60:	000f883a 	mov	r7,zero
 200ab64:	003f8b06 	br	200a994 <__divdf3+0xc4>
 200ab68:	0021883a 	mov	r16,zero
 200ab6c:	002b883a 	mov	r21,zero
 200ab70:	01c00044 	movi	r7,1
 200ab74:	003f8706 	br	200a994 <__divdf3+0xc4>
 200ab78:	01c000c4 	movi	r7,3
 200ab7c:	003f8506 	br	200a994 <__divdf3+0xc4>
 200ab80:	04800104 	movi	r18,4
 200ab84:	0023883a 	mov	r17,zero
 200ab88:	0027883a 	mov	r19,zero
 200ab8c:	02000044 	movi	r8,1
 200ab90:	003f6e06 	br	200a94c <__divdf3+0x7c>
 200ab94:	04800304 	movi	r18,12
 200ab98:	020000c4 	movi	r8,3
 200ab9c:	003f6b06 	br	200a94c <__divdf3+0x7c>
 200aba0:	01400434 	movhi	r5,16
 200aba4:	000d883a 	mov	r6,zero
 200aba8:	297fffc4 	addi	r5,r5,-1
 200abac:	04ffffc4 	movi	r19,-1
 200abb0:	0101ffc4 	movi	r4,2047
 200abb4:	003fa406 	br	200aa48 <__divdf3+0x178>
 200abb8:	043f0084 	movi	r16,-1022
 200abbc:	8521c83a 	sub	r16,r16,r20
 200abc0:	00800e04 	movi	r2,56
 200abc4:	1401200e 	bge	r2,r16,200b048 <__divdf3+0x778>
 200abc8:	9180004c 	andi	r6,r18,1
 200abcc:	0009883a 	mov	r4,zero
 200abd0:	000b883a 	mov	r5,zero
 200abd4:	0027883a 	mov	r19,zero
 200abd8:	003f9b06 	br	200aa48 <__divdf3+0x178>
 200abdc:	8880022c 	andhi	r2,r17,8
 200abe0:	1000c726 	beq	r2,zero,200af00 <__divdf3+0x630>
 200abe4:	8080022c 	andhi	r2,r16,8
 200abe8:	1000c51e 	bne	r2,zero,200af00 <__divdf3+0x630>
 200abec:	00800434 	movhi	r2,16
 200abf0:	81400234 	orhi	r5,r16,8
 200abf4:	10bfffc4 	addi	r2,r2,-1
 200abf8:	b80d883a 	mov	r6,r23
 200abfc:	288a703a 	and	r5,r5,r2
 200ac00:	a827883a 	mov	r19,r21
 200ac04:	003fea06 	br	200abb0 <__divdf3+0x2e0>
 200ac08:	8440ea36 	bltu	r16,r17,200afb4 <__divdf3+0x6e4>
 200ac0c:	8c00e826 	beq	r17,r16,200afb0 <__divdf3+0x6e0>
 200ac10:	a53fffc4 	addi	r20,r20,-1
 200ac14:	882d883a 	mov	r22,r17
 200ac18:	000d883a 	mov	r6,zero
 200ac1c:	a804d63a 	srli	r2,r21,24
 200ac20:	8020923a 	slli	r16,r16,8
 200ac24:	b009883a 	mov	r4,r22
 200ac28:	d9800315 	stw	r6,12(sp)
 200ac2c:	1420b03a 	or	r16,r2,r16
 200ac30:	802ed43a 	srli	r23,r16,16
 200ac34:	873fffcc 	andi	fp,r16,65535
 200ac38:	a82a923a 	slli	r21,r21,8
 200ac3c:	b80b883a 	mov	r5,r23
 200ac40:	200a0240 	call	200a024 <__udivsi3>
 200ac44:	b009883a 	mov	r4,r22
 200ac48:	b80b883a 	mov	r5,r23
 200ac4c:	1023883a 	mov	r17,r2
 200ac50:	200a02c0 	call	200a02c <__umodsi3>
 200ac54:	1004943a 	slli	r2,r2,16
 200ac58:	9808d43a 	srli	r4,r19,16
 200ac5c:	8f2d383a 	mul	r22,r17,fp
 200ac60:	d9800317 	ldw	r6,12(sp)
 200ac64:	1106b03a 	or	r3,r2,r4
 200ac68:	1d80062e 	bgeu	r3,r22,200ac84 <__divdf3+0x3b4>
 200ac6c:	1c07883a 	add	r3,r3,r16
 200ac70:	88bfffc4 	addi	r2,r17,-1
 200ac74:	1c00dc36 	bltu	r3,r16,200afe8 <__divdf3+0x718>
 200ac78:	1d80db2e 	bgeu	r3,r22,200afe8 <__divdf3+0x718>
 200ac7c:	8c7fff84 	addi	r17,r17,-2
 200ac80:	1c07883a 	add	r3,r3,r16
 200ac84:	1dadc83a 	sub	r22,r3,r22
 200ac88:	b009883a 	mov	r4,r22
 200ac8c:	b80b883a 	mov	r5,r23
 200ac90:	d9800315 	stw	r6,12(sp)
 200ac94:	200a0240 	call	200a024 <__udivsi3>
 200ac98:	b009883a 	mov	r4,r22
 200ac9c:	b80b883a 	mov	r5,r23
 200aca0:	d8800015 	stw	r2,0(sp)
 200aca4:	200a02c0 	call	200a02c <__umodsi3>
 200aca8:	da400017 	ldw	r9,0(sp)
 200acac:	1004943a 	slli	r2,r2,16
 200acb0:	9cffffcc 	andi	r19,r19,65535
 200acb4:	4f07383a 	mul	r3,r9,fp
 200acb8:	14c8b03a 	or	r4,r2,r19
 200acbc:	d9800317 	ldw	r6,12(sp)
 200acc0:	20c0062e 	bgeu	r4,r3,200acdc <__divdf3+0x40c>
 200acc4:	2409883a 	add	r4,r4,r16
 200acc8:	48bfffc4 	addi	r2,r9,-1
 200accc:	2400c436 	bltu	r4,r16,200afe0 <__divdf3+0x710>
 200acd0:	20c0c32e 	bgeu	r4,r3,200afe0 <__divdf3+0x710>
 200acd4:	4a7fff84 	addi	r9,r9,-2
 200acd8:	2409883a 	add	r4,r4,r16
 200acdc:	8822943a 	slli	r17,r17,16
 200ace0:	a80ed43a 	srli	r7,r21,16
 200ace4:	aa3fffcc 	andi	r8,r21,65535
 200ace8:	4c62b03a 	or	r17,r9,r17
 200acec:	8816d43a 	srli	r11,r17,16
 200acf0:	897fffcc 	andi	r5,r17,65535
 200acf4:	2a15383a 	mul	r10,r5,r8
 200acf8:	5a19383a 	mul	r12,r11,r8
 200acfc:	29cb383a 	mul	r5,r5,r7
 200ad00:	5012d43a 	srli	r9,r10,16
 200ad04:	20c5c83a 	sub	r2,r4,r3
 200ad08:	614b883a 	add	r5,r12,r5
 200ad0c:	2a4b883a 	add	r5,r5,r9
 200ad10:	59c7383a 	mul	r3,r11,r7
 200ad14:	2b00022e 	bgeu	r5,r12,200ad20 <__divdf3+0x450>
 200ad18:	01000074 	movhi	r4,1
 200ad1c:	1907883a 	add	r3,r3,r4
 200ad20:	2808d43a 	srli	r4,r5,16
 200ad24:	280a943a 	slli	r5,r5,16
 200ad28:	54ffffcc 	andi	r19,r10,65535
 200ad2c:	1907883a 	add	r3,r3,r4
 200ad30:	2ccb883a 	add	r5,r5,r19
 200ad34:	10c09336 	bltu	r2,r3,200af84 <__divdf3+0x6b4>
 200ad38:	10c0ad26 	beq	r2,r3,200aff0 <__divdf3+0x720>
 200ad3c:	10c7c83a 	sub	r3,r2,r3
 200ad40:	3167c83a 	sub	r19,r6,r5
 200ad44:	34ed803a 	cmpltu	r22,r6,r19
 200ad48:	1dadc83a 	sub	r22,r3,r22
 200ad4c:	b400b226 	beq	r22,r16,200b018 <__divdf3+0x748>
 200ad50:	b009883a 	mov	r4,r22
 200ad54:	b80b883a 	mov	r5,r23
 200ad58:	d9c00115 	stw	r7,4(sp)
 200ad5c:	da000215 	stw	r8,8(sp)
 200ad60:	200a0240 	call	200a024 <__udivsi3>
 200ad64:	b009883a 	mov	r4,r22
 200ad68:	b80b883a 	mov	r5,r23
 200ad6c:	d8800315 	stw	r2,12(sp)
 200ad70:	200a02c0 	call	200a02c <__umodsi3>
 200ad74:	d9800317 	ldw	r6,12(sp)
 200ad78:	1004943a 	slli	r2,r2,16
 200ad7c:	9808d43a 	srli	r4,r19,16
 200ad80:	372d383a 	mul	r22,r6,fp
 200ad84:	d9c00117 	ldw	r7,4(sp)
 200ad88:	1106b03a 	or	r3,r2,r4
 200ad8c:	da000217 	ldw	r8,8(sp)
 200ad90:	1d80062e 	bgeu	r3,r22,200adac <__divdf3+0x4dc>
 200ad94:	1c07883a 	add	r3,r3,r16
 200ad98:	30bfffc4 	addi	r2,r6,-1
 200ad9c:	1c00a036 	bltu	r3,r16,200b020 <__divdf3+0x750>
 200ada0:	1d809f2e 	bgeu	r3,r22,200b020 <__divdf3+0x750>
 200ada4:	31bfff84 	addi	r6,r6,-2
 200ada8:	1c07883a 	add	r3,r3,r16
 200adac:	1dadc83a 	sub	r22,r3,r22
 200adb0:	b009883a 	mov	r4,r22
 200adb4:	b80b883a 	mov	r5,r23
 200adb8:	d9800315 	stw	r6,12(sp)
 200adbc:	d9c00115 	stw	r7,4(sp)
 200adc0:	da000215 	stw	r8,8(sp)
 200adc4:	200a0240 	call	200a024 <__udivsi3>
 200adc8:	b009883a 	mov	r4,r22
 200adcc:	b80b883a 	mov	r5,r23
 200add0:	d8800015 	stw	r2,0(sp)
 200add4:	200a02c0 	call	200a02c <__umodsi3>
 200add8:	da400017 	ldw	r9,0(sp)
 200addc:	1004943a 	slli	r2,r2,16
 200ade0:	993fffcc 	andi	r4,r19,65535
 200ade4:	4f39383a 	mul	fp,r9,fp
 200ade8:	1106b03a 	or	r3,r2,r4
 200adec:	d9800317 	ldw	r6,12(sp)
 200adf0:	d9c00117 	ldw	r7,4(sp)
 200adf4:	da000217 	ldw	r8,8(sp)
 200adf8:	1f00062e 	bgeu	r3,fp,200ae14 <__divdf3+0x544>
 200adfc:	1c07883a 	add	r3,r3,r16
 200ae00:	48bfffc4 	addi	r2,r9,-1
 200ae04:	1c008836 	bltu	r3,r16,200b028 <__divdf3+0x758>
 200ae08:	1f00872e 	bgeu	r3,fp,200b028 <__divdf3+0x758>
 200ae0c:	4a7fff84 	addi	r9,r9,-2
 200ae10:	1c07883a 	add	r3,r3,r16
 200ae14:	3008943a 	slli	r4,r6,16
 200ae18:	1f07c83a 	sub	r3,r3,fp
 200ae1c:	4926b03a 	or	r19,r9,r4
 200ae20:	993fffcc 	andi	r4,r19,65535
 200ae24:	980cd43a 	srli	r6,r19,16
 200ae28:	220b383a 	mul	r5,r4,r8
 200ae2c:	21c5383a 	mul	r2,r4,r7
 200ae30:	3211383a 	mul	r8,r6,r8
 200ae34:	2808d43a 	srli	r4,r5,16
 200ae38:	31cf383a 	mul	r7,r6,r7
 200ae3c:	4085883a 	add	r2,r8,r2
 200ae40:	1105883a 	add	r2,r2,r4
 200ae44:	1200022e 	bgeu	r2,r8,200ae50 <__divdf3+0x580>
 200ae48:	01000074 	movhi	r4,1
 200ae4c:	390f883a 	add	r7,r7,r4
 200ae50:	1008d43a 	srli	r4,r2,16
 200ae54:	1004943a 	slli	r2,r2,16
 200ae58:	297fffcc 	andi	r5,r5,65535
 200ae5c:	390f883a 	add	r7,r7,r4
 200ae60:	1145883a 	add	r2,r2,r5
 200ae64:	19c06536 	bltu	r3,r7,200affc <__divdf3+0x72c>
 200ae68:	19c09f26 	beq	r3,r7,200b0e8 <__divdf3+0x818>
 200ae6c:	9cc00054 	ori	r19,r19,1
 200ae70:	a100ffc4 	addi	r4,r20,1023
 200ae74:	013f500e 	bge	zero,r4,200abb8 <__divdf3+0x2e8>
 200ae78:	988001cc 	andi	r2,r19,7
 200ae7c:	10000726 	beq	r2,zero,200ae9c <__divdf3+0x5cc>
 200ae80:	98c003cc 	andi	r3,r19,15
 200ae84:	00800104 	movi	r2,4
 200ae88:	18800426 	beq	r3,r2,200ae9c <__divdf3+0x5cc>
 200ae8c:	9885883a 	add	r2,r19,r2
 200ae90:	14e1803a 	cmpltu	r16,r2,r19
 200ae94:	8c23883a 	add	r17,r17,r16
 200ae98:	1027883a 	mov	r19,r2
 200ae9c:	8880402c 	andhi	r2,r17,256
 200aea0:	10000426 	beq	r2,zero,200aeb4 <__divdf3+0x5e4>
 200aea4:	00bfc034 	movhi	r2,65280
 200aea8:	10bfffc4 	addi	r2,r2,-1
 200aeac:	a1010004 	addi	r4,r20,1024
 200aeb0:	88a2703a 	and	r17,r17,r2
 200aeb4:	0081ff84 	movi	r2,2046
 200aeb8:	113edf16 	blt	r2,r4,200aa38 <__divdf3+0x168>
 200aebc:	9826d0fa 	srli	r19,r19,3
 200aec0:	8804977a 	slli	r2,r17,29
 200aec4:	8820927a 	slli	r16,r17,9
 200aec8:	2101ffcc 	andi	r4,r4,2047
 200aecc:	14e6b03a 	or	r19,r2,r19
 200aed0:	800ad33a 	srli	r5,r16,12
 200aed4:	9180004c 	andi	r6,r18,1
 200aed8:	003edb06 	br	200aa48 <__divdf3+0x178>
 200aedc:	008000c4 	movi	r2,3
 200aee0:	4080a826 	beq	r8,r2,200b184 <__divdf3+0x8b4>
 200aee4:	00800044 	movi	r2,1
 200aee8:	4080551e 	bne	r8,r2,200b040 <__divdf3+0x770>
 200aeec:	e00d883a 	mov	r6,fp
 200aef0:	0009883a 	mov	r4,zero
 200aef4:	000b883a 	mov	r5,zero
 200aef8:	0027883a 	mov	r19,zero
 200aefc:	003ed206 	br	200aa48 <__divdf3+0x178>
 200af00:	00800434 	movhi	r2,16
 200af04:	89400234 	orhi	r5,r17,8
 200af08:	10bfffc4 	addi	r2,r2,-1
 200af0c:	b00d883a 	mov	r6,r22
 200af10:	288a703a 	and	r5,r5,r2
 200af14:	003f2606 	br	200abb0 <__divdf3+0x2e0>
 200af18:	d9800315 	stw	r6,12(sp)
 200af1c:	d9c00115 	stw	r7,4(sp)
 200af20:	200c5d00 	call	200c5d0 <__clzsi2>
 200af24:	10c00804 	addi	r3,r2,32
 200af28:	010009c4 	movi	r4,39
 200af2c:	d9800317 	ldw	r6,12(sp)
 200af30:	d9c00117 	ldw	r7,4(sp)
 200af34:	20fee30e 	bge	r4,r3,200aac4 <__divdf3+0x1f4>
 200af38:	117ffe04 	addi	r5,r2,-8
 200af3c:	9162983a 	sll	r17,r18,r5
 200af40:	0027883a 	mov	r19,zero
 200af44:	003ee606 	br	200aae0 <__divdf3+0x210>
 200af48:	3009883a 	mov	r4,r6
 200af4c:	d9800315 	stw	r6,12(sp)
 200af50:	da000215 	stw	r8,8(sp)
 200af54:	da400015 	stw	r9,0(sp)
 200af58:	200c5d00 	call	200c5d0 <__clzsi2>
 200af5c:	10c00804 	addi	r3,r2,32
 200af60:	010009c4 	movi	r4,39
 200af64:	d9800317 	ldw	r6,12(sp)
 200af68:	da000217 	ldw	r8,8(sp)
 200af6c:	da400017 	ldw	r9,0(sp)
 200af70:	20fef20e 	bge	r4,r3,200ab3c <__divdf3+0x26c>
 200af74:	10bffe04 	addi	r2,r2,-8
 200af78:	a8a0983a 	sll	r16,r21,r2
 200af7c:	002b883a 	mov	r21,zero
 200af80:	003ef506 	br	200ab58 <__divdf3+0x288>
 200af84:	354d883a 	add	r6,r6,r21
 200af88:	3549803a 	cmpltu	r4,r6,r21
 200af8c:	2409883a 	add	r4,r4,r16
 200af90:	2089883a 	add	r4,r4,r2
 200af94:	88bfffc4 	addi	r2,r17,-1
 200af98:	81000c2e 	bgeu	r16,r4,200afcc <__divdf3+0x6fc>
 200af9c:	20c04436 	bltu	r4,r3,200b0b0 <__divdf3+0x7e0>
 200afa0:	19006f26 	beq	r3,r4,200b160 <__divdf3+0x890>
 200afa4:	20c7c83a 	sub	r3,r4,r3
 200afa8:	1023883a 	mov	r17,r2
 200afac:	003f6406 	br	200ad40 <__divdf3+0x470>
 200afb0:	9d7f1736 	bltu	r19,r21,200ac10 <__divdf3+0x340>
 200afb4:	9806d07a 	srli	r3,r19,1
 200afb8:	880497fa 	slli	r2,r17,31
 200afbc:	980c97fa 	slli	r6,r19,31
 200afc0:	882cd07a 	srli	r22,r17,1
 200afc4:	18a6b03a 	or	r19,r3,r2
 200afc8:	003f1406 	br	200ac1c <__divdf3+0x34c>
 200afcc:	243ff51e 	bne	r4,r16,200afa4 <__divdf3+0x6d4>
 200afd0:	357ff22e 	bgeu	r6,r21,200af9c <__divdf3+0x6cc>
 200afd4:	80c7c83a 	sub	r3,r16,r3
 200afd8:	1023883a 	mov	r17,r2
 200afdc:	003f5806 	br	200ad40 <__divdf3+0x470>
 200afe0:	1013883a 	mov	r9,r2
 200afe4:	003f3d06 	br	200acdc <__divdf3+0x40c>
 200afe8:	1023883a 	mov	r17,r2
 200afec:	003f2506 	br	200ac84 <__divdf3+0x3b4>
 200aff0:	317fe436 	bltu	r6,r5,200af84 <__divdf3+0x6b4>
 200aff4:	0007883a 	mov	r3,zero
 200aff8:	003f5106 	br	200ad40 <__divdf3+0x470>
 200affc:	1c07883a 	add	r3,r3,r16
 200b000:	993fffc4 	addi	r4,r19,-1
 200b004:	1c000a2e 	bgeu	r3,r16,200b030 <__divdf3+0x760>
 200b008:	2027883a 	mov	r19,r4
 200b00c:	19ff971e 	bne	r3,r7,200ae6c <__divdf3+0x59c>
 200b010:	a8bf961e 	bne	r21,r2,200ae6c <__divdf3+0x59c>
 200b014:	003f9606 	br	200ae70 <__divdf3+0x5a0>
 200b018:	04ffffc4 	movi	r19,-1
 200b01c:	003f9406 	br	200ae70 <__divdf3+0x5a0>
 200b020:	100d883a 	mov	r6,r2
 200b024:	003f6106 	br	200adac <__divdf3+0x4dc>
 200b028:	1013883a 	mov	r9,r2
 200b02c:	003f7906 	br	200ae14 <__divdf3+0x544>
 200b030:	19c02636 	bltu	r3,r7,200b0cc <__divdf3+0x7fc>
 200b034:	38c04d26 	beq	r7,r3,200b16c <__divdf3+0x89c>
 200b038:	2027883a 	mov	r19,r4
 200b03c:	003f8b06 	br	200ae6c <__divdf3+0x59c>
 200b040:	e025883a 	mov	r18,fp
 200b044:	003f8a06 	br	200ae70 <__divdf3+0x5a0>
 200b048:	008007c4 	movi	r2,31
 200b04c:	14002a16 	blt	r2,r16,200b0f8 <__divdf3+0x828>
 200b050:	a5010784 	addi	r20,r20,1054
 200b054:	8d04983a 	sll	r2,r17,r20
 200b058:	9c06d83a 	srl	r3,r19,r16
 200b05c:	9d28983a 	sll	r20,r19,r20
 200b060:	8c20d83a 	srl	r16,r17,r16
 200b064:	1886b03a 	or	r3,r3,r2
 200b068:	a004c03a 	cmpne	r2,r20,zero
 200b06c:	1884b03a 	or	r2,r3,r2
 200b070:	10c001cc 	andi	r3,r2,7
 200b074:	18000726 	beq	r3,zero,200b094 <__divdf3+0x7c4>
 200b078:	110003cc 	andi	r4,r2,15
 200b07c:	00c00104 	movi	r3,4
 200b080:	20c00426 	beq	r4,r3,200b094 <__divdf3+0x7c4>
 200b084:	10c00104 	addi	r3,r2,4
 200b088:	1885803a 	cmpltu	r2,r3,r2
 200b08c:	80a1883a 	add	r16,r16,r2
 200b090:	1805883a 	mov	r2,r3
 200b094:	80c0202c 	andhi	r3,r16,128
 200b098:	18002d26 	beq	r3,zero,200b150 <__divdf3+0x880>
 200b09c:	9180004c 	andi	r6,r18,1
 200b0a0:	01000044 	movi	r4,1
 200b0a4:	000b883a 	mov	r5,zero
 200b0a8:	0027883a 	mov	r19,zero
 200b0ac:	003e6606 	br	200aa48 <__divdf3+0x178>
 200b0b0:	354d883a 	add	r6,r6,r21
 200b0b4:	356d803a 	cmpltu	r22,r6,r21
 200b0b8:	b42d883a 	add	r22,r22,r16
 200b0bc:	b12d883a 	add	r22,r22,r4
 200b0c0:	8c7fff84 	addi	r17,r17,-2
 200b0c4:	b0c7c83a 	sub	r3,r22,r3
 200b0c8:	003f1d06 	br	200ad40 <__divdf3+0x470>
 200b0cc:	ad4b883a 	add	r5,r21,r21
 200b0d0:	2d6b803a 	cmpltu	r21,r5,r21
 200b0d4:	ac2b883a 	add	r21,r21,r16
 200b0d8:	1d47883a 	add	r3,r3,r21
 200b0dc:	993fff84 	addi	r4,r19,-2
 200b0e0:	282b883a 	mov	r21,r5
 200b0e4:	003fc806 	br	200b008 <__divdf3+0x738>
 200b0e8:	103fc41e 	bne	r2,zero,200affc <__divdf3+0x72c>
 200b0ec:	002b883a 	mov	r21,zero
 200b0f0:	a8bf5e1e 	bne	r21,r2,200ae6c <__divdf3+0x59c>
 200b0f4:	003f5e06 	br	200ae70 <__divdf3+0x5a0>
 200b0f8:	00bef884 	movi	r2,-1054
 200b0fc:	1505c83a 	sub	r2,r2,r20
 200b100:	00c00804 	movi	r3,32
 200b104:	8884d83a 	srl	r2,r17,r2
 200b108:	80c01c26 	beq	r16,r3,200b17c <__divdf3+0x8ac>
 200b10c:	a0c10f84 	addi	r3,r20,1086
 200b110:	88c6983a 	sll	r3,r17,r3
 200b114:	1cc6b03a 	or	r3,r3,r19
 200b118:	1806c03a 	cmpne	r3,r3,zero
 200b11c:	1884b03a 	or	r2,r3,r2
 200b120:	140001cc 	andi	r16,r2,7
 200b124:	8000061e 	bne	r16,zero,200b140 <__divdf3+0x870>
 200b128:	000b883a 	mov	r5,zero
 200b12c:	1004d0fa 	srli	r2,r2,3
 200b130:	9180004c 	andi	r6,r18,1
 200b134:	0009883a 	mov	r4,zero
 200b138:	1426b03a 	or	r19,r2,r16
 200b13c:	003e4206 	br	200aa48 <__divdf3+0x178>
 200b140:	110003cc 	andi	r4,r2,15
 200b144:	00c00104 	movi	r3,4
 200b148:	0021883a 	mov	r16,zero
 200b14c:	20ffcd1e 	bne	r4,r3,200b084 <__divdf3+0x7b4>
 200b150:	800a927a 	slli	r5,r16,9
 200b154:	8020977a 	slli	r16,r16,29
 200b158:	280ad33a 	srli	r5,r5,12
 200b15c:	003ff306 	br	200b12c <__divdf3+0x85c>
 200b160:	317fd336 	bltu	r6,r5,200b0b0 <__divdf3+0x7e0>
 200b164:	1023883a 	mov	r17,r2
 200b168:	003fa206 	br	200aff4 <__divdf3+0x724>
 200b16c:	a8bfd736 	bltu	r21,r2,200b0cc <__divdf3+0x7fc>
 200b170:	2027883a 	mov	r19,r4
 200b174:	a8bf3d1e 	bne	r21,r2,200ae6c <__divdf3+0x59c>
 200b178:	003f3d06 	br	200ae70 <__divdf3+0x5a0>
 200b17c:	0007883a 	mov	r3,zero
 200b180:	003fe406 	br	200b114 <__divdf3+0x844>
 200b184:	00800434 	movhi	r2,16
 200b188:	89400234 	orhi	r5,r17,8
 200b18c:	10bfffc4 	addi	r2,r2,-1
 200b190:	e00d883a 	mov	r6,fp
 200b194:	288a703a 	and	r5,r5,r2
 200b198:	003e8506 	br	200abb0 <__divdf3+0x2e0>

0200b19c <__eqdf2>:
 200b19c:	2804d53a 	srli	r2,r5,20
 200b1a0:	3806d53a 	srli	r3,r7,20
 200b1a4:	02000434 	movhi	r8,16
 200b1a8:	423fffc4 	addi	r8,r8,-1
 200b1ac:	1081ffcc 	andi	r2,r2,2047
 200b1b0:	0241ffc4 	movi	r9,2047
 200b1b4:	2a14703a 	and	r10,r5,r8
 200b1b8:	18c1ffcc 	andi	r3,r3,2047
 200b1bc:	3a10703a 	and	r8,r7,r8
 200b1c0:	280ad7fa 	srli	r5,r5,31
 200b1c4:	380ed7fa 	srli	r7,r7,31
 200b1c8:	12400f26 	beq	r2,r9,200b208 <__eqdf2+0x6c>
 200b1cc:	0241ffc4 	movi	r9,2047
 200b1d0:	1a400326 	beq	r3,r9,200b1e0 <__eqdf2+0x44>
 200b1d4:	10c00526 	beq	r2,r3,200b1ec <__eqdf2+0x50>
 200b1d8:	00800044 	movi	r2,1
 200b1dc:	f800283a 	ret
 200b1e0:	4192b03a 	or	r9,r8,r6
 200b1e4:	483ffc1e 	bne	r9,zero,200b1d8 <__eqdf2+0x3c>
 200b1e8:	10fffb1e 	bne	r2,r3,200b1d8 <__eqdf2+0x3c>
 200b1ec:	523ffa1e 	bne	r10,r8,200b1d8 <__eqdf2+0x3c>
 200b1f0:	21bff91e 	bne	r4,r6,200b1d8 <__eqdf2+0x3c>
 200b1f4:	29c00826 	beq	r5,r7,200b218 <__eqdf2+0x7c>
 200b1f8:	103ff71e 	bne	r2,zero,200b1d8 <__eqdf2+0x3c>
 200b1fc:	5104b03a 	or	r2,r10,r4
 200b200:	1004c03a 	cmpne	r2,r2,zero
 200b204:	f800283a 	ret
 200b208:	5112b03a 	or	r9,r10,r4
 200b20c:	483fef26 	beq	r9,zero,200b1cc <__eqdf2+0x30>
 200b210:	00800044 	movi	r2,1
 200b214:	f800283a 	ret
 200b218:	0005883a 	mov	r2,zero
 200b21c:	f800283a 	ret

0200b220 <__gedf2>:
 200b220:	2804d53a 	srli	r2,r5,20
 200b224:	3806d53a 	srli	r3,r7,20
 200b228:	02000434 	movhi	r8,16
 200b22c:	423fffc4 	addi	r8,r8,-1
 200b230:	0241ffc4 	movi	r9,2047
 200b234:	1081ffcc 	andi	r2,r2,2047
 200b238:	2a14703a 	and	r10,r5,r8
 200b23c:	1a46703a 	and	r3,r3,r9
 200b240:	3a10703a 	and	r8,r7,r8
 200b244:	280ad7fa 	srli	r5,r5,31
 200b248:	380ed7fa 	srli	r7,r7,31
 200b24c:	12400b26 	beq	r2,r9,200b27c <__gedf2+0x5c>
 200b250:	1a401626 	beq	r3,r9,200b2ac <__gedf2+0x8c>
 200b254:	10000c1e 	bne	r2,zero,200b288 <__gedf2+0x68>
 200b258:	5112b03a 	or	r9,r10,r4
 200b25c:	4813003a 	cmpeq	r9,r9,zero
 200b260:	4817883a 	mov	r11,r9
 200b264:	18000c1e 	bne	r3,zero,200b298 <__gedf2+0x78>
 200b268:	4198b03a 	or	r12,r8,r6
 200b26c:	60000a1e 	bne	r12,zero,200b298 <__gedf2+0x78>
 200b270:	48001326 	beq	r9,zero,200b2c0 <__gedf2+0xa0>
 200b274:	0005883a 	mov	r2,zero
 200b278:	f800283a 	ret
 200b27c:	5112b03a 	or	r9,r10,r4
 200b280:	4800191e 	bne	r9,zero,200b2e8 <__gedf2+0xc8>
 200b284:	18800926 	beq	r3,r2,200b2ac <__gedf2+0x8c>
 200b288:	18000b1e 	bne	r3,zero,200b2b8 <__gedf2+0x98>
 200b28c:	4192b03a 	or	r9,r8,r6
 200b290:	0017883a 	mov	r11,zero
 200b294:	48000a26 	beq	r9,zero,200b2c0 <__gedf2+0xa0>
 200b298:	39c03fcc 	andi	r7,r7,255
 200b29c:	58000726 	beq	r11,zero,200b2bc <__gedf2+0x9c>
 200b2a0:	3800081e 	bne	r7,zero,200b2c4 <__gedf2+0xa4>
 200b2a4:	00bfffc4 	movi	r2,-1
 200b2a8:	f800283a 	ret
 200b2ac:	4192b03a 	or	r9,r8,r6
 200b2b0:	48000d1e 	bne	r9,zero,200b2e8 <__gedf2+0xc8>
 200b2b4:	103fe826 	beq	r2,zero,200b258 <__gedf2+0x38>
 200b2b8:	39c03fcc 	andi	r7,r7,255
 200b2bc:	29c00326 	beq	r5,r7,200b2cc <__gedf2+0xac>
 200b2c0:	283ff81e 	bne	r5,zero,200b2a4 <__gedf2+0x84>
 200b2c4:	00800044 	movi	r2,1
 200b2c8:	f800283a 	ret
 200b2cc:	18bffc16 	blt	r3,r2,200b2c0 <__gedf2+0xa0>
 200b2d0:	10c00316 	blt	r2,r3,200b2e0 <__gedf2+0xc0>
 200b2d4:	42bffa36 	bltu	r8,r10,200b2c0 <__gedf2+0xa0>
 200b2d8:	52000526 	beq	r10,r8,200b2f0 <__gedf2+0xd0>
 200b2dc:	523fe52e 	bgeu	r10,r8,200b274 <__gedf2+0x54>
 200b2e0:	283ff026 	beq	r5,zero,200b2a4 <__gedf2+0x84>
 200b2e4:	003ff706 	br	200b2c4 <__gedf2+0xa4>
 200b2e8:	00bfff84 	movi	r2,-2
 200b2ec:	f800283a 	ret
 200b2f0:	313ff336 	bltu	r6,r4,200b2c0 <__gedf2+0xa0>
 200b2f4:	21bfdf2e 	bgeu	r4,r6,200b274 <__gedf2+0x54>
 200b2f8:	283fea26 	beq	r5,zero,200b2a4 <__gedf2+0x84>
 200b2fc:	003ff106 	br	200b2c4 <__gedf2+0xa4>

0200b300 <__ledf2>:
 200b300:	2804d53a 	srli	r2,r5,20
 200b304:	3810d53a 	srli	r8,r7,20
 200b308:	00c00434 	movhi	r3,16
 200b30c:	18ffffc4 	addi	r3,r3,-1
 200b310:	0241ffc4 	movi	r9,2047
 200b314:	1081ffcc 	andi	r2,r2,2047
 200b318:	28d4703a 	and	r10,r5,r3
 200b31c:	4250703a 	and	r8,r8,r9
 200b320:	38c6703a 	and	r3,r7,r3
 200b324:	280ad7fa 	srli	r5,r5,31
 200b328:	380ed7fa 	srli	r7,r7,31
 200b32c:	12400b26 	beq	r2,r9,200b35c <__ledf2+0x5c>
 200b330:	42401926 	beq	r8,r9,200b398 <__ledf2+0x98>
 200b334:	10000c1e 	bne	r2,zero,200b368 <__ledf2+0x68>
 200b338:	5112b03a 	or	r9,r10,r4
 200b33c:	4813003a 	cmpeq	r9,r9,zero
 200b340:	4817883a 	mov	r11,r9
 200b344:	40000f26 	beq	r8,zero,200b384 <__ledf2+0x84>
 200b348:	39c03fcc 	andi	r7,r7,255
 200b34c:	58001826 	beq	r11,zero,200b3b0 <__ledf2+0xb0>
 200b350:	38000a1e 	bne	r7,zero,200b37c <__ledf2+0x7c>
 200b354:	00bfffc4 	movi	r2,-1
 200b358:	f800283a 	ret
 200b35c:	5112b03a 	or	r9,r10,r4
 200b360:	48000f1e 	bne	r9,zero,200b3a0 <__ledf2+0xa0>
 200b364:	40800c26 	beq	r8,r2,200b398 <__ledf2+0x98>
 200b368:	4000101e 	bne	r8,zero,200b3ac <__ledf2+0xac>
 200b36c:	1992b03a 	or	r9,r3,r6
 200b370:	0017883a 	mov	r11,zero
 200b374:	483ff41e 	bne	r9,zero,200b348 <__ledf2+0x48>
 200b378:	283ff61e 	bne	r5,zero,200b354 <__ledf2+0x54>
 200b37c:	00800044 	movi	r2,1
 200b380:	f800283a 	ret
 200b384:	1998b03a 	or	r12,r3,r6
 200b388:	603fef1e 	bne	r12,zero,200b348 <__ledf2+0x48>
 200b38c:	483ffa26 	beq	r9,zero,200b378 <__ledf2+0x78>
 200b390:	0005883a 	mov	r2,zero
 200b394:	f800283a 	ret
 200b398:	1992b03a 	or	r9,r3,r6
 200b39c:	48000226 	beq	r9,zero,200b3a8 <__ledf2+0xa8>
 200b3a0:	00800084 	movi	r2,2
 200b3a4:	f800283a 	ret
 200b3a8:	103fe326 	beq	r2,zero,200b338 <__ledf2+0x38>
 200b3ac:	39c03fcc 	andi	r7,r7,255
 200b3b0:	29fff11e 	bne	r5,r7,200b378 <__ledf2+0x78>
 200b3b4:	40bff016 	blt	r8,r2,200b378 <__ledf2+0x78>
 200b3b8:	12000316 	blt	r2,r8,200b3c8 <__ledf2+0xc8>
 200b3bc:	1abfee36 	bltu	r3,r10,200b378 <__ledf2+0x78>
 200b3c0:	50c00326 	beq	r10,r3,200b3d0 <__ledf2+0xd0>
 200b3c4:	50fff22e 	bgeu	r10,r3,200b390 <__ledf2+0x90>
 200b3c8:	283fe226 	beq	r5,zero,200b354 <__ledf2+0x54>
 200b3cc:	003feb06 	br	200b37c <__ledf2+0x7c>
 200b3d0:	313fe936 	bltu	r6,r4,200b378 <__ledf2+0x78>
 200b3d4:	21bfee2e 	bgeu	r4,r6,200b390 <__ledf2+0x90>
 200b3d8:	283fde26 	beq	r5,zero,200b354 <__ledf2+0x54>
 200b3dc:	003fe706 	br	200b37c <__ledf2+0x7c>

0200b3e0 <__muldf3>:
 200b3e0:	defff204 	addi	sp,sp,-56
 200b3e4:	2804d53a 	srli	r2,r5,20
 200b3e8:	dd800a15 	stw	r22,40(sp)
 200b3ec:	282cd7fa 	srli	r22,r5,31
 200b3f0:	dc000415 	stw	r16,16(sp)
 200b3f4:	04000434 	movhi	r16,16
 200b3f8:	df000c15 	stw	fp,48(sp)
 200b3fc:	dd000815 	stw	r20,32(sp)
 200b400:	dcc00715 	stw	r19,28(sp)
 200b404:	dc800615 	stw	r18,24(sp)
 200b408:	dc400515 	stw	r17,20(sp)
 200b40c:	843fffc4 	addi	r16,r16,-1
 200b410:	dfc00d15 	stw	ra,52(sp)
 200b414:	ddc00b15 	stw	r23,44(sp)
 200b418:	dd400915 	stw	r21,36(sp)
 200b41c:	1501ffcc 	andi	r20,r2,2047
 200b420:	2023883a 	mov	r17,r4
 200b424:	2025883a 	mov	r18,r4
 200b428:	2c20703a 	and	r16,r5,r16
 200b42c:	b027883a 	mov	r19,r22
 200b430:	b7003fcc 	andi	fp,r22,255
 200b434:	a0005926 	beq	r20,zero,200b59c <__muldf3+0x1bc>
 200b438:	0081ffc4 	movi	r2,2047
 200b43c:	a0803426 	beq	r20,r2,200b510 <__muldf3+0x130>
 200b440:	84000434 	orhi	r16,r16,16
 200b444:	2004d77a 	srli	r2,r4,29
 200b448:	802090fa 	slli	r16,r16,3
 200b44c:	202490fa 	slli	r18,r4,3
 200b450:	a53f0044 	addi	r20,r20,-1023
 200b454:	80a0b03a 	or	r16,r16,r2
 200b458:	002b883a 	mov	r21,zero
 200b45c:	0015883a 	mov	r10,zero
 200b460:	3812d53a 	srli	r9,r7,20
 200b464:	3806d7fa 	srli	r3,r7,31
 200b468:	02000434 	movhi	r8,16
 200b46c:	423fffc4 	addi	r8,r8,-1
 200b470:	4941ffcc 	andi	r5,r9,2047
 200b474:	302f883a 	mov	r23,r6
 200b478:	3a22703a 	and	r17,r7,r8
 200b47c:	1ac03fcc 	andi	r11,r3,255
 200b480:	28006226 	beq	r5,zero,200b60c <__muldf3+0x22c>
 200b484:	0081ffc4 	movi	r2,2047
 200b488:	28805a26 	beq	r5,r2,200b5f4 <__muldf3+0x214>
 200b48c:	8a000434 	orhi	r8,r17,16
 200b490:	3004d77a 	srli	r2,r6,29
 200b494:	401090fa 	slli	r8,r8,3
 200b498:	302e90fa 	slli	r23,r6,3
 200b49c:	297f0044 	addi	r5,r5,-1023
 200b4a0:	40a2b03a 	or	r17,r8,r2
 200b4a4:	0013883a 	mov	r9,zero
 200b4a8:	4d4cb03a 	or	r6,r9,r21
 200b4ac:	300c90ba 	slli	r6,r6,2
 200b4b0:	02008074 	movhi	r8,513
 200b4b4:	422d3404 	addi	r8,r8,-19248
 200b4b8:	320d883a 	add	r6,r6,r8
 200b4bc:	31800017 	ldw	r6,0(r6)
 200b4c0:	a14b883a 	add	r5,r20,r5
 200b4c4:	1dacf03a 	xor	r22,r3,r22
 200b4c8:	2b000044 	addi	r12,r5,1
 200b4cc:	3000683a 	jmp	r6
 200b4d0:	0200b70c 	andi	r8,zero,732
 200b4d4:	0200b6f8 	rdprs	r8,zero,731
 200b4d8:	0200b6f8 	rdprs	r8,zero,731
 200b4dc:	0200b6e4 	muli	r8,zero,731
 200b4e0:	0200b52c 	andhi	r8,zero,724
 200b4e4:	0200b52c 	andhi	r8,zero,724
 200b4e8:	0200b6cc 	andi	r8,zero,731
 200b4ec:	0200b6e4 	muli	r8,zero,731
 200b4f0:	0200b52c 	andhi	r8,zero,724
 200b4f4:	0200b6cc 	andi	r8,zero,731
 200b4f8:	0200b52c 	andhi	r8,zero,724
 200b4fc:	0200b6e4 	muli	r8,zero,731
 200b500:	0200b530 	cmpltui	r8,zero,724
 200b504:	0200b530 	cmpltui	r8,zero,724
 200b508:	0200b530 	cmpltui	r8,zero,724
 200b50c:	0200b908 	cmpgei	r8,zero,740
 200b510:	8104b03a 	or	r2,r16,r4
 200b514:	10006a1e 	bne	r2,zero,200b6c0 <__muldf3+0x2e0>
 200b518:	05400204 	movi	r21,8
 200b51c:	0021883a 	mov	r16,zero
 200b520:	0025883a 	mov	r18,zero
 200b524:	02800084 	movi	r10,2
 200b528:	003fcd06 	br	200b460 <__muldf3+0x80>
 200b52c:	b039883a 	mov	fp,r22
 200b530:	00800084 	movi	r2,2
 200b534:	50804e1e 	bne	r10,r2,200b670 <__muldf3+0x290>
 200b538:	e4c0004c 	andi	r19,fp,1
 200b53c:	0101ffc4 	movi	r4,2047
 200b540:	0021883a 	mov	r16,zero
 200b544:	0025883a 	mov	r18,zero
 200b548:	2008953a 	slli	r4,r4,20
 200b54c:	98c03fcc 	andi	r3,r19,255
 200b550:	01400434 	movhi	r5,16
 200b554:	297fffc4 	addi	r5,r5,-1
 200b558:	180697fa 	slli	r3,r3,31
 200b55c:	8160703a 	and	r16,r16,r5
 200b560:	8120b03a 	or	r16,r16,r4
 200b564:	80c6b03a 	or	r3,r16,r3
 200b568:	9005883a 	mov	r2,r18
 200b56c:	dfc00d17 	ldw	ra,52(sp)
 200b570:	df000c17 	ldw	fp,48(sp)
 200b574:	ddc00b17 	ldw	r23,44(sp)
 200b578:	dd800a17 	ldw	r22,40(sp)
 200b57c:	dd400917 	ldw	r21,36(sp)
 200b580:	dd000817 	ldw	r20,32(sp)
 200b584:	dcc00717 	ldw	r19,28(sp)
 200b588:	dc800617 	ldw	r18,24(sp)
 200b58c:	dc400517 	ldw	r17,20(sp)
 200b590:	dc000417 	ldw	r16,16(sp)
 200b594:	dec00e04 	addi	sp,sp,56
 200b598:	f800283a 	ret
 200b59c:	8104b03a 	or	r2,r16,r4
 200b5a0:	10004226 	beq	r2,zero,200b6ac <__muldf3+0x2cc>
 200b5a4:	8000f926 	beq	r16,zero,200b98c <__muldf3+0x5ac>
 200b5a8:	8009883a 	mov	r4,r16
 200b5ac:	d9800315 	stw	r6,12(sp)
 200b5b0:	d9c00015 	stw	r7,0(sp)
 200b5b4:	200c5d00 	call	200c5d0 <__clzsi2>
 200b5b8:	d9800317 	ldw	r6,12(sp)
 200b5bc:	d9c00017 	ldw	r7,0(sp)
 200b5c0:	1007883a 	mov	r3,r2
 200b5c4:	01000a04 	movi	r4,40
 200b5c8:	18bffe04 	addi	r2,r3,-8
 200b5cc:	20c9c83a 	sub	r4,r4,r3
 200b5d0:	80a0983a 	sll	r16,r16,r2
 200b5d4:	8908d83a 	srl	r4,r17,r4
 200b5d8:	88a4983a 	sll	r18,r17,r2
 200b5dc:	2420b03a 	or	r16,r4,r16
 200b5e0:	017f0344 	movi	r5,-1011
 200b5e4:	28e9c83a 	sub	r20,r5,r3
 200b5e8:	002b883a 	mov	r21,zero
 200b5ec:	0015883a 	mov	r10,zero
 200b5f0:	003f9b06 	br	200b460 <__muldf3+0x80>
 200b5f4:	8984b03a 	or	r2,r17,r6
 200b5f8:	10002a1e 	bne	r2,zero,200b6a4 <__muldf3+0x2c4>
 200b5fc:	0023883a 	mov	r17,zero
 200b600:	002f883a 	mov	r23,zero
 200b604:	02400084 	movi	r9,2
 200b608:	003fa706 	br	200b4a8 <__muldf3+0xc8>
 200b60c:	8984b03a 	or	r2,r17,r6
 200b610:	10002026 	beq	r2,zero,200b694 <__muldf3+0x2b4>
 200b614:	8800cc26 	beq	r17,zero,200b948 <__muldf3+0x568>
 200b618:	8809883a 	mov	r4,r17
 200b61c:	d8c00215 	stw	r3,8(sp)
 200b620:	d9800315 	stw	r6,12(sp)
 200b624:	da800015 	stw	r10,0(sp)
 200b628:	dac00115 	stw	r11,4(sp)
 200b62c:	200c5d00 	call	200c5d0 <__clzsi2>
 200b630:	d8c00217 	ldw	r3,8(sp)
 200b634:	d9800317 	ldw	r6,12(sp)
 200b638:	da800017 	ldw	r10,0(sp)
 200b63c:	dac00117 	ldw	r11,4(sp)
 200b640:	1009883a 	mov	r4,r2
 200b644:	01400a04 	movi	r5,40
 200b648:	25fffe04 	addi	r23,r4,-8
 200b64c:	290bc83a 	sub	r5,r5,r4
 200b650:	8dd0983a 	sll	r8,r17,r23
 200b654:	314ad83a 	srl	r5,r6,r5
 200b658:	35ee983a 	sll	r23,r6,r23
 200b65c:	2a22b03a 	or	r17,r5,r8
 200b660:	017f0344 	movi	r5,-1011
 200b664:	290bc83a 	sub	r5,r5,r4
 200b668:	0013883a 	mov	r9,zero
 200b66c:	003f8e06 	br	200b4a8 <__muldf3+0xc8>
 200b670:	008000c4 	movi	r2,3
 200b674:	50811d26 	beq	r10,r2,200baec <__muldf3+0x70c>
 200b678:	00800044 	movi	r2,1
 200b67c:	5080e01e 	bne	r10,r2,200ba00 <__muldf3+0x620>
 200b680:	e0a6703a 	and	r19,fp,r2
 200b684:	0009883a 	mov	r4,zero
 200b688:	0021883a 	mov	r16,zero
 200b68c:	0025883a 	mov	r18,zero
 200b690:	003fad06 	br	200b548 <__muldf3+0x168>
 200b694:	0023883a 	mov	r17,zero
 200b698:	002f883a 	mov	r23,zero
 200b69c:	02400044 	movi	r9,1
 200b6a0:	003f8106 	br	200b4a8 <__muldf3+0xc8>
 200b6a4:	024000c4 	movi	r9,3
 200b6a8:	003f7f06 	br	200b4a8 <__muldf3+0xc8>
 200b6ac:	05400104 	movi	r21,4
 200b6b0:	0021883a 	mov	r16,zero
 200b6b4:	0025883a 	mov	r18,zero
 200b6b8:	02800044 	movi	r10,1
 200b6bc:	003f6806 	br	200b460 <__muldf3+0x80>
 200b6c0:	05400304 	movi	r21,12
 200b6c4:	028000c4 	movi	r10,3
 200b6c8:	003f6506 	br	200b460 <__muldf3+0x80>
 200b6cc:	04000434 	movhi	r16,16
 200b6d0:	0027883a 	mov	r19,zero
 200b6d4:	843fffc4 	addi	r16,r16,-1
 200b6d8:	04bfffc4 	movi	r18,-1
 200b6dc:	0101ffc4 	movi	r4,2047
 200b6e0:	003f9906 	br	200b548 <__muldf3+0x168>
 200b6e4:	8821883a 	mov	r16,r17
 200b6e8:	b825883a 	mov	r18,r23
 200b6ec:	5839883a 	mov	fp,r11
 200b6f0:	4815883a 	mov	r10,r9
 200b6f4:	003f8e06 	br	200b530 <__muldf3+0x150>
 200b6f8:	8821883a 	mov	r16,r17
 200b6fc:	b825883a 	mov	r18,r23
 200b700:	b039883a 	mov	fp,r22
 200b704:	4815883a 	mov	r10,r9
 200b708:	003f8906 	br	200b530 <__muldf3+0x150>
 200b70c:	b80cd43a 	srli	r6,r23,16
 200b710:	9006d43a 	srli	r3,r18,16
 200b714:	90bfffcc 	andi	r2,r18,65535
 200b718:	bdffffcc 	andi	r23,r23,65535
 200b71c:	b891383a 	mul	r8,r23,r2
 200b720:	b8c9383a 	mul	r4,r23,r3
 200b724:	309b383a 	mul	r13,r6,r2
 200b728:	400ed43a 	srli	r7,r8,16
 200b72c:	30df383a 	mul	r15,r6,r3
 200b730:	235b883a 	add	r13,r4,r13
 200b734:	69db883a 	add	r13,r13,r7
 200b738:	6900022e 	bgeu	r13,r4,200b744 <__muldf3+0x364>
 200b73c:	01000074 	movhi	r4,1
 200b740:	791f883a 	add	r15,r15,r4
 200b744:	8828d43a 	srli	r20,r17,16
 200b748:	8c7fffcc 	andi	r17,r17,65535
 200b74c:	888f383a 	mul	r7,r17,r2
 200b750:	88d3383a 	mul	r9,r17,r3
 200b754:	a0a5383a 	mul	r18,r20,r2
 200b758:	3816d43a 	srli	r11,r7,16
 200b75c:	6814943a 	slli	r10,r13,16
 200b760:	4ca5883a 	add	r18,r9,r18
 200b764:	423fffcc 	andi	r8,r8,65535
 200b768:	92e5883a 	add	r18,r18,r11
 200b76c:	6808d43a 	srli	r4,r13,16
 200b770:	5215883a 	add	r10,r10,r8
 200b774:	a0c7383a 	mul	r3,r20,r3
 200b778:	9240022e 	bgeu	r18,r9,200b784 <__muldf3+0x3a4>
 200b77c:	00800074 	movhi	r2,1
 200b780:	1887883a 	add	r3,r3,r2
 200b784:	802ad43a 	srli	r21,r16,16
 200b788:	80bfffcc 	andi	r2,r16,65535
 200b78c:	b893383a 	mul	r9,r23,r2
 200b790:	3091383a 	mul	r8,r6,r2
 200b794:	bd6f383a 	mul	r23,r23,r21
 200b798:	9026943a 	slli	r19,r18,16
 200b79c:	481ad43a 	srli	r13,r9,16
 200b7a0:	9024d43a 	srli	r18,r18,16
 200b7a4:	39ffffcc 	andi	r7,r7,65535
 200b7a8:	ba11883a 	add	r8,r23,r8
 200b7ac:	99e7883a 	add	r19,r19,r7
 200b7b0:	4351883a 	add	r8,r8,r13
 200b7b4:	1c97883a 	add	r11,r3,r18
 200b7b8:	354d383a 	mul	r6,r6,r21
 200b7bc:	9925883a 	add	r18,r19,r4
 200b7c0:	45c0022e 	bgeu	r8,r23,200b7cc <__muldf3+0x3ec>
 200b7c4:	00c00074 	movhi	r3,1
 200b7c8:	30cd883a 	add	r6,r6,r3
 200b7cc:	8889383a 	mul	r4,r17,r2
 200b7d0:	8d63383a 	mul	r17,r17,r21
 200b7d4:	a085383a 	mul	r2,r20,r2
 200b7d8:	200ed43a 	srli	r7,r4,16
 200b7dc:	401cd43a 	srli	r14,r8,16
 200b7e0:	401a943a 	slli	r13,r8,16
 200b7e4:	8885883a 	add	r2,r17,r2
 200b7e8:	4a3fffcc 	andi	r8,r9,65535
 200b7ec:	11c5883a 	add	r2,r2,r7
 200b7f0:	339d883a 	add	r14,r6,r14
 200b7f4:	6a11883a 	add	r8,r13,r8
 200b7f8:	a561383a 	mul	r16,r20,r21
 200b7fc:	1440022e 	bgeu	r2,r17,200b808 <__muldf3+0x428>
 200b800:	00c00074 	movhi	r3,1
 200b804:	80e1883a 	add	r16,r16,r3
 200b808:	1006943a 	slli	r3,r2,16
 200b80c:	213fffcc 	andi	r4,r4,65535
 200b810:	93db883a 	add	r13,r18,r15
 200b814:	1909883a 	add	r4,r3,r4
 200b818:	22c7883a 	add	r3,r4,r11
 200b81c:	6cd3803a 	cmpltu	r9,r13,r19
 200b820:	6a09883a 	add	r4,r13,r8
 200b824:	1a5b883a 	add	r13,r3,r9
 200b828:	2211803a 	cmpltu	r8,r4,r8
 200b82c:	734d883a 	add	r6,r14,r13
 200b830:	100ed43a 	srli	r7,r2,16
 200b834:	6a53803a 	cmpltu	r9,r13,r9
 200b838:	3205883a 	add	r2,r6,r8
 200b83c:	1ac7803a 	cmpltu	r3,r3,r11
 200b840:	1211803a 	cmpltu	r8,r2,r8
 200b844:	48c6b03a 	or	r3,r9,r3
 200b848:	338d803a 	cmpltu	r6,r6,r14
 200b84c:	19c7883a 	add	r3,r3,r7
 200b850:	418cb03a 	or	r6,r8,r6
 200b854:	1987883a 	add	r3,r3,r6
 200b858:	2024927a 	slli	r18,r4,9
 200b85c:	1c07883a 	add	r3,r3,r16
 200b860:	1806927a 	slli	r3,r3,9
 200b864:	1020d5fa 	srli	r16,r2,23
 200b868:	2008d5fa 	srli	r4,r4,23
 200b86c:	9294b03a 	or	r10,r18,r10
 200b870:	1004927a 	slli	r2,r2,9
 200b874:	5024c03a 	cmpne	r18,r10,zero
 200b878:	1c20b03a 	or	r16,r3,r16
 200b87c:	9108b03a 	or	r4,r18,r4
 200b880:	80c0402c 	andhi	r3,r16,256
 200b884:	20a4b03a 	or	r18,r4,r2
 200b888:	18000726 	beq	r3,zero,200b8a8 <__muldf3+0x4c8>
 200b88c:	9006d07a 	srli	r3,r18,1
 200b890:	800897fa 	slli	r4,r16,31
 200b894:	9080004c 	andi	r2,r18,1
 200b898:	8020d07a 	srli	r16,r16,1
 200b89c:	10c4b03a 	or	r2,r2,r3
 200b8a0:	1124b03a 	or	r18,r2,r4
 200b8a4:	600b883a 	mov	r5,r12
 200b8a8:	2900ffc4 	addi	r4,r5,1023
 200b8ac:	01004b0e 	bge	zero,r4,200b9dc <__muldf3+0x5fc>
 200b8b0:	908001cc 	andi	r2,r18,7
 200b8b4:	10000726 	beq	r2,zero,200b8d4 <__muldf3+0x4f4>
 200b8b8:	90c003cc 	andi	r3,r18,15
 200b8bc:	00800104 	movi	r2,4
 200b8c0:	18800426 	beq	r3,r2,200b8d4 <__muldf3+0x4f4>
 200b8c4:	9087883a 	add	r3,r18,r2
 200b8c8:	1c85803a 	cmpltu	r2,r3,r18
 200b8cc:	80a1883a 	add	r16,r16,r2
 200b8d0:	1825883a 	mov	r18,r3
 200b8d4:	8080402c 	andhi	r2,r16,256
 200b8d8:	10000426 	beq	r2,zero,200b8ec <__muldf3+0x50c>
 200b8dc:	00bfc034 	movhi	r2,65280
 200b8e0:	10bfffc4 	addi	r2,r2,-1
 200b8e4:	29010004 	addi	r4,r5,1024
 200b8e8:	80a0703a 	and	r16,r16,r2
 200b8ec:	0081ff84 	movi	r2,2046
 200b8f0:	1100320e 	bge	r2,r4,200b9bc <__muldf3+0x5dc>
 200b8f4:	b4c0004c 	andi	r19,r22,1
 200b8f8:	0101ffc4 	movi	r4,2047
 200b8fc:	0021883a 	mov	r16,zero
 200b900:	0025883a 	mov	r18,zero
 200b904:	003f1006 	br	200b548 <__muldf3+0x168>
 200b908:	8080022c 	andhi	r2,r16,8
 200b90c:	10000926 	beq	r2,zero,200b934 <__muldf3+0x554>
 200b910:	8880022c 	andhi	r2,r17,8
 200b914:	1000071e 	bne	r2,zero,200b934 <__muldf3+0x554>
 200b918:	00800434 	movhi	r2,16
 200b91c:	8c000234 	orhi	r16,r17,8
 200b920:	10bfffc4 	addi	r2,r2,-1
 200b924:	1827883a 	mov	r19,r3
 200b928:	80a0703a 	and	r16,r16,r2
 200b92c:	b825883a 	mov	r18,r23
 200b930:	003f6a06 	br	200b6dc <__muldf3+0x2fc>
 200b934:	00800434 	movhi	r2,16
 200b938:	84000234 	orhi	r16,r16,8
 200b93c:	10bfffc4 	addi	r2,r2,-1
 200b940:	80a0703a 	and	r16,r16,r2
 200b944:	003f6506 	br	200b6dc <__muldf3+0x2fc>
 200b948:	3009883a 	mov	r4,r6
 200b94c:	d8c00215 	stw	r3,8(sp)
 200b950:	d9800315 	stw	r6,12(sp)
 200b954:	da800015 	stw	r10,0(sp)
 200b958:	dac00115 	stw	r11,4(sp)
 200b95c:	200c5d00 	call	200c5d0 <__clzsi2>
 200b960:	11000804 	addi	r4,r2,32
 200b964:	014009c4 	movi	r5,39
 200b968:	d8c00217 	ldw	r3,8(sp)
 200b96c:	d9800317 	ldw	r6,12(sp)
 200b970:	da800017 	ldw	r10,0(sp)
 200b974:	dac00117 	ldw	r11,4(sp)
 200b978:	293f320e 	bge	r5,r4,200b644 <__muldf3+0x264>
 200b97c:	10bffe04 	addi	r2,r2,-8
 200b980:	b8a2983a 	sll	r17,r23,r2
 200b984:	002f883a 	mov	r23,zero
 200b988:	003f3506 	br	200b660 <__muldf3+0x280>
 200b98c:	d9800315 	stw	r6,12(sp)
 200b990:	d9c00015 	stw	r7,0(sp)
 200b994:	200c5d00 	call	200c5d0 <__clzsi2>
 200b998:	10c00804 	addi	r3,r2,32
 200b99c:	010009c4 	movi	r4,39
 200b9a0:	d9800317 	ldw	r6,12(sp)
 200b9a4:	d9c00017 	ldw	r7,0(sp)
 200b9a8:	20ff060e 	bge	r4,r3,200b5c4 <__muldf3+0x1e4>
 200b9ac:	10bffe04 	addi	r2,r2,-8
 200b9b0:	88a0983a 	sll	r16,r17,r2
 200b9b4:	0025883a 	mov	r18,zero
 200b9b8:	003f0906 	br	200b5e0 <__muldf3+0x200>
 200b9bc:	9004d0fa 	srli	r2,r18,3
 200b9c0:	8024977a 	slli	r18,r16,29
 200b9c4:	8020927a 	slli	r16,r16,9
 200b9c8:	2101ffcc 	andi	r4,r4,2047
 200b9cc:	90a4b03a 	or	r18,r18,r2
 200b9d0:	8020d33a 	srli	r16,r16,12
 200b9d4:	b4c0004c 	andi	r19,r22,1
 200b9d8:	003edb06 	br	200b548 <__muldf3+0x168>
 200b9dc:	00ff0084 	movi	r3,-1022
 200b9e0:	1947c83a 	sub	r3,r3,r5
 200b9e4:	00800e04 	movi	r2,56
 200b9e8:	10c0080e 	bge	r2,r3,200ba0c <__muldf3+0x62c>
 200b9ec:	b4c0004c 	andi	r19,r22,1
 200b9f0:	0009883a 	mov	r4,zero
 200b9f4:	0021883a 	mov	r16,zero
 200b9f8:	0025883a 	mov	r18,zero
 200b9fc:	003ed206 	br	200b548 <__muldf3+0x168>
 200ba00:	600b883a 	mov	r5,r12
 200ba04:	e02d883a 	mov	r22,fp
 200ba08:	003fa706 	br	200b8a8 <__muldf3+0x4c8>
 200ba0c:	008007c4 	movi	r2,31
 200ba10:	10c01816 	blt	r2,r3,200ba74 <__muldf3+0x694>
 200ba14:	29410784 	addi	r5,r5,1054
 200ba18:	8144983a 	sll	r2,r16,r5
 200ba1c:	90c8d83a 	srl	r4,r18,r3
 200ba20:	914a983a 	sll	r5,r18,r5
 200ba24:	80c6d83a 	srl	r3,r16,r3
 200ba28:	2088b03a 	or	r4,r4,r2
 200ba2c:	2804c03a 	cmpne	r2,r5,zero
 200ba30:	2084b03a 	or	r2,r4,r2
 200ba34:	110001cc 	andi	r4,r2,7
 200ba38:	20000726 	beq	r4,zero,200ba58 <__muldf3+0x678>
 200ba3c:	114003cc 	andi	r5,r2,15
 200ba40:	01000104 	movi	r4,4
 200ba44:	29000426 	beq	r5,r4,200ba58 <__muldf3+0x678>
 200ba48:	11000104 	addi	r4,r2,4
 200ba4c:	2085803a 	cmpltu	r2,r4,r2
 200ba50:	1887883a 	add	r3,r3,r2
 200ba54:	2005883a 	mov	r2,r4
 200ba58:	1900202c 	andhi	r4,r3,128
 200ba5c:	20001826 	beq	r4,zero,200bac0 <__muldf3+0x6e0>
 200ba60:	b4c0004c 	andi	r19,r22,1
 200ba64:	01000044 	movi	r4,1
 200ba68:	0021883a 	mov	r16,zero
 200ba6c:	0025883a 	mov	r18,zero
 200ba70:	003eb506 	br	200b548 <__muldf3+0x168>
 200ba74:	00bef884 	movi	r2,-1054
 200ba78:	1145c83a 	sub	r2,r2,r5
 200ba7c:	8088d83a 	srl	r4,r16,r2
 200ba80:	00800804 	movi	r2,32
 200ba84:	18801726 	beq	r3,r2,200bae4 <__muldf3+0x704>
 200ba88:	28810f84 	addi	r2,r5,1086
 200ba8c:	8084983a 	sll	r2,r16,r2
 200ba90:	1484b03a 	or	r2,r2,r18
 200ba94:	1004c03a 	cmpne	r2,r2,zero
 200ba98:	1104b03a 	or	r2,r2,r4
 200ba9c:	10c001cc 	andi	r3,r2,7
 200baa0:	18000b1e 	bne	r3,zero,200bad0 <__muldf3+0x6f0>
 200baa4:	0021883a 	mov	r16,zero
 200baa8:	1004d0fa 	srli	r2,r2,3
 200baac:	b4c0004c 	andi	r19,r22,1
 200bab0:	0009883a 	mov	r4,zero
 200bab4:	10e4b03a 	or	r18,r2,r3
 200bab8:	003ea306 	br	200b548 <__muldf3+0x168>
 200babc:	0007883a 	mov	r3,zero
 200bac0:	1820927a 	slli	r16,r3,9
 200bac4:	1806977a 	slli	r3,r3,29
 200bac8:	8020d33a 	srli	r16,r16,12
 200bacc:	003ff606 	br	200baa8 <__muldf3+0x6c8>
 200bad0:	110003cc 	andi	r4,r2,15
 200bad4:	00c00104 	movi	r3,4
 200bad8:	20fff826 	beq	r4,r3,200babc <__muldf3+0x6dc>
 200badc:	0007883a 	mov	r3,zero
 200bae0:	003fd906 	br	200ba48 <__muldf3+0x668>
 200bae4:	0005883a 	mov	r2,zero
 200bae8:	003fe906 	br	200ba90 <__muldf3+0x6b0>
 200baec:	00800434 	movhi	r2,16
 200baf0:	84000234 	orhi	r16,r16,8
 200baf4:	10bfffc4 	addi	r2,r2,-1
 200baf8:	e4c0004c 	andi	r19,fp,1
 200bafc:	80a0703a 	and	r16,r16,r2
 200bb00:	003ef606 	br	200b6dc <__muldf3+0x2fc>

0200bb04 <__subdf3>:
 200bb04:	00c00434 	movhi	r3,16
 200bb08:	18ffffc4 	addi	r3,r3,-1
 200bb0c:	defffb04 	addi	sp,sp,-20
 200bb10:	28d2703a 	and	r9,r5,r3
 200bb14:	3814d53a 	srli	r10,r7,20
 200bb18:	38c6703a 	and	r3,r7,r3
 200bb1c:	3004d77a 	srli	r2,r6,29
 200bb20:	dc800215 	stw	r18,8(sp)
 200bb24:	dc000015 	stw	r16,0(sp)
 200bb28:	2824d7fa 	srli	r18,r5,31
 200bb2c:	2820d53a 	srli	r16,r5,20
 200bb30:	481290fa 	slli	r9,r9,3
 200bb34:	200ad77a 	srli	r5,r4,29
 200bb38:	180690fa 	slli	r3,r3,3
 200bb3c:	dc400115 	stw	r17,4(sp)
 200bb40:	dfc00415 	stw	ra,16(sp)
 200bb44:	202290fa 	slli	r17,r4,3
 200bb48:	dcc00315 	stw	r19,12(sp)
 200bb4c:	5281ffcc 	andi	r10,r10,2047
 200bb50:	0101ffc4 	movi	r4,2047
 200bb54:	9011883a 	mov	r8,r18
 200bb58:	8401ffcc 	andi	r16,r16,2047
 200bb5c:	94803fcc 	andi	r18,r18,255
 200bb60:	494ab03a 	or	r5,r9,r5
 200bb64:	380ed7fa 	srli	r7,r7,31
 200bb68:	1886b03a 	or	r3,r3,r2
 200bb6c:	300c90fa 	slli	r6,r6,3
 200bb70:	51009026 	beq	r10,r4,200bdb4 <__subdf3+0x2b0>
 200bb74:	39c0005c 	xori	r7,r7,1
 200bb78:	8285c83a 	sub	r2,r16,r10
 200bb7c:	91c06f26 	beq	r18,r7,200bd3c <__subdf3+0x238>
 200bb80:	0080b10e 	bge	zero,r2,200be48 <__subdf3+0x344>
 200bb84:	50002a1e 	bne	r10,zero,200bc30 <__subdf3+0x12c>
 200bb88:	1988b03a 	or	r4,r3,r6
 200bb8c:	2000941e 	bne	r4,zero,200bde0 <__subdf3+0x2dc>
 200bb90:	888001cc 	andi	r2,r17,7
 200bb94:	10005b26 	beq	r2,zero,200bd04 <__subdf3+0x200>
 200bb98:	88c003cc 	andi	r3,r17,15
 200bb9c:	00800104 	movi	r2,4
 200bba0:	18805826 	beq	r3,r2,200bd04 <__subdf3+0x200>
 200bba4:	88c00104 	addi	r3,r17,4
 200bba8:	1c63803a 	cmpltu	r17,r3,r17
 200bbac:	2c4b883a 	add	r5,r5,r17
 200bbb0:	2880202c 	andhi	r2,r5,128
 200bbb4:	9200004c 	andi	r8,r18,1
 200bbb8:	1823883a 	mov	r17,r3
 200bbbc:	10005426 	beq	r2,zero,200bd10 <__subdf3+0x20c>
 200bbc0:	84000044 	addi	r16,r16,1
 200bbc4:	0081ffc4 	movi	r2,2047
 200bbc8:	8080bf26 	beq	r16,r2,200bec8 <__subdf3+0x3c4>
 200bbcc:	013fe034 	movhi	r4,65408
 200bbd0:	213fffc4 	addi	r4,r4,-1
 200bbd4:	290a703a 	and	r5,r5,r4
 200bbd8:	2804977a 	slli	r2,r5,29
 200bbdc:	280a927a 	slli	r5,r5,9
 200bbe0:	8822d0fa 	srli	r17,r17,3
 200bbe4:	8401ffcc 	andi	r16,r16,2047
 200bbe8:	2808d33a 	srli	r4,r5,12
 200bbec:	1444b03a 	or	r2,r2,r17
 200bbf0:	8401ffcc 	andi	r16,r16,2047
 200bbf4:	800a953a 	slli	r5,r16,20
 200bbf8:	40c03fcc 	andi	r3,r8,255
 200bbfc:	04000434 	movhi	r16,16
 200bc00:	180697fa 	slli	r3,r3,31
 200bc04:	843fffc4 	addi	r16,r16,-1
 200bc08:	2420703a 	and	r16,r4,r16
 200bc0c:	8160b03a 	or	r16,r16,r5
 200bc10:	80c6b03a 	or	r3,r16,r3
 200bc14:	dfc00417 	ldw	ra,16(sp)
 200bc18:	dcc00317 	ldw	r19,12(sp)
 200bc1c:	dc800217 	ldw	r18,8(sp)
 200bc20:	dc400117 	ldw	r17,4(sp)
 200bc24:	dc000017 	ldw	r16,0(sp)
 200bc28:	dec00504 	addi	sp,sp,20
 200bc2c:	f800283a 	ret
 200bc30:	0101ffc4 	movi	r4,2047
 200bc34:	813fd626 	beq	r16,r4,200bb90 <__subdf3+0x8c>
 200bc38:	18c02034 	orhi	r3,r3,128
 200bc3c:	01000e04 	movi	r4,56
 200bc40:	2080a416 	blt	r4,r2,200bed4 <__subdf3+0x3d0>
 200bc44:	010007c4 	movi	r4,31
 200bc48:	2080c716 	blt	r4,r2,200bf68 <__subdf3+0x464>
 200bc4c:	01000804 	movi	r4,32
 200bc50:	2089c83a 	sub	r4,r4,r2
 200bc54:	1910983a 	sll	r8,r3,r4
 200bc58:	308ed83a 	srl	r7,r6,r2
 200bc5c:	3108983a 	sll	r4,r6,r4
 200bc60:	1884d83a 	srl	r2,r3,r2
 200bc64:	41ccb03a 	or	r6,r8,r7
 200bc68:	2008c03a 	cmpne	r4,r4,zero
 200bc6c:	310cb03a 	or	r6,r6,r4
 200bc70:	898dc83a 	sub	r6,r17,r6
 200bc74:	89a3803a 	cmpltu	r17,r17,r6
 200bc78:	288bc83a 	sub	r5,r5,r2
 200bc7c:	2c4bc83a 	sub	r5,r5,r17
 200bc80:	3023883a 	mov	r17,r6
 200bc84:	2880202c 	andhi	r2,r5,128
 200bc88:	10006b26 	beq	r2,zero,200be38 <__subdf3+0x334>
 200bc8c:	04c02034 	movhi	r19,128
 200bc90:	9cffffc4 	addi	r19,r19,-1
 200bc94:	2ce6703a 	and	r19,r5,r19
 200bc98:	98007c26 	beq	r19,zero,200be8c <__subdf3+0x388>
 200bc9c:	9809883a 	mov	r4,r19
 200bca0:	200c5d00 	call	200c5d0 <__clzsi2>
 200bca4:	10fffe04 	addi	r3,r2,-8
 200bca8:	010007c4 	movi	r4,31
 200bcac:	20c07d16 	blt	r4,r3,200bea4 <__subdf3+0x3a0>
 200bcb0:	01400a04 	movi	r5,40
 200bcb4:	2885c83a 	sub	r2,r5,r2
 200bcb8:	888ad83a 	srl	r5,r17,r2
 200bcbc:	98e6983a 	sll	r19,r19,r3
 200bcc0:	88e2983a 	sll	r17,r17,r3
 200bcc4:	2ce6b03a 	or	r19,r5,r19
 200bcc8:	1c007a16 	blt	r3,r16,200beb4 <__subdf3+0x3b0>
 200bccc:	1c21c83a 	sub	r16,r3,r16
 200bcd0:	81400044 	addi	r5,r16,1
 200bcd4:	00c007c4 	movi	r3,31
 200bcd8:	19409616 	blt	r3,r5,200bf34 <__subdf3+0x430>
 200bcdc:	1c21c83a 	sub	r16,r3,r16
 200bce0:	8c08983a 	sll	r4,r17,r16
 200bce4:	8946d83a 	srl	r3,r17,r5
 200bce8:	9c20983a 	sll	r16,r19,r16
 200bcec:	2008c03a 	cmpne	r4,r4,zero
 200bcf0:	994ad83a 	srl	r5,r19,r5
 200bcf4:	1c06b03a 	or	r3,r3,r16
 200bcf8:	1922b03a 	or	r17,r3,r4
 200bcfc:	0021883a 	mov	r16,zero
 200bd00:	003fa306 	br	200bb90 <__subdf3+0x8c>
 200bd04:	2880202c 	andhi	r2,r5,128
 200bd08:	9200004c 	andi	r8,r18,1
 200bd0c:	103fac1e 	bne	r2,zero,200bbc0 <__subdf3+0xbc>
 200bd10:	2804977a 	slli	r2,r5,29
 200bd14:	8822d0fa 	srli	r17,r17,3
 200bd18:	00c1ffc4 	movi	r3,2047
 200bd1c:	280ad0fa 	srli	r5,r5,3
 200bd20:	1444b03a 	or	r2,r2,r17
 200bd24:	80c02726 	beq	r16,r3,200bdc4 <__subdf3+0x2c0>
 200bd28:	01000434 	movhi	r4,16
 200bd2c:	213fffc4 	addi	r4,r4,-1
 200bd30:	80e0703a 	and	r16,r16,r3
 200bd34:	2908703a 	and	r4,r5,r4
 200bd38:	003fad06 	br	200bbf0 <__subdf3+0xec>
 200bd3c:	0080690e 	bge	zero,r2,200bee4 <__subdf3+0x3e0>
 200bd40:	50002f26 	beq	r10,zero,200be00 <__subdf3+0x2fc>
 200bd44:	0101ffc4 	movi	r4,2047
 200bd48:	813f9126 	beq	r16,r4,200bb90 <__subdf3+0x8c>
 200bd4c:	18c02034 	orhi	r3,r3,128
 200bd50:	01000e04 	movi	r4,56
 200bd54:	2080b00e 	bge	r4,r2,200c018 <__subdf3+0x514>
 200bd58:	198cb03a 	or	r6,r3,r6
 200bd5c:	300ec03a 	cmpne	r7,r6,zero
 200bd60:	0005883a 	mov	r2,zero
 200bd64:	3c4f883a 	add	r7,r7,r17
 200bd68:	3c63803a 	cmpltu	r17,r7,r17
 200bd6c:	114b883a 	add	r5,r2,r5
 200bd70:	2c4b883a 	add	r5,r5,r17
 200bd74:	3823883a 	mov	r17,r7
 200bd78:	2880202c 	andhi	r2,r5,128
 200bd7c:	10002e26 	beq	r2,zero,200be38 <__subdf3+0x334>
 200bd80:	84000044 	addi	r16,r16,1
 200bd84:	0081ffc4 	movi	r2,2047
 200bd88:	8080de26 	beq	r16,r2,200c104 <__subdf3+0x600>
 200bd8c:	00bfe034 	movhi	r2,65408
 200bd90:	10bfffc4 	addi	r2,r2,-1
 200bd94:	288a703a 	and	r5,r5,r2
 200bd98:	880cd07a 	srli	r6,r17,1
 200bd9c:	280897fa 	slli	r4,r5,31
 200bda0:	88c0004c 	andi	r3,r17,1
 200bda4:	30e2b03a 	or	r17,r6,r3
 200bda8:	280ad07a 	srli	r5,r5,1
 200bdac:	8922b03a 	or	r17,r17,r4
 200bdb0:	003f7706 	br	200bb90 <__subdf3+0x8c>
 200bdb4:	1984b03a 	or	r2,r3,r6
 200bdb8:	103f6e26 	beq	r2,zero,200bb74 <__subdf3+0x70>
 200bdbc:	39c03fcc 	andi	r7,r7,255
 200bdc0:	003f6d06 	br	200bb78 <__subdf3+0x74>
 200bdc4:	1146b03a 	or	r3,r2,r5
 200bdc8:	18003f26 	beq	r3,zero,200bec8 <__subdf3+0x3c4>
 200bdcc:	00c00434 	movhi	r3,16
 200bdd0:	29000234 	orhi	r4,r5,8
 200bdd4:	18ffffc4 	addi	r3,r3,-1
 200bdd8:	20c8703a 	and	r4,r4,r3
 200bddc:	003f8406 	br	200bbf0 <__subdf3+0xec>
 200bde0:	10bfffc4 	addi	r2,r2,-1
 200bde4:	1000501e 	bne	r2,zero,200bf28 <__subdf3+0x424>
 200bde8:	898fc83a 	sub	r7,r17,r6
 200bdec:	89e3803a 	cmpltu	r17,r17,r7
 200bdf0:	28cbc83a 	sub	r5,r5,r3
 200bdf4:	2c4bc83a 	sub	r5,r5,r17
 200bdf8:	3823883a 	mov	r17,r7
 200bdfc:	003fa106 	br	200bc84 <__subdf3+0x180>
 200be00:	1988b03a 	or	r4,r3,r6
 200be04:	203f6226 	beq	r4,zero,200bb90 <__subdf3+0x8c>
 200be08:	10bfffc4 	addi	r2,r2,-1
 200be0c:	10009b1e 	bne	r2,zero,200c07c <__subdf3+0x578>
 200be10:	344d883a 	add	r6,r6,r17
 200be14:	3463803a 	cmpltu	r17,r6,r17
 200be18:	194b883a 	add	r5,r3,r5
 200be1c:	2c4b883a 	add	r5,r5,r17
 200be20:	3023883a 	mov	r17,r6
 200be24:	003fd406 	br	200bd78 <__subdf3+0x274>
 200be28:	1106b03a 	or	r3,r2,r4
 200be2c:	1800b426 	beq	r3,zero,200c100 <__subdf3+0x5fc>
 200be30:	100b883a 	mov	r5,r2
 200be34:	2023883a 	mov	r17,r4
 200be38:	888001cc 	andi	r2,r17,7
 200be3c:	103f561e 	bne	r2,zero,200bb98 <__subdf3+0x94>
 200be40:	9200004c 	andi	r8,r18,1
 200be44:	003fb206 	br	200bd10 <__subdf3+0x20c>
 200be48:	1000531e 	bne	r2,zero,200bf98 <__subdf3+0x494>
 200be4c:	80800044 	addi	r2,r16,1
 200be50:	1081ffcc 	andi	r2,r2,2047
 200be54:	01000044 	movi	r4,1
 200be58:	2080a00e 	bge	r4,r2,200c0dc <__subdf3+0x5d8>
 200be5c:	8985c83a 	sub	r2,r17,r6
 200be60:	8889803a 	cmpltu	r4,r17,r2
 200be64:	28e7c83a 	sub	r19,r5,r3
 200be68:	9927c83a 	sub	r19,r19,r4
 200be6c:	9900202c 	andhi	r4,r19,128
 200be70:	20006226 	beq	r4,zero,200bffc <__subdf3+0x4f8>
 200be74:	3463c83a 	sub	r17,r6,r17
 200be78:	194bc83a 	sub	r5,r3,r5
 200be7c:	344d803a 	cmpltu	r6,r6,r17
 200be80:	29a7c83a 	sub	r19,r5,r6
 200be84:	3825883a 	mov	r18,r7
 200be88:	983f841e 	bne	r19,zero,200bc9c <__subdf3+0x198>
 200be8c:	8809883a 	mov	r4,r17
 200be90:	200c5d00 	call	200c5d0 <__clzsi2>
 200be94:	10800804 	addi	r2,r2,32
 200be98:	10fffe04 	addi	r3,r2,-8
 200be9c:	010007c4 	movi	r4,31
 200bea0:	20ff830e 	bge	r4,r3,200bcb0 <__subdf3+0x1ac>
 200bea4:	14fff604 	addi	r19,r2,-40
 200bea8:	8ce6983a 	sll	r19,r17,r19
 200beac:	0023883a 	mov	r17,zero
 200beb0:	1c3f860e 	bge	r3,r16,200bccc <__subdf3+0x1c8>
 200beb4:	017fe034 	movhi	r5,65408
 200beb8:	297fffc4 	addi	r5,r5,-1
 200bebc:	80e1c83a 	sub	r16,r16,r3
 200bec0:	994a703a 	and	r5,r19,r5
 200bec4:	003f3206 	br	200bb90 <__subdf3+0x8c>
 200bec8:	0009883a 	mov	r4,zero
 200becc:	0005883a 	mov	r2,zero
 200bed0:	003f4706 	br	200bbf0 <__subdf3+0xec>
 200bed4:	198cb03a 	or	r6,r3,r6
 200bed8:	300cc03a 	cmpne	r6,r6,zero
 200bedc:	0005883a 	mov	r2,zero
 200bee0:	003f6306 	br	200bc70 <__subdf3+0x16c>
 200bee4:	10009d1e 	bne	r2,zero,200c15c <__subdf3+0x658>
 200bee8:	81c00044 	addi	r7,r16,1
 200beec:	3881ffcc 	andi	r2,r7,2047
 200bef0:	02400044 	movi	r9,1
 200bef4:	4880680e 	bge	r9,r2,200c098 <__subdf3+0x594>
 200bef8:	0081ffc4 	movi	r2,2047
 200befc:	3880ae26 	beq	r7,r2,200c1b8 <__subdf3+0x6b4>
 200bf00:	344d883a 	add	r6,r6,r17
 200bf04:	3463803a 	cmpltu	r17,r6,r17
 200bf08:	194b883a 	add	r5,r3,r5
 200bf0c:	2c4b883a 	add	r5,r5,r17
 200bf10:	282297fa 	slli	r17,r5,31
 200bf14:	300cd07a 	srli	r6,r6,1
 200bf18:	280ad07a 	srli	r5,r5,1
 200bf1c:	3821883a 	mov	r16,r7
 200bf20:	89a2b03a 	or	r17,r17,r6
 200bf24:	003f1a06 	br	200bb90 <__subdf3+0x8c>
 200bf28:	0101ffc4 	movi	r4,2047
 200bf2c:	813f431e 	bne	r16,r4,200bc3c <__subdf3+0x138>
 200bf30:	003f1706 	br	200bb90 <__subdf3+0x8c>
 200bf34:	80bff844 	addi	r2,r16,-31
 200bf38:	00c00804 	movi	r3,32
 200bf3c:	9884d83a 	srl	r2,r19,r2
 200bf40:	28c05126 	beq	r5,r3,200c088 <__subdf3+0x584>
 200bf44:	00c00fc4 	movi	r3,63
 200bf48:	1c21c83a 	sub	r16,r3,r16
 200bf4c:	9c26983a 	sll	r19,r19,r16
 200bf50:	9c62b03a 	or	r17,r19,r17
 200bf54:	8822c03a 	cmpne	r17,r17,zero
 200bf58:	88a2b03a 	or	r17,r17,r2
 200bf5c:	000b883a 	mov	r5,zero
 200bf60:	0021883a 	mov	r16,zero
 200bf64:	003fb406 	br	200be38 <__subdf3+0x334>
 200bf68:	113ff804 	addi	r4,r2,-32
 200bf6c:	01c00804 	movi	r7,32
 200bf70:	1908d83a 	srl	r4,r3,r4
 200bf74:	11c04626 	beq	r2,r7,200c090 <__subdf3+0x58c>
 200bf78:	01c01004 	movi	r7,64
 200bf7c:	3885c83a 	sub	r2,r7,r2
 200bf80:	1884983a 	sll	r2,r3,r2
 200bf84:	118cb03a 	or	r6,r2,r6
 200bf88:	300cc03a 	cmpne	r6,r6,zero
 200bf8c:	310cb03a 	or	r6,r6,r4
 200bf90:	0005883a 	mov	r2,zero
 200bf94:	003f3606 	br	200bc70 <__subdf3+0x16c>
 200bf98:	80002b26 	beq	r16,zero,200c048 <__subdf3+0x544>
 200bf9c:	0101ffc4 	movi	r4,2047
 200bfa0:	51006926 	beq	r10,r4,200c148 <__subdf3+0x644>
 200bfa4:	0085c83a 	sub	r2,zero,r2
 200bfa8:	29402034 	orhi	r5,r5,128
 200bfac:	01000e04 	movi	r4,56
 200bfb0:	20807d16 	blt	r4,r2,200c1a8 <__subdf3+0x6a4>
 200bfb4:	010007c4 	movi	r4,31
 200bfb8:	2080d916 	blt	r4,r2,200c320 <__subdf3+0x81c>
 200bfbc:	01000804 	movi	r4,32
 200bfc0:	2089c83a 	sub	r4,r4,r2
 200bfc4:	2912983a 	sll	r9,r5,r4
 200bfc8:	8890d83a 	srl	r8,r17,r2
 200bfcc:	8908983a 	sll	r4,r17,r4
 200bfd0:	2884d83a 	srl	r2,r5,r2
 200bfd4:	4a22b03a 	or	r17,r9,r8
 200bfd8:	2008c03a 	cmpne	r4,r4,zero
 200bfdc:	8922b03a 	or	r17,r17,r4
 200bfe0:	3463c83a 	sub	r17,r6,r17
 200bfe4:	1885c83a 	sub	r2,r3,r2
 200bfe8:	344d803a 	cmpltu	r6,r6,r17
 200bfec:	118bc83a 	sub	r5,r2,r6
 200bff0:	5021883a 	mov	r16,r10
 200bff4:	3825883a 	mov	r18,r7
 200bff8:	003f2206 	br	200bc84 <__subdf3+0x180>
 200bffc:	9886b03a 	or	r3,r19,r2
 200c000:	18001c1e 	bne	r3,zero,200c074 <__subdf3+0x570>
 200c004:	0011883a 	mov	r8,zero
 200c008:	000b883a 	mov	r5,zero
 200c00c:	0023883a 	mov	r17,zero
 200c010:	0021883a 	mov	r16,zero
 200c014:	003f3e06 	br	200bd10 <__subdf3+0x20c>
 200c018:	010007c4 	movi	r4,31
 200c01c:	20803c16 	blt	r4,r2,200c110 <__subdf3+0x60c>
 200c020:	01000804 	movi	r4,32
 200c024:	2089c83a 	sub	r4,r4,r2
 200c028:	1912983a 	sll	r9,r3,r4
 200c02c:	308ed83a 	srl	r7,r6,r2
 200c030:	3108983a 	sll	r4,r6,r4
 200c034:	1884d83a 	srl	r2,r3,r2
 200c038:	49ceb03a 	or	r7,r9,r7
 200c03c:	2008c03a 	cmpne	r4,r4,zero
 200c040:	390eb03a 	or	r7,r7,r4
 200c044:	003f4706 	br	200bd64 <__subdf3+0x260>
 200c048:	2c48b03a 	or	r4,r5,r17
 200c04c:	20003e26 	beq	r4,zero,200c148 <__subdf3+0x644>
 200c050:	0084303a 	nor	r2,zero,r2
 200c054:	10003a1e 	bne	r2,zero,200c140 <__subdf3+0x63c>
 200c058:	3463c83a 	sub	r17,r6,r17
 200c05c:	194bc83a 	sub	r5,r3,r5
 200c060:	344d803a 	cmpltu	r6,r6,r17
 200c064:	298bc83a 	sub	r5,r5,r6
 200c068:	5021883a 	mov	r16,r10
 200c06c:	3825883a 	mov	r18,r7
 200c070:	003f0406 	br	200bc84 <__subdf3+0x180>
 200c074:	1023883a 	mov	r17,r2
 200c078:	003f0706 	br	200bc98 <__subdf3+0x194>
 200c07c:	0101ffc4 	movi	r4,2047
 200c080:	813f331e 	bne	r16,r4,200bd50 <__subdf3+0x24c>
 200c084:	003ec206 	br	200bb90 <__subdf3+0x8c>
 200c088:	0027883a 	mov	r19,zero
 200c08c:	003fb006 	br	200bf50 <__subdf3+0x44c>
 200c090:	0005883a 	mov	r2,zero
 200c094:	003fbb06 	br	200bf84 <__subdf3+0x480>
 200c098:	2c44b03a 	or	r2,r5,r17
 200c09c:	80008b1e 	bne	r16,zero,200c2cc <__subdf3+0x7c8>
 200c0a0:	1000b526 	beq	r2,zero,200c378 <__subdf3+0x874>
 200c0a4:	1984b03a 	or	r2,r3,r6
 200c0a8:	103eb926 	beq	r2,zero,200bb90 <__subdf3+0x8c>
 200c0ac:	3449883a 	add	r4,r6,r17
 200c0b0:	2463803a 	cmpltu	r17,r4,r17
 200c0b4:	194b883a 	add	r5,r3,r5
 200c0b8:	2c4b883a 	add	r5,r5,r17
 200c0bc:	2880202c 	andhi	r2,r5,128
 200c0c0:	2023883a 	mov	r17,r4
 200c0c4:	103f5c26 	beq	r2,zero,200be38 <__subdf3+0x334>
 200c0c8:	00bfe034 	movhi	r2,65408
 200c0cc:	10bfffc4 	addi	r2,r2,-1
 200c0d0:	4821883a 	mov	r16,r9
 200c0d4:	288a703a 	and	r5,r5,r2
 200c0d8:	003ead06 	br	200bb90 <__subdf3+0x8c>
 200c0dc:	2c44b03a 	or	r2,r5,r17
 200c0e0:	8000291e 	bne	r16,zero,200c188 <__subdf3+0x684>
 200c0e4:	10004f1e 	bne	r2,zero,200c224 <__subdf3+0x720>
 200c0e8:	1984b03a 	or	r2,r3,r6
 200c0ec:	10000426 	beq	r2,zero,200c100 <__subdf3+0x5fc>
 200c0f0:	180b883a 	mov	r5,r3
 200c0f4:	3023883a 	mov	r17,r6
 200c0f8:	3825883a 	mov	r18,r7
 200c0fc:	003ea406 	br	200bb90 <__subdf3+0x8c>
 200c100:	0011883a 	mov	r8,zero
 200c104:	000b883a 	mov	r5,zero
 200c108:	0023883a 	mov	r17,zero
 200c10c:	003f0006 	br	200bd10 <__subdf3+0x20c>
 200c110:	11fff804 	addi	r7,r2,-32
 200c114:	19c8d83a 	srl	r4,r3,r7
 200c118:	01c00804 	movi	r7,32
 200c11c:	11c07e26 	beq	r2,r7,200c318 <__subdf3+0x814>
 200c120:	01c01004 	movi	r7,64
 200c124:	3885c83a 	sub	r2,r7,r2
 200c128:	1884983a 	sll	r2,r3,r2
 200c12c:	118cb03a 	or	r6,r2,r6
 200c130:	300ec03a 	cmpne	r7,r6,zero
 200c134:	390eb03a 	or	r7,r7,r4
 200c138:	0005883a 	mov	r2,zero
 200c13c:	003f0906 	br	200bd64 <__subdf3+0x260>
 200c140:	0101ffc4 	movi	r4,2047
 200c144:	513f991e 	bne	r10,r4,200bfac <__subdf3+0x4a8>
 200c148:	180b883a 	mov	r5,r3
 200c14c:	3023883a 	mov	r17,r6
 200c150:	5021883a 	mov	r16,r10
 200c154:	3825883a 	mov	r18,r7
 200c158:	003e8d06 	br	200bb90 <__subdf3+0x8c>
 200c15c:	80001a1e 	bne	r16,zero,200c1c8 <__subdf3+0x6c4>
 200c160:	2c48b03a 	or	r4,r5,r17
 200c164:	20005526 	beq	r4,zero,200c2bc <__subdf3+0x7b8>
 200c168:	0084303a 	nor	r2,zero,r2
 200c16c:	1000511e 	bne	r2,zero,200c2b4 <__subdf3+0x7b0>
 200c170:	89a3883a 	add	r17,r17,r6
 200c174:	194b883a 	add	r5,r3,r5
 200c178:	898d803a 	cmpltu	r6,r17,r6
 200c17c:	298b883a 	add	r5,r5,r6
 200c180:	5021883a 	mov	r16,r10
 200c184:	003efc06 	br	200bd78 <__subdf3+0x274>
 200c188:	1000341e 	bne	r2,zero,200c25c <__subdf3+0x758>
 200c18c:	1984b03a 	or	r2,r3,r6
 200c190:	10006f26 	beq	r2,zero,200c350 <__subdf3+0x84c>
 200c194:	180b883a 	mov	r5,r3
 200c198:	3023883a 	mov	r17,r6
 200c19c:	3825883a 	mov	r18,r7
 200c1a0:	0401ffc4 	movi	r16,2047
 200c1a4:	003e7a06 	br	200bb90 <__subdf3+0x8c>
 200c1a8:	2c62b03a 	or	r17,r5,r17
 200c1ac:	8822c03a 	cmpne	r17,r17,zero
 200c1b0:	0005883a 	mov	r2,zero
 200c1b4:	003f8a06 	br	200bfe0 <__subdf3+0x4dc>
 200c1b8:	3821883a 	mov	r16,r7
 200c1bc:	000b883a 	mov	r5,zero
 200c1c0:	0023883a 	mov	r17,zero
 200c1c4:	003ed206 	br	200bd10 <__subdf3+0x20c>
 200c1c8:	0101ffc4 	movi	r4,2047
 200c1cc:	51003b26 	beq	r10,r4,200c2bc <__subdf3+0x7b8>
 200c1d0:	0085c83a 	sub	r2,zero,r2
 200c1d4:	29402034 	orhi	r5,r5,128
 200c1d8:	01000e04 	movi	r4,56
 200c1dc:	20806216 	blt	r4,r2,200c368 <__subdf3+0x864>
 200c1e0:	010007c4 	movi	r4,31
 200c1e4:	20806b16 	blt	r4,r2,200c394 <__subdf3+0x890>
 200c1e8:	01000804 	movi	r4,32
 200c1ec:	2089c83a 	sub	r4,r4,r2
 200c1f0:	2912983a 	sll	r9,r5,r4
 200c1f4:	888ed83a 	srl	r7,r17,r2
 200c1f8:	8908983a 	sll	r4,r17,r4
 200c1fc:	2884d83a 	srl	r2,r5,r2
 200c200:	49e2b03a 	or	r17,r9,r7
 200c204:	2008c03a 	cmpne	r4,r4,zero
 200c208:	8922b03a 	or	r17,r17,r4
 200c20c:	89a3883a 	add	r17,r17,r6
 200c210:	10c5883a 	add	r2,r2,r3
 200c214:	898d803a 	cmpltu	r6,r17,r6
 200c218:	118b883a 	add	r5,r2,r6
 200c21c:	5021883a 	mov	r16,r10
 200c220:	003ed506 	br	200bd78 <__subdf3+0x274>
 200c224:	1984b03a 	or	r2,r3,r6
 200c228:	103e5926 	beq	r2,zero,200bb90 <__subdf3+0x8c>
 200c22c:	8989c83a 	sub	r4,r17,r6
 200c230:	8911803a 	cmpltu	r8,r17,r4
 200c234:	28c5c83a 	sub	r2,r5,r3
 200c238:	1205c83a 	sub	r2,r2,r8
 200c23c:	1200202c 	andhi	r8,r2,128
 200c240:	403ef926 	beq	r8,zero,200be28 <__subdf3+0x324>
 200c244:	3463c83a 	sub	r17,r6,r17
 200c248:	194bc83a 	sub	r5,r3,r5
 200c24c:	344d803a 	cmpltu	r6,r6,r17
 200c250:	298bc83a 	sub	r5,r5,r6
 200c254:	3825883a 	mov	r18,r7
 200c258:	003e4d06 	br	200bb90 <__subdf3+0x8c>
 200c25c:	1984b03a 	or	r2,r3,r6
 200c260:	10002b26 	beq	r2,zero,200c310 <__subdf3+0x80c>
 200c264:	2808d0fa 	srli	r4,r5,3
 200c268:	8822d0fa 	srli	r17,r17,3
 200c26c:	280a977a 	slli	r5,r5,29
 200c270:	2080022c 	andhi	r2,r4,8
 200c274:	2c62b03a 	or	r17,r5,r17
 200c278:	10000826 	beq	r2,zero,200c29c <__subdf3+0x798>
 200c27c:	1810d0fa 	srli	r8,r3,3
 200c280:	4080022c 	andhi	r2,r8,8
 200c284:	1000051e 	bne	r2,zero,200c29c <__subdf3+0x798>
 200c288:	300cd0fa 	srli	r6,r6,3
 200c28c:	1804977a 	slli	r2,r3,29
 200c290:	4009883a 	mov	r4,r8
 200c294:	3825883a 	mov	r18,r7
 200c298:	11a2b03a 	or	r17,r2,r6
 200c29c:	880ad77a 	srli	r5,r17,29
 200c2a0:	200890fa 	slli	r4,r4,3
 200c2a4:	882290fa 	slli	r17,r17,3
 200c2a8:	0401ffc4 	movi	r16,2047
 200c2ac:	290ab03a 	or	r5,r5,r4
 200c2b0:	003e3706 	br	200bb90 <__subdf3+0x8c>
 200c2b4:	0101ffc4 	movi	r4,2047
 200c2b8:	513fc71e 	bne	r10,r4,200c1d8 <__subdf3+0x6d4>
 200c2bc:	180b883a 	mov	r5,r3
 200c2c0:	3023883a 	mov	r17,r6
 200c2c4:	5021883a 	mov	r16,r10
 200c2c8:	003e3106 	br	200bb90 <__subdf3+0x8c>
 200c2cc:	10002d26 	beq	r2,zero,200c384 <__subdf3+0x880>
 200c2d0:	1984b03a 	or	r2,r3,r6
 200c2d4:	10000e26 	beq	r2,zero,200c310 <__subdf3+0x80c>
 200c2d8:	2808d0fa 	srli	r4,r5,3
 200c2dc:	8822d0fa 	srli	r17,r17,3
 200c2e0:	280a977a 	slli	r5,r5,29
 200c2e4:	2080022c 	andhi	r2,r4,8
 200c2e8:	2c62b03a 	or	r17,r5,r17
 200c2ec:	103feb26 	beq	r2,zero,200c29c <__subdf3+0x798>
 200c2f0:	180ed0fa 	srli	r7,r3,3
 200c2f4:	3880022c 	andhi	r2,r7,8
 200c2f8:	103fe81e 	bne	r2,zero,200c29c <__subdf3+0x798>
 200c2fc:	300cd0fa 	srli	r6,r6,3
 200c300:	1804977a 	slli	r2,r3,29
 200c304:	3809883a 	mov	r4,r7
 200c308:	11a2b03a 	or	r17,r2,r6
 200c30c:	003fe306 	br	200c29c <__subdf3+0x798>
 200c310:	0401ffc4 	movi	r16,2047
 200c314:	003e1e06 	br	200bb90 <__subdf3+0x8c>
 200c318:	0005883a 	mov	r2,zero
 200c31c:	003f8306 	br	200c12c <__subdf3+0x628>
 200c320:	113ff804 	addi	r4,r2,-32
 200c324:	02000804 	movi	r8,32
 200c328:	2908d83a 	srl	r4,r5,r4
 200c32c:	12002526 	beq	r2,r8,200c3c4 <__subdf3+0x8c0>
 200c330:	02001004 	movi	r8,64
 200c334:	4085c83a 	sub	r2,r8,r2
 200c338:	288a983a 	sll	r5,r5,r2
 200c33c:	2c62b03a 	or	r17,r5,r17
 200c340:	8822c03a 	cmpne	r17,r17,zero
 200c344:	8922b03a 	or	r17,r17,r4
 200c348:	0005883a 	mov	r2,zero
 200c34c:	003f2406 	br	200bfe0 <__subdf3+0x4dc>
 200c350:	01402034 	movhi	r5,128
 200c354:	0011883a 	mov	r8,zero
 200c358:	297fffc4 	addi	r5,r5,-1
 200c35c:	047ffe04 	movi	r17,-8
 200c360:	0401ffc4 	movi	r16,2047
 200c364:	003e6a06 	br	200bd10 <__subdf3+0x20c>
 200c368:	2c62b03a 	or	r17,r5,r17
 200c36c:	8822c03a 	cmpne	r17,r17,zero
 200c370:	0005883a 	mov	r2,zero
 200c374:	003fa506 	br	200c20c <__subdf3+0x708>
 200c378:	180b883a 	mov	r5,r3
 200c37c:	3023883a 	mov	r17,r6
 200c380:	003e0306 	br	200bb90 <__subdf3+0x8c>
 200c384:	180b883a 	mov	r5,r3
 200c388:	3023883a 	mov	r17,r6
 200c38c:	0401ffc4 	movi	r16,2047
 200c390:	003dff06 	br	200bb90 <__subdf3+0x8c>
 200c394:	113ff804 	addi	r4,r2,-32
 200c398:	01c00804 	movi	r7,32
 200c39c:	2908d83a 	srl	r4,r5,r4
 200c3a0:	11c00a26 	beq	r2,r7,200c3cc <__subdf3+0x8c8>
 200c3a4:	01c01004 	movi	r7,64
 200c3a8:	3885c83a 	sub	r2,r7,r2
 200c3ac:	288a983a 	sll	r5,r5,r2
 200c3b0:	2c62b03a 	or	r17,r5,r17
 200c3b4:	8822c03a 	cmpne	r17,r17,zero
 200c3b8:	8922b03a 	or	r17,r17,r4
 200c3bc:	0005883a 	mov	r2,zero
 200c3c0:	003f9206 	br	200c20c <__subdf3+0x708>
 200c3c4:	000b883a 	mov	r5,zero
 200c3c8:	003fdc06 	br	200c33c <__subdf3+0x838>
 200c3cc:	000b883a 	mov	r5,zero
 200c3d0:	003ff706 	br	200c3b0 <__subdf3+0x8ac>

0200c3d4 <__fixdfsi>:
 200c3d4:	2806d53a 	srli	r3,r5,20
 200c3d8:	00800434 	movhi	r2,16
 200c3dc:	10bfffc4 	addi	r2,r2,-1
 200c3e0:	18c1ffcc 	andi	r3,r3,2047
 200c3e4:	0180ff84 	movi	r6,1022
 200c3e8:	2884703a 	and	r2,r5,r2
 200c3ec:	280ad7fa 	srli	r5,r5,31
 200c3f0:	30c0130e 	bge	r6,r3,200c440 <__fixdfsi+0x6c>
 200c3f4:	01810744 	movi	r6,1053
 200c3f8:	30c00d16 	blt	r6,r3,200c430 <__fixdfsi+0x5c>
 200c3fc:	01810cc4 	movi	r6,1075
 200c400:	30cdc83a 	sub	r6,r6,r3
 200c404:	01c007c4 	movi	r7,31
 200c408:	10800434 	orhi	r2,r2,16
 200c40c:	39800e0e 	bge	r7,r6,200c448 <__fixdfsi+0x74>
 200c410:	010104c4 	movi	r4,1043
 200c414:	20c7c83a 	sub	r3,r4,r3
 200c418:	10c6d83a 	srl	r3,r2,r3
 200c41c:	29403fcc 	andi	r5,r5,255
 200c420:	0145c83a 	sub	r2,zero,r5
 200c424:	1884f03a 	xor	r2,r3,r2
 200c428:	1145883a 	add	r2,r2,r5
 200c42c:	f800283a 	ret
 200c430:	00a00034 	movhi	r2,32768
 200c434:	10bfffc4 	addi	r2,r2,-1
 200c438:	2885883a 	add	r2,r5,r2
 200c43c:	f800283a 	ret
 200c440:	0005883a 	mov	r2,zero
 200c444:	f800283a 	ret
 200c448:	18fefb44 	addi	r3,r3,-1043
 200c44c:	2188d83a 	srl	r4,r4,r6
 200c450:	10c6983a 	sll	r3,r2,r3
 200c454:	20c6b03a 	or	r3,r4,r3
 200c458:	003ff006 	br	200c41c <__fixdfsi+0x48>

0200c45c <__floatsidf>:
 200c45c:	defffd04 	addi	sp,sp,-12
 200c460:	dc400115 	stw	r17,4(sp)
 200c464:	dfc00215 	stw	ra,8(sp)
 200c468:	dc000015 	stw	r16,0(sp)
 200c46c:	2023883a 	mov	r17,r4
 200c470:	20001426 	beq	r4,zero,200c4c4 <__floatsidf+0x68>
 200c474:	2020d7fa 	srli	r16,r4,31
 200c478:	80000126 	beq	r16,zero,200c480 <__floatsidf+0x24>
 200c47c:	0123c83a 	sub	r17,zero,r4
 200c480:	8809883a 	mov	r4,r17
 200c484:	200c5d00 	call	200c5d0 <__clzsi2>
 200c488:	01410784 	movi	r5,1054
 200c48c:	00c00284 	movi	r3,10
 200c490:	288bc83a 	sub	r5,r5,r2
 200c494:	18801c16 	blt	r3,r2,200c508 <__floatsidf+0xac>
 200c498:	00c002c4 	movi	r3,11
 200c49c:	1887c83a 	sub	r3,r3,r2
 200c4a0:	88c8d83a 	srl	r4,r17,r3
 200c4a4:	00c00434 	movhi	r3,16
 200c4a8:	18ffffc4 	addi	r3,r3,-1
 200c4ac:	10800544 	addi	r2,r2,21
 200c4b0:	20c8703a 	and	r4,r4,r3
 200c4b4:	8884983a 	sll	r2,r17,r2
 200c4b8:	28c1ffcc 	andi	r3,r5,2047
 200c4bc:	800d883a 	mov	r6,r16
 200c4c0:	00000406 	br	200c4d4 <__floatsidf+0x78>
 200c4c4:	000d883a 	mov	r6,zero
 200c4c8:	0007883a 	mov	r3,zero
 200c4cc:	0009883a 	mov	r4,zero
 200c4d0:	0005883a 	mov	r2,zero
 200c4d4:	180a953a 	slli	r5,r3,20
 200c4d8:	31803fcc 	andi	r6,r6,255
 200c4dc:	00c00434 	movhi	r3,16
 200c4e0:	300c97fa 	slli	r6,r6,31
 200c4e4:	18ffffc4 	addi	r3,r3,-1
 200c4e8:	20c6703a 	and	r3,r4,r3
 200c4ec:	1946b03a 	or	r3,r3,r5
 200c4f0:	1986b03a 	or	r3,r3,r6
 200c4f4:	dfc00217 	ldw	ra,8(sp)
 200c4f8:	dc400117 	ldw	r17,4(sp)
 200c4fc:	dc000017 	ldw	r16,0(sp)
 200c500:	dec00304 	addi	sp,sp,12
 200c504:	f800283a 	ret
 200c508:	10fffd44 	addi	r3,r2,-11
 200c50c:	88c8983a 	sll	r4,r17,r3
 200c510:	00800434 	movhi	r2,16
 200c514:	10bfffc4 	addi	r2,r2,-1
 200c518:	2088703a 	and	r4,r4,r2
 200c51c:	28c1ffcc 	andi	r3,r5,2047
 200c520:	800d883a 	mov	r6,r16
 200c524:	0005883a 	mov	r2,zero
 200c528:	003fea06 	br	200c4d4 <__floatsidf+0x78>

0200c52c <__floatunsidf>:
 200c52c:	defffe04 	addi	sp,sp,-8
 200c530:	dc000015 	stw	r16,0(sp)
 200c534:	dfc00115 	stw	ra,4(sp)
 200c538:	2021883a 	mov	r16,r4
 200c53c:	20001026 	beq	r4,zero,200c580 <__floatunsidf+0x54>
 200c540:	200c5d00 	call	200c5d0 <__clzsi2>
 200c544:	01410784 	movi	r5,1054
 200c548:	100d883a 	mov	r6,r2
 200c54c:	288bc83a 	sub	r5,r5,r2
 200c550:	00800284 	movi	r2,10
 200c554:	11801616 	blt	r2,r6,200c5b0 <__floatunsidf+0x84>
 200c558:	008002c4 	movi	r2,11
 200c55c:	1185c83a 	sub	r2,r2,r6
 200c560:	8084d83a 	srl	r2,r16,r2
 200c564:	00c00434 	movhi	r3,16
 200c568:	31c00544 	addi	r7,r6,21
 200c56c:	18ffffc4 	addi	r3,r3,-1
 200c570:	81e0983a 	sll	r16,r16,r7
 200c574:	10cc703a 	and	r6,r2,r3
 200c578:	2941ffcc 	andi	r5,r5,2047
 200c57c:	00000206 	br	200c588 <__floatunsidf+0x5c>
 200c580:	000b883a 	mov	r5,zero
 200c584:	000d883a 	mov	r6,zero
 200c588:	280a953a 	slli	r5,r5,20
 200c58c:	00c00434 	movhi	r3,16
 200c590:	18ffffc4 	addi	r3,r3,-1
 200c594:	30c6703a 	and	r3,r6,r3
 200c598:	8005883a 	mov	r2,r16
 200c59c:	1946b03a 	or	r3,r3,r5
 200c5a0:	dfc00117 	ldw	ra,4(sp)
 200c5a4:	dc000017 	ldw	r16,0(sp)
 200c5a8:	dec00204 	addi	sp,sp,8
 200c5ac:	f800283a 	ret
 200c5b0:	31bffd44 	addi	r6,r6,-11
 200c5b4:	818c983a 	sll	r6,r16,r6
 200c5b8:	00800434 	movhi	r2,16
 200c5bc:	10bfffc4 	addi	r2,r2,-1
 200c5c0:	2941ffcc 	andi	r5,r5,2047
 200c5c4:	0021883a 	mov	r16,zero
 200c5c8:	308c703a 	and	r6,r6,r2
 200c5cc:	003fee06 	br	200c588 <__floatunsidf+0x5c>

0200c5d0 <__clzsi2>:
 200c5d0:	00bfffd4 	movui	r2,65535
 200c5d4:	11000b36 	bltu	r2,r4,200c604 <__clzsi2+0x34>
 200c5d8:	00803fc4 	movi	r2,255
 200c5dc:	1100122e 	bgeu	r2,r4,200c628 <__clzsi2+0x58>
 200c5e0:	00c00204 	movi	r3,8
 200c5e4:	01400604 	movi	r5,24
 200c5e8:	20c8d83a 	srl	r4,r4,r3
 200c5ec:	00808074 	movhi	r2,513
 200c5f0:	10bc6004 	addi	r2,r2,-3712
 200c5f4:	1109883a 	add	r4,r2,r4
 200c5f8:	20800003 	ldbu	r2,0(r4)
 200c5fc:	2885c83a 	sub	r2,r5,r2
 200c600:	f800283a 	ret
 200c604:	00804034 	movhi	r2,256
 200c608:	10bfffc4 	addi	r2,r2,-1
 200c60c:	11000336 	bltu	r2,r4,200c61c <__clzsi2+0x4c>
 200c610:	00c00404 	movi	r3,16
 200c614:	180b883a 	mov	r5,r3
 200c618:	003ff306 	br	200c5e8 <__clzsi2+0x18>
 200c61c:	00c00604 	movi	r3,24
 200c620:	01400204 	movi	r5,8
 200c624:	003ff006 	br	200c5e8 <__clzsi2+0x18>
 200c628:	0007883a 	mov	r3,zero
 200c62c:	01400804 	movi	r5,32
 200c630:	003fed06 	br	200c5e8 <__clzsi2+0x18>

0200c634 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 200c634:	defffe04 	addi	sp,sp,-8
 200c638:	dfc00115 	stw	ra,4(sp)
 200c63c:	df000015 	stw	fp,0(sp)
 200c640:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 200c644:	00808074 	movhi	r2,513
 200c648:	10836104 	addi	r2,r2,3460
 200c64c:	10800017 	ldw	r2,0(r2)
 200c650:	10000526 	beq	r2,zero,200c668 <alt_get_errno+0x34>
 200c654:	00808074 	movhi	r2,513
 200c658:	10836104 	addi	r2,r2,3460
 200c65c:	10800017 	ldw	r2,0(r2)
 200c660:	103ee83a 	callr	r2
 200c664:	00000206 	br	200c670 <alt_get_errno+0x3c>
 200c668:	00808074 	movhi	r2,513
 200c66c:	108a2704 	addi	r2,r2,10396
}
 200c670:	e037883a 	mov	sp,fp
 200c674:	dfc00117 	ldw	ra,4(sp)
 200c678:	df000017 	ldw	fp,0(sp)
 200c67c:	dec00204 	addi	sp,sp,8
 200c680:	f800283a 	ret

0200c684 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 200c684:	defffb04 	addi	sp,sp,-20
 200c688:	dfc00415 	stw	ra,16(sp)
 200c68c:	df000315 	stw	fp,12(sp)
 200c690:	df000304 	addi	fp,sp,12
 200c694:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 200c698:	e0bfff17 	ldw	r2,-4(fp)
 200c69c:	10000616 	blt	r2,zero,200c6b8 <close+0x34>
 200c6a0:	e0bfff17 	ldw	r2,-4(fp)
 200c6a4:	10c00324 	muli	r3,r2,12
 200c6a8:	00808074 	movhi	r2,513
 200c6ac:	10bede04 	addi	r2,r2,-1160
 200c6b0:	1885883a 	add	r2,r3,r2
 200c6b4:	00000106 	br	200c6bc <close+0x38>
 200c6b8:	0005883a 	mov	r2,zero
 200c6bc:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 200c6c0:	e0bffd17 	ldw	r2,-12(fp)
 200c6c4:	10001926 	beq	r2,zero,200c72c <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 200c6c8:	e0bffd17 	ldw	r2,-12(fp)
 200c6cc:	10800017 	ldw	r2,0(r2)
 200c6d0:	10800417 	ldw	r2,16(r2)
 200c6d4:	10000626 	beq	r2,zero,200c6f0 <close+0x6c>
 200c6d8:	e0bffd17 	ldw	r2,-12(fp)
 200c6dc:	10800017 	ldw	r2,0(r2)
 200c6e0:	10800417 	ldw	r2,16(r2)
 200c6e4:	e13ffd17 	ldw	r4,-12(fp)
 200c6e8:	103ee83a 	callr	r2
 200c6ec:	00000106 	br	200c6f4 <close+0x70>
 200c6f0:	0005883a 	mov	r2,zero
 200c6f4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 200c6f8:	e13fff17 	ldw	r4,-4(fp)
 200c6fc:	200cd800 	call	200cd80 <alt_release_fd>
    if (rval < 0)
 200c700:	e0bffe17 	ldw	r2,-8(fp)
 200c704:	1000070e 	bge	r2,zero,200c724 <close+0xa0>
    {
      ALT_ERRNO = -rval;
 200c708:	200c6340 	call	200c634 <alt_get_errno>
 200c70c:	1007883a 	mov	r3,r2
 200c710:	e0bffe17 	ldw	r2,-8(fp)
 200c714:	0085c83a 	sub	r2,zero,r2
 200c718:	18800015 	stw	r2,0(r3)
      return -1;
 200c71c:	00bfffc4 	movi	r2,-1
 200c720:	00000706 	br	200c740 <close+0xbc>
    }
    return 0;
 200c724:	0005883a 	mov	r2,zero
 200c728:	00000506 	br	200c740 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 200c72c:	200c6340 	call	200c634 <alt_get_errno>
 200c730:	1007883a 	mov	r3,r2
 200c734:	00801444 	movi	r2,81
 200c738:	18800015 	stw	r2,0(r3)
    return -1;
 200c73c:	00bfffc4 	movi	r2,-1
  }
}
 200c740:	e037883a 	mov	sp,fp
 200c744:	dfc00117 	ldw	ra,4(sp)
 200c748:	df000017 	ldw	fp,0(sp)
 200c74c:	dec00204 	addi	sp,sp,8
 200c750:	f800283a 	ret

0200c754 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 200c754:	defffc04 	addi	sp,sp,-16
 200c758:	df000315 	stw	fp,12(sp)
 200c75c:	df000304 	addi	fp,sp,12
 200c760:	e13ffd15 	stw	r4,-12(fp)
 200c764:	e17ffe15 	stw	r5,-8(fp)
 200c768:	e1bfff15 	stw	r6,-4(fp)
  return len;
 200c76c:	e0bfff17 	ldw	r2,-4(fp)
}
 200c770:	e037883a 	mov	sp,fp
 200c774:	df000017 	ldw	fp,0(sp)
 200c778:	dec00104 	addi	sp,sp,4
 200c77c:	f800283a 	ret

0200c780 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 200c780:	defffe04 	addi	sp,sp,-8
 200c784:	dfc00115 	stw	ra,4(sp)
 200c788:	df000015 	stw	fp,0(sp)
 200c78c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 200c790:	00808074 	movhi	r2,513
 200c794:	10836104 	addi	r2,r2,3460
 200c798:	10800017 	ldw	r2,0(r2)
 200c79c:	10000526 	beq	r2,zero,200c7b4 <alt_get_errno+0x34>
 200c7a0:	00808074 	movhi	r2,513
 200c7a4:	10836104 	addi	r2,r2,3460
 200c7a8:	10800017 	ldw	r2,0(r2)
 200c7ac:	103ee83a 	callr	r2
 200c7b0:	00000206 	br	200c7bc <alt_get_errno+0x3c>
 200c7b4:	00808074 	movhi	r2,513
 200c7b8:	108a2704 	addi	r2,r2,10396
}
 200c7bc:	e037883a 	mov	sp,fp
 200c7c0:	dfc00117 	ldw	ra,4(sp)
 200c7c4:	df000017 	ldw	fp,0(sp)
 200c7c8:	dec00204 	addi	sp,sp,8
 200c7cc:	f800283a 	ret

0200c7d0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 200c7d0:	defffb04 	addi	sp,sp,-20
 200c7d4:	dfc00415 	stw	ra,16(sp)
 200c7d8:	df000315 	stw	fp,12(sp)
 200c7dc:	df000304 	addi	fp,sp,12
 200c7e0:	e13ffe15 	stw	r4,-8(fp)
 200c7e4:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 200c7e8:	e0bffe17 	ldw	r2,-8(fp)
 200c7ec:	10000616 	blt	r2,zero,200c808 <fstat+0x38>
 200c7f0:	e0bffe17 	ldw	r2,-8(fp)
 200c7f4:	10c00324 	muli	r3,r2,12
 200c7f8:	00808074 	movhi	r2,513
 200c7fc:	10bede04 	addi	r2,r2,-1160
 200c800:	1885883a 	add	r2,r3,r2
 200c804:	00000106 	br	200c80c <fstat+0x3c>
 200c808:	0005883a 	mov	r2,zero
 200c80c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 200c810:	e0bffd17 	ldw	r2,-12(fp)
 200c814:	10001026 	beq	r2,zero,200c858 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 200c818:	e0bffd17 	ldw	r2,-12(fp)
 200c81c:	10800017 	ldw	r2,0(r2)
 200c820:	10800817 	ldw	r2,32(r2)
 200c824:	10000726 	beq	r2,zero,200c844 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 200c828:	e0bffd17 	ldw	r2,-12(fp)
 200c82c:	10800017 	ldw	r2,0(r2)
 200c830:	10800817 	ldw	r2,32(r2)
 200c834:	e13ffd17 	ldw	r4,-12(fp)
 200c838:	e17fff17 	ldw	r5,-4(fp)
 200c83c:	103ee83a 	callr	r2
 200c840:	00000a06 	br	200c86c <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 200c844:	e0bfff17 	ldw	r2,-4(fp)
 200c848:	00c80004 	movi	r3,8192
 200c84c:	10c00115 	stw	r3,4(r2)
      return 0;
 200c850:	0005883a 	mov	r2,zero
 200c854:	00000506 	br	200c86c <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 200c858:	200c7800 	call	200c780 <alt_get_errno>
 200c85c:	1007883a 	mov	r3,r2
 200c860:	00801444 	movi	r2,81
 200c864:	18800015 	stw	r2,0(r3)
    return -1;
 200c868:	00bfffc4 	movi	r2,-1
  }
}
 200c86c:	e037883a 	mov	sp,fp
 200c870:	dfc00117 	ldw	ra,4(sp)
 200c874:	df000017 	ldw	fp,0(sp)
 200c878:	dec00204 	addi	sp,sp,8
 200c87c:	f800283a 	ret

0200c880 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 200c880:	defffe04 	addi	sp,sp,-8
 200c884:	dfc00115 	stw	ra,4(sp)
 200c888:	df000015 	stw	fp,0(sp)
 200c88c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 200c890:	00808074 	movhi	r2,513
 200c894:	10836104 	addi	r2,r2,3460
 200c898:	10800017 	ldw	r2,0(r2)
 200c89c:	10000526 	beq	r2,zero,200c8b4 <alt_get_errno+0x34>
 200c8a0:	00808074 	movhi	r2,513
 200c8a4:	10836104 	addi	r2,r2,3460
 200c8a8:	10800017 	ldw	r2,0(r2)
 200c8ac:	103ee83a 	callr	r2
 200c8b0:	00000206 	br	200c8bc <alt_get_errno+0x3c>
 200c8b4:	00808074 	movhi	r2,513
 200c8b8:	108a2704 	addi	r2,r2,10396
}
 200c8bc:	e037883a 	mov	sp,fp
 200c8c0:	dfc00117 	ldw	ra,4(sp)
 200c8c4:	df000017 	ldw	fp,0(sp)
 200c8c8:	dec00204 	addi	sp,sp,8
 200c8cc:	f800283a 	ret

0200c8d0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 200c8d0:	deffed04 	addi	sp,sp,-76
 200c8d4:	dfc01215 	stw	ra,72(sp)
 200c8d8:	df001115 	stw	fp,68(sp)
 200c8dc:	df001104 	addi	fp,sp,68
 200c8e0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 200c8e4:	e0bfff17 	ldw	r2,-4(fp)
 200c8e8:	10000616 	blt	r2,zero,200c904 <isatty+0x34>
 200c8ec:	e0bfff17 	ldw	r2,-4(fp)
 200c8f0:	10c00324 	muli	r3,r2,12
 200c8f4:	00808074 	movhi	r2,513
 200c8f8:	10bede04 	addi	r2,r2,-1160
 200c8fc:	1885883a 	add	r2,r3,r2
 200c900:	00000106 	br	200c908 <isatty+0x38>
 200c904:	0005883a 	mov	r2,zero
 200c908:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 200c90c:	e0bfef17 	ldw	r2,-68(fp)
 200c910:	10000e26 	beq	r2,zero,200c94c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 200c914:	e0bfef17 	ldw	r2,-68(fp)
 200c918:	10800017 	ldw	r2,0(r2)
 200c91c:	10800817 	ldw	r2,32(r2)
 200c920:	1000021e 	bne	r2,zero,200c92c <isatty+0x5c>
    {
      return 1;
 200c924:	00800044 	movi	r2,1
 200c928:	00000d06 	br	200c960 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 200c92c:	e0bff004 	addi	r2,fp,-64
 200c930:	e13fff17 	ldw	r4,-4(fp)
 200c934:	100b883a 	mov	r5,r2
 200c938:	200c7d00 	call	200c7d0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 200c93c:	e0bff117 	ldw	r2,-60(fp)
 200c940:	10880020 	cmpeqi	r2,r2,8192
 200c944:	10803fcc 	andi	r2,r2,255
 200c948:	00000506 	br	200c960 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 200c94c:	200c8800 	call	200c880 <alt_get_errno>
 200c950:	1007883a 	mov	r3,r2
 200c954:	00801444 	movi	r2,81
 200c958:	18800015 	stw	r2,0(r3)
    return 0;
 200c95c:	0005883a 	mov	r2,zero
  }
}
 200c960:	e037883a 	mov	sp,fp
 200c964:	dfc00117 	ldw	ra,4(sp)
 200c968:	df000017 	ldw	fp,0(sp)
 200c96c:	dec00204 	addi	sp,sp,8
 200c970:	f800283a 	ret

0200c974 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 200c974:	defffc04 	addi	sp,sp,-16
 200c978:	df000315 	stw	fp,12(sp)
 200c97c:	df000304 	addi	fp,sp,12
 200c980:	e13ffd15 	stw	r4,-12(fp)
 200c984:	e17ffe15 	stw	r5,-8(fp)
 200c988:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 200c98c:	e0fffe17 	ldw	r3,-8(fp)
 200c990:	e0bffd17 	ldw	r2,-12(fp)
 200c994:	18800c26 	beq	r3,r2,200c9c8 <alt_load_section+0x54>
  {
    while( to != end )
 200c998:	00000806 	br	200c9bc <alt_load_section+0x48>
    {
      *to++ = *from++;
 200c99c:	e0bffe17 	ldw	r2,-8(fp)
 200c9a0:	10c00104 	addi	r3,r2,4
 200c9a4:	e0fffe15 	stw	r3,-8(fp)
 200c9a8:	e0fffd17 	ldw	r3,-12(fp)
 200c9ac:	19000104 	addi	r4,r3,4
 200c9b0:	e13ffd15 	stw	r4,-12(fp)
 200c9b4:	18c00017 	ldw	r3,0(r3)
 200c9b8:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 200c9bc:	e0fffe17 	ldw	r3,-8(fp)
 200c9c0:	e0bfff17 	ldw	r2,-4(fp)
 200c9c4:	18bff51e 	bne	r3,r2,200c99c <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
 200c9c8:	e037883a 	mov	sp,fp
 200c9cc:	df000017 	ldw	fp,0(sp)
 200c9d0:	dec00104 	addi	sp,sp,4
 200c9d4:	f800283a 	ret

0200c9d8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 200c9d8:	defffe04 	addi	sp,sp,-8
 200c9dc:	dfc00115 	stw	ra,4(sp)
 200c9e0:	df000015 	stw	fp,0(sp)
 200c9e4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 200c9e8:	01008074 	movhi	r4,513
 200c9ec:	21036604 	addi	r4,r4,3480
 200c9f0:	01408074 	movhi	r5,513
 200c9f4:	297cab04 	addi	r5,r5,-3412
 200c9f8:	01808074 	movhi	r6,513
 200c9fc:	31836604 	addi	r6,r6,3480
 200ca00:	200c9740 	call	200c974 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 200ca04:	01008034 	movhi	r4,512
 200ca08:	21000804 	addi	r4,r4,32
 200ca0c:	01408034 	movhi	r5,512
 200ca10:	29400804 	addi	r5,r5,32
 200ca14:	01808034 	movhi	r6,512
 200ca18:	31806f04 	addi	r6,r6,444
 200ca1c:	200c9740 	call	200c974 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 200ca20:	01008074 	movhi	r4,513
 200ca24:	213be504 	addi	r4,r4,-4204
 200ca28:	01408074 	movhi	r5,513
 200ca2c:	297be504 	addi	r5,r5,-4204
 200ca30:	01808074 	movhi	r6,513
 200ca34:	31bcab04 	addi	r6,r6,-3412
 200ca38:	200c9740 	call	200c974 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 200ca3c:	200deb40 	call	200deb4 <alt_dcache_flush_all>
  alt_icache_flush_all();
 200ca40:	200e0a40 	call	200e0a4 <alt_icache_flush_all>
}
 200ca44:	e037883a 	mov	sp,fp
 200ca48:	dfc00117 	ldw	ra,4(sp)
 200ca4c:	df000017 	ldw	fp,0(sp)
 200ca50:	dec00204 	addi	sp,sp,8
 200ca54:	f800283a 	ret

0200ca58 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 200ca58:	defffe04 	addi	sp,sp,-8
 200ca5c:	dfc00115 	stw	ra,4(sp)
 200ca60:	df000015 	stw	fp,0(sp)
 200ca64:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 200ca68:	00808074 	movhi	r2,513
 200ca6c:	10836104 	addi	r2,r2,3460
 200ca70:	10800017 	ldw	r2,0(r2)
 200ca74:	10000526 	beq	r2,zero,200ca8c <alt_get_errno+0x34>
 200ca78:	00808074 	movhi	r2,513
 200ca7c:	10836104 	addi	r2,r2,3460
 200ca80:	10800017 	ldw	r2,0(r2)
 200ca84:	103ee83a 	callr	r2
 200ca88:	00000206 	br	200ca94 <alt_get_errno+0x3c>
 200ca8c:	00808074 	movhi	r2,513
 200ca90:	108a2704 	addi	r2,r2,10396
}
 200ca94:	e037883a 	mov	sp,fp
 200ca98:	dfc00117 	ldw	ra,4(sp)
 200ca9c:	df000017 	ldw	fp,0(sp)
 200caa0:	dec00204 	addi	sp,sp,8
 200caa4:	f800283a 	ret

0200caa8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 200caa8:	defff904 	addi	sp,sp,-28
 200caac:	dfc00615 	stw	ra,24(sp)
 200cab0:	df000515 	stw	fp,20(sp)
 200cab4:	df000504 	addi	fp,sp,20
 200cab8:	e13ffd15 	stw	r4,-12(fp)
 200cabc:	e17ffe15 	stw	r5,-8(fp)
 200cac0:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 200cac4:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 200cac8:	e0bffd17 	ldw	r2,-12(fp)
 200cacc:	10000616 	blt	r2,zero,200cae8 <lseek+0x40>
 200cad0:	e0bffd17 	ldw	r2,-12(fp)
 200cad4:	10c00324 	muli	r3,r2,12
 200cad8:	00808074 	movhi	r2,513
 200cadc:	10bede04 	addi	r2,r2,-1160
 200cae0:	1885883a 	add	r2,r3,r2
 200cae4:	00000106 	br	200caec <lseek+0x44>
 200cae8:	0005883a 	mov	r2,zero
 200caec:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 200caf0:	e0bffc17 	ldw	r2,-16(fp)
 200caf4:	10001026 	beq	r2,zero,200cb38 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 200caf8:	e0bffc17 	ldw	r2,-16(fp)
 200cafc:	10800017 	ldw	r2,0(r2)
 200cb00:	10800717 	ldw	r2,28(r2)
 200cb04:	10000926 	beq	r2,zero,200cb2c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 200cb08:	e0bffc17 	ldw	r2,-16(fp)
 200cb0c:	10800017 	ldw	r2,0(r2)
 200cb10:	10800717 	ldw	r2,28(r2)
 200cb14:	e13ffc17 	ldw	r4,-16(fp)
 200cb18:	e17ffe17 	ldw	r5,-8(fp)
 200cb1c:	e1bfff17 	ldw	r6,-4(fp)
 200cb20:	103ee83a 	callr	r2
 200cb24:	e0bffb15 	stw	r2,-20(fp)
 200cb28:	00000506 	br	200cb40 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 200cb2c:	00bfde84 	movi	r2,-134
 200cb30:	e0bffb15 	stw	r2,-20(fp)
 200cb34:	00000206 	br	200cb40 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 200cb38:	00bfebc4 	movi	r2,-81
 200cb3c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 200cb40:	e0bffb17 	ldw	r2,-20(fp)
 200cb44:	1000070e 	bge	r2,zero,200cb64 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 200cb48:	200ca580 	call	200ca58 <alt_get_errno>
 200cb4c:	1007883a 	mov	r3,r2
 200cb50:	e0bffb17 	ldw	r2,-20(fp)
 200cb54:	0085c83a 	sub	r2,zero,r2
 200cb58:	18800015 	stw	r2,0(r3)
    rc = -1;
 200cb5c:	00bfffc4 	movi	r2,-1
 200cb60:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 200cb64:	e0bffb17 	ldw	r2,-20(fp)
}
 200cb68:	e037883a 	mov	sp,fp
 200cb6c:	dfc00117 	ldw	ra,4(sp)
 200cb70:	df000017 	ldw	fp,0(sp)
 200cb74:	dec00204 	addi	sp,sp,8
 200cb78:	f800283a 	ret

0200cb7c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 200cb7c:	defffd04 	addi	sp,sp,-12
 200cb80:	dfc00215 	stw	ra,8(sp)
 200cb84:	df000115 	stw	fp,4(sp)
 200cb88:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 200cb8c:	0009883a 	mov	r4,zero
 200cb90:	200d0400 	call	200d040 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 200cb94:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 200cb98:	200d0740 	call	200d074 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 200cb9c:	01008074 	movhi	r4,513
 200cba0:	213ca304 	addi	r4,r4,-3444
 200cba4:	01408074 	movhi	r5,513
 200cba8:	297ca304 	addi	r5,r5,-3444
 200cbac:	01808074 	movhi	r6,513
 200cbb0:	31bca304 	addi	r6,r6,-3444
 200cbb4:	200e4640 	call	200e464 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 200cbb8:	200dfec0 	call	200dfec <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 200cbbc:	01008074 	movhi	r4,513
 200cbc0:	21381204 	addi	r4,r4,-8120
 200cbc4:	200ebf00 	call	200ebf0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 200cbc8:	d126d217 	ldw	r4,-25784(gp)
 200cbcc:	d0e6d317 	ldw	r3,-25780(gp)
 200cbd0:	d0a6d417 	ldw	r2,-25776(gp)
 200cbd4:	180b883a 	mov	r5,r3
 200cbd8:	100d883a 	mov	r6,r2
 200cbdc:	20002080 	call	2000208 <main>
 200cbe0:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 200cbe4:	01000044 	movi	r4,1
 200cbe8:	200c6840 	call	200c684 <close>
  exit (result);
 200cbec:	e13fff17 	ldw	r4,-4(fp)
 200cbf0:	200ec040 	call	200ec04 <exit>

0200cbf4 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 200cbf4:	defffe04 	addi	sp,sp,-8
 200cbf8:	df000115 	stw	fp,4(sp)
 200cbfc:	df000104 	addi	fp,sp,4
 200cc00:	e13fff15 	stw	r4,-4(fp)
}
 200cc04:	e037883a 	mov	sp,fp
 200cc08:	df000017 	ldw	fp,0(sp)
 200cc0c:	dec00104 	addi	sp,sp,4
 200cc10:	f800283a 	ret

0200cc14 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 200cc14:	defffe04 	addi	sp,sp,-8
 200cc18:	df000115 	stw	fp,4(sp)
 200cc1c:	df000104 	addi	fp,sp,4
 200cc20:	e13fff15 	stw	r4,-4(fp)
}
 200cc24:	e037883a 	mov	sp,fp
 200cc28:	df000017 	ldw	fp,0(sp)
 200cc2c:	dec00104 	addi	sp,sp,4
 200cc30:	f800283a 	ret

0200cc34 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 200cc34:	defffe04 	addi	sp,sp,-8
 200cc38:	dfc00115 	stw	ra,4(sp)
 200cc3c:	df000015 	stw	fp,0(sp)
 200cc40:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 200cc44:	00808074 	movhi	r2,513
 200cc48:	10836104 	addi	r2,r2,3460
 200cc4c:	10800017 	ldw	r2,0(r2)
 200cc50:	10000526 	beq	r2,zero,200cc68 <alt_get_errno+0x34>
 200cc54:	00808074 	movhi	r2,513
 200cc58:	10836104 	addi	r2,r2,3460
 200cc5c:	10800017 	ldw	r2,0(r2)
 200cc60:	103ee83a 	callr	r2
 200cc64:	00000206 	br	200cc70 <alt_get_errno+0x3c>
 200cc68:	00808074 	movhi	r2,513
 200cc6c:	108a2704 	addi	r2,r2,10396
}
 200cc70:	e037883a 	mov	sp,fp
 200cc74:	dfc00117 	ldw	ra,4(sp)
 200cc78:	df000017 	ldw	fp,0(sp)
 200cc7c:	dec00204 	addi	sp,sp,8
 200cc80:	f800283a 	ret

0200cc84 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 200cc84:	defff904 	addi	sp,sp,-28
 200cc88:	dfc00615 	stw	ra,24(sp)
 200cc8c:	df000515 	stw	fp,20(sp)
 200cc90:	df000504 	addi	fp,sp,20
 200cc94:	e13ffd15 	stw	r4,-12(fp)
 200cc98:	e17ffe15 	stw	r5,-8(fp)
 200cc9c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 200cca0:	e0bffd17 	ldw	r2,-12(fp)
 200cca4:	10000616 	blt	r2,zero,200ccc0 <read+0x3c>
 200cca8:	e0bffd17 	ldw	r2,-12(fp)
 200ccac:	10c00324 	muli	r3,r2,12
 200ccb0:	00808074 	movhi	r2,513
 200ccb4:	10bede04 	addi	r2,r2,-1160
 200ccb8:	1885883a 	add	r2,r3,r2
 200ccbc:	00000106 	br	200ccc4 <read+0x40>
 200ccc0:	0005883a 	mov	r2,zero
 200ccc4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 200ccc8:	e0bffb17 	ldw	r2,-20(fp)
 200cccc:	10002226 	beq	r2,zero,200cd58 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 200ccd0:	e0bffb17 	ldw	r2,-20(fp)
 200ccd4:	10800217 	ldw	r2,8(r2)
 200ccd8:	108000cc 	andi	r2,r2,3
 200ccdc:	10800060 	cmpeqi	r2,r2,1
 200cce0:	1000181e 	bne	r2,zero,200cd44 <read+0xc0>
        (fd->dev->read))
 200cce4:	e0bffb17 	ldw	r2,-20(fp)
 200cce8:	10800017 	ldw	r2,0(r2)
 200ccec:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 200ccf0:	10001426 	beq	r2,zero,200cd44 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 200ccf4:	e0bffb17 	ldw	r2,-20(fp)
 200ccf8:	10800017 	ldw	r2,0(r2)
 200ccfc:	10800517 	ldw	r2,20(r2)
 200cd00:	e0ffff17 	ldw	r3,-4(fp)
 200cd04:	e13ffb17 	ldw	r4,-20(fp)
 200cd08:	e17ffe17 	ldw	r5,-8(fp)
 200cd0c:	180d883a 	mov	r6,r3
 200cd10:	103ee83a 	callr	r2
 200cd14:	e0bffc15 	stw	r2,-16(fp)
 200cd18:	e0bffc17 	ldw	r2,-16(fp)
 200cd1c:	1000070e 	bge	r2,zero,200cd3c <read+0xb8>
        {
          ALT_ERRNO = -rval;
 200cd20:	200cc340 	call	200cc34 <alt_get_errno>
 200cd24:	1007883a 	mov	r3,r2
 200cd28:	e0bffc17 	ldw	r2,-16(fp)
 200cd2c:	0085c83a 	sub	r2,zero,r2
 200cd30:	18800015 	stw	r2,0(r3)
          return -1;
 200cd34:	00bfffc4 	movi	r2,-1
 200cd38:	00000c06 	br	200cd6c <read+0xe8>
        }
        return rval;
 200cd3c:	e0bffc17 	ldw	r2,-16(fp)
 200cd40:	00000a06 	br	200cd6c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 200cd44:	200cc340 	call	200cc34 <alt_get_errno>
 200cd48:	1007883a 	mov	r3,r2
 200cd4c:	00800344 	movi	r2,13
 200cd50:	18800015 	stw	r2,0(r3)
 200cd54:	00000406 	br	200cd68 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 200cd58:	200cc340 	call	200cc34 <alt_get_errno>
 200cd5c:	1007883a 	mov	r3,r2
 200cd60:	00801444 	movi	r2,81
 200cd64:	18800015 	stw	r2,0(r3)
  }
  return -1;
 200cd68:	00bfffc4 	movi	r2,-1
}
 200cd6c:	e037883a 	mov	sp,fp
 200cd70:	dfc00117 	ldw	ra,4(sp)
 200cd74:	df000017 	ldw	fp,0(sp)
 200cd78:	dec00204 	addi	sp,sp,8
 200cd7c:	f800283a 	ret

0200cd80 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 200cd80:	defffe04 	addi	sp,sp,-8
 200cd84:	df000115 	stw	fp,4(sp)
 200cd88:	df000104 	addi	fp,sp,4
 200cd8c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 200cd90:	e0bfff17 	ldw	r2,-4(fp)
 200cd94:	108000d0 	cmplti	r2,r2,3
 200cd98:	10000d1e 	bne	r2,zero,200cdd0 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
 200cd9c:	00808074 	movhi	r2,513
 200cda0:	10bede04 	addi	r2,r2,-1160
 200cda4:	e0ffff17 	ldw	r3,-4(fp)
 200cda8:	18c00324 	muli	r3,r3,12
 200cdac:	18c00204 	addi	r3,r3,8
 200cdb0:	10c5883a 	add	r2,r2,r3
 200cdb4:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 200cdb8:	00808074 	movhi	r2,513
 200cdbc:	10bede04 	addi	r2,r2,-1160
 200cdc0:	e0ffff17 	ldw	r3,-4(fp)
 200cdc4:	18c00324 	muli	r3,r3,12
 200cdc8:	10c5883a 	add	r2,r2,r3
 200cdcc:	10000015 	stw	zero,0(r2)
  }
}
 200cdd0:	e037883a 	mov	sp,fp
 200cdd4:	df000017 	ldw	fp,0(sp)
 200cdd8:	dec00104 	addi	sp,sp,4
 200cddc:	f800283a 	ret

0200cde0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 200cde0:	defff904 	addi	sp,sp,-28
 200cde4:	df000615 	stw	fp,24(sp)
 200cde8:	df000604 	addi	fp,sp,24
 200cdec:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 200cdf0:	0005303a 	rdctl	r2,status
 200cdf4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 200cdf8:	e0fffc17 	ldw	r3,-16(fp)
 200cdfc:	00bfff84 	movi	r2,-2
 200ce00:	1884703a 	and	r2,r3,r2
 200ce04:	1001703a 	wrctl	status,r2
  
  return context;
 200ce08:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 200ce0c:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 200ce10:	d0a00c17 	ldw	r2,-32720(gp)
 200ce14:	10c000c4 	addi	r3,r2,3
 200ce18:	00bfff04 	movi	r2,-4
 200ce1c:	1884703a 	and	r2,r3,r2
 200ce20:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 200ce24:	d0e00c17 	ldw	r3,-32720(gp)
 200ce28:	e0bfff17 	ldw	r2,-4(fp)
 200ce2c:	1887883a 	add	r3,r3,r2
 200ce30:	00810034 	movhi	r2,1024
 200ce34:	10800004 	addi	r2,r2,0
 200ce38:	10c0062e 	bgeu	r2,r3,200ce54 <sbrk+0x74>
 200ce3c:	e0bffa17 	ldw	r2,-24(fp)
 200ce40:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 200ce44:	e0bffd17 	ldw	r2,-12(fp)
 200ce48:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 200ce4c:	00bfffc4 	movi	r2,-1
 200ce50:	00000b06 	br	200ce80 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 200ce54:	d0a00c17 	ldw	r2,-32720(gp)
 200ce58:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
 200ce5c:	d0e00c17 	ldw	r3,-32720(gp)
 200ce60:	e0bfff17 	ldw	r2,-4(fp)
 200ce64:	1885883a 	add	r2,r3,r2
 200ce68:	d0a00c15 	stw	r2,-32720(gp)
 200ce6c:	e0bffa17 	ldw	r2,-24(fp)
 200ce70:	e0bffe15 	stw	r2,-8(fp)
 200ce74:	e0bffe17 	ldw	r2,-8(fp)
 200ce78:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 200ce7c:	e0bffb17 	ldw	r2,-20(fp)
} 
 200ce80:	e037883a 	mov	sp,fp
 200ce84:	df000017 	ldw	fp,0(sp)
 200ce88:	dec00104 	addi	sp,sp,4
 200ce8c:	f800283a 	ret

0200ce90 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 200ce90:	defffd04 	addi	sp,sp,-12
 200ce94:	dfc00215 	stw	ra,8(sp)
 200ce98:	df000115 	stw	fp,4(sp)
 200ce9c:	df000104 	addi	fp,sp,4
 200cea0:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 200cea4:	e13fff17 	ldw	r4,-4(fp)
 200cea8:	200dd5c0 	call	200dd5c <alt_busy_sleep>
}
 200ceac:	e037883a 	mov	sp,fp
 200ceb0:	dfc00117 	ldw	ra,4(sp)
 200ceb4:	df000017 	ldw	fp,0(sp)
 200ceb8:	dec00204 	addi	sp,sp,8
 200cebc:	f800283a 	ret

0200cec0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 200cec0:	defffe04 	addi	sp,sp,-8
 200cec4:	dfc00115 	stw	ra,4(sp)
 200cec8:	df000015 	stw	fp,0(sp)
 200cecc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 200ced0:	00808074 	movhi	r2,513
 200ced4:	10836104 	addi	r2,r2,3460
 200ced8:	10800017 	ldw	r2,0(r2)
 200cedc:	10000526 	beq	r2,zero,200cef4 <alt_get_errno+0x34>
 200cee0:	00808074 	movhi	r2,513
 200cee4:	10836104 	addi	r2,r2,3460
 200cee8:	10800017 	ldw	r2,0(r2)
 200ceec:	103ee83a 	callr	r2
 200cef0:	00000206 	br	200cefc <alt_get_errno+0x3c>
 200cef4:	00808074 	movhi	r2,513
 200cef8:	108a2704 	addi	r2,r2,10396
}
 200cefc:	e037883a 	mov	sp,fp
 200cf00:	dfc00117 	ldw	ra,4(sp)
 200cf04:	df000017 	ldw	fp,0(sp)
 200cf08:	dec00204 	addi	sp,sp,8
 200cf0c:	f800283a 	ret

0200cf10 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 200cf10:	defff904 	addi	sp,sp,-28
 200cf14:	dfc00615 	stw	ra,24(sp)
 200cf18:	df000515 	stw	fp,20(sp)
 200cf1c:	df000504 	addi	fp,sp,20
 200cf20:	e13ffd15 	stw	r4,-12(fp)
 200cf24:	e17ffe15 	stw	r5,-8(fp)
 200cf28:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 200cf2c:	e0bffd17 	ldw	r2,-12(fp)
 200cf30:	10000616 	blt	r2,zero,200cf4c <write+0x3c>
 200cf34:	e0bffd17 	ldw	r2,-12(fp)
 200cf38:	10c00324 	muli	r3,r2,12
 200cf3c:	00808074 	movhi	r2,513
 200cf40:	10bede04 	addi	r2,r2,-1160
 200cf44:	1885883a 	add	r2,r3,r2
 200cf48:	00000106 	br	200cf50 <write+0x40>
 200cf4c:	0005883a 	mov	r2,zero
 200cf50:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 200cf54:	e0bffb17 	ldw	r2,-20(fp)
 200cf58:	10002126 	beq	r2,zero,200cfe0 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 200cf5c:	e0bffb17 	ldw	r2,-20(fp)
 200cf60:	10800217 	ldw	r2,8(r2)
 200cf64:	108000cc 	andi	r2,r2,3
 200cf68:	10001826 	beq	r2,zero,200cfcc <write+0xbc>
 200cf6c:	e0bffb17 	ldw	r2,-20(fp)
 200cf70:	10800017 	ldw	r2,0(r2)
 200cf74:	10800617 	ldw	r2,24(r2)
 200cf78:	10001426 	beq	r2,zero,200cfcc <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 200cf7c:	e0bffb17 	ldw	r2,-20(fp)
 200cf80:	10800017 	ldw	r2,0(r2)
 200cf84:	10800617 	ldw	r2,24(r2)
 200cf88:	e0ffff17 	ldw	r3,-4(fp)
 200cf8c:	e13ffb17 	ldw	r4,-20(fp)
 200cf90:	e17ffe17 	ldw	r5,-8(fp)
 200cf94:	180d883a 	mov	r6,r3
 200cf98:	103ee83a 	callr	r2
 200cf9c:	e0bffc15 	stw	r2,-16(fp)
 200cfa0:	e0bffc17 	ldw	r2,-16(fp)
 200cfa4:	1000070e 	bge	r2,zero,200cfc4 <write+0xb4>
      {
        ALT_ERRNO = -rval;
 200cfa8:	200cec00 	call	200cec0 <alt_get_errno>
 200cfac:	1007883a 	mov	r3,r2
 200cfb0:	e0bffc17 	ldw	r2,-16(fp)
 200cfb4:	0085c83a 	sub	r2,zero,r2
 200cfb8:	18800015 	stw	r2,0(r3)
        return -1;
 200cfbc:	00bfffc4 	movi	r2,-1
 200cfc0:	00000c06 	br	200cff4 <write+0xe4>
      }
      return rval;
 200cfc4:	e0bffc17 	ldw	r2,-16(fp)
 200cfc8:	00000a06 	br	200cff4 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 200cfcc:	200cec00 	call	200cec0 <alt_get_errno>
 200cfd0:	1007883a 	mov	r3,r2
 200cfd4:	00800344 	movi	r2,13
 200cfd8:	18800015 	stw	r2,0(r3)
 200cfdc:	00000406 	br	200cff0 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 200cfe0:	200cec00 	call	200cec0 <alt_get_errno>
 200cfe4:	1007883a 	mov	r3,r2
 200cfe8:	00801444 	movi	r2,81
 200cfec:	18800015 	stw	r2,0(r3)
  }
  return -1;
 200cff0:	00bfffc4 	movi	r2,-1
}
 200cff4:	e037883a 	mov	sp,fp
 200cff8:	dfc00117 	ldw	ra,4(sp)
 200cffc:	df000017 	ldw	fp,0(sp)
 200d000:	dec00204 	addi	sp,sp,8
 200d004:	f800283a 	ret

0200d008 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 200d008:	defffd04 	addi	sp,sp,-12
 200d00c:	dfc00215 	stw	ra,8(sp)
 200d010:	df000115 	stw	fp,4(sp)
 200d014:	df000104 	addi	fp,sp,4
 200d018:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 200d01c:	e13fff17 	ldw	r4,-4(fp)
 200d020:	01408074 	movhi	r5,513
 200d024:	29435e04 	addi	r5,r5,3448
 200d028:	200df480 	call	200df48 <alt_dev_llist_insert>
}
 200d02c:	e037883a 	mov	sp,fp
 200d030:	dfc00117 	ldw	ra,4(sp)
 200d034:	df000017 	ldw	fp,0(sp)
 200d038:	dec00204 	addi	sp,sp,8
 200d03c:	f800283a 	ret

0200d040 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 200d040:	defffd04 	addi	sp,sp,-12
 200d044:	dfc00215 	stw	ra,8(sp)
 200d048:	df000115 	stw	fp,4(sp)
 200d04c:	df000104 	addi	fp,sp,4
 200d050:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU, CPU);
 200d054:	200e8ec0 	call	200e8ec <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 200d058:	00800044 	movi	r2,1
 200d05c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 200d060:	e037883a 	mov	sp,fp
 200d064:	dfc00117 	ldw	ra,4(sp)
 200d068:	df000017 	ldw	fp,0(sp)
 200d06c:	dec00204 	addi	sp,sp,8
 200d070:	f800283a 	ret

0200d074 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 200d074:	defffe04 	addi	sp,sp,-8
 200d078:	dfc00115 	stw	ra,4(sp)
 200d07c:	df000015 	stw	fp,0(sp)
 200d080:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, TIMER);
 200d084:	01010034 	movhi	r4,1024
 200d088:	210d0804 	addi	r4,r4,13344
 200d08c:	000b883a 	mov	r5,zero
 200d090:	01800084 	movi	r6,2
 200d094:	01c07d04 	movi	r7,500
 200d098:	200db940 	call	200db94 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, JTAG_UART);
 200d09c:	01008074 	movhi	r4,513
 200d0a0:	213f4804 	addi	r4,r4,-736
 200d0a4:	000b883a 	mov	r5,zero
 200d0a8:	000d883a 	mov	r6,zero
 200d0ac:	200d2380 	call	200d238 <altera_avalon_jtag_uart_init>
 200d0b0:	01008074 	movhi	r4,513
 200d0b4:	213f3e04 	addi	r4,r4,-776
 200d0b8:	200d0080 	call	200d008 <alt_dev_reg>
    ALTERA_AVALON_SPI_INIT ( LT24_TOUCH_SPI, LT24_TOUCH_SPI);
 200d0bc:	0001883a 	nop
}
 200d0c0:	e037883a 	mov	sp,fp
 200d0c4:	dfc00117 	ldw	ra,4(sp)
 200d0c8:	df000017 	ldw	fp,0(sp)
 200d0cc:	dec00204 	addi	sp,sp,8
 200d0d0:	f800283a 	ret

0200d0d4 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 200d0d4:	defffa04 	addi	sp,sp,-24
 200d0d8:	dfc00515 	stw	ra,20(sp)
 200d0dc:	df000415 	stw	fp,16(sp)
 200d0e0:	df000404 	addi	fp,sp,16
 200d0e4:	e13ffd15 	stw	r4,-12(fp)
 200d0e8:	e17ffe15 	stw	r5,-8(fp)
 200d0ec:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 200d0f0:	e0bffd17 	ldw	r2,-12(fp)
 200d0f4:	10800017 	ldw	r2,0(r2)
 200d0f8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 200d0fc:	e0bffc17 	ldw	r2,-16(fp)
 200d100:	10c00a04 	addi	r3,r2,40
 200d104:	e0bffd17 	ldw	r2,-12(fp)
 200d108:	10800217 	ldw	r2,8(r2)
 200d10c:	1809883a 	mov	r4,r3
 200d110:	e17ffe17 	ldw	r5,-8(fp)
 200d114:	e1bfff17 	ldw	r6,-4(fp)
 200d118:	100f883a 	mov	r7,r2
 200d11c:	200d6fc0 	call	200d6fc <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 200d120:	e037883a 	mov	sp,fp
 200d124:	dfc00117 	ldw	ra,4(sp)
 200d128:	df000017 	ldw	fp,0(sp)
 200d12c:	dec00204 	addi	sp,sp,8
 200d130:	f800283a 	ret

0200d134 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 200d134:	defffa04 	addi	sp,sp,-24
 200d138:	dfc00515 	stw	ra,20(sp)
 200d13c:	df000415 	stw	fp,16(sp)
 200d140:	df000404 	addi	fp,sp,16
 200d144:	e13ffd15 	stw	r4,-12(fp)
 200d148:	e17ffe15 	stw	r5,-8(fp)
 200d14c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 200d150:	e0bffd17 	ldw	r2,-12(fp)
 200d154:	10800017 	ldw	r2,0(r2)
 200d158:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 200d15c:	e0bffc17 	ldw	r2,-16(fp)
 200d160:	10c00a04 	addi	r3,r2,40
 200d164:	e0bffd17 	ldw	r2,-12(fp)
 200d168:	10800217 	ldw	r2,8(r2)
 200d16c:	1809883a 	mov	r4,r3
 200d170:	e17ffe17 	ldw	r5,-8(fp)
 200d174:	e1bfff17 	ldw	r6,-4(fp)
 200d178:	100f883a 	mov	r7,r2
 200d17c:	200d9080 	call	200d908 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 200d180:	e037883a 	mov	sp,fp
 200d184:	dfc00117 	ldw	ra,4(sp)
 200d188:	df000017 	ldw	fp,0(sp)
 200d18c:	dec00204 	addi	sp,sp,8
 200d190:	f800283a 	ret

0200d194 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 200d194:	defffc04 	addi	sp,sp,-16
 200d198:	dfc00315 	stw	ra,12(sp)
 200d19c:	df000215 	stw	fp,8(sp)
 200d1a0:	df000204 	addi	fp,sp,8
 200d1a4:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 200d1a8:	e0bfff17 	ldw	r2,-4(fp)
 200d1ac:	10800017 	ldw	r2,0(r2)
 200d1b0:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 200d1b4:	e0bffe17 	ldw	r2,-8(fp)
 200d1b8:	10c00a04 	addi	r3,r2,40
 200d1bc:	e0bfff17 	ldw	r2,-4(fp)
 200d1c0:	10800217 	ldw	r2,8(r2)
 200d1c4:	1809883a 	mov	r4,r3
 200d1c8:	100b883a 	mov	r5,r2
 200d1cc:	200d5a80 	call	200d5a8 <altera_avalon_jtag_uart_close>
}
 200d1d0:	e037883a 	mov	sp,fp
 200d1d4:	dfc00117 	ldw	ra,4(sp)
 200d1d8:	df000017 	ldw	fp,0(sp)
 200d1dc:	dec00204 	addi	sp,sp,8
 200d1e0:	f800283a 	ret

0200d1e4 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 200d1e4:	defffa04 	addi	sp,sp,-24
 200d1e8:	dfc00515 	stw	ra,20(sp)
 200d1ec:	df000415 	stw	fp,16(sp)
 200d1f0:	df000404 	addi	fp,sp,16
 200d1f4:	e13ffd15 	stw	r4,-12(fp)
 200d1f8:	e17ffe15 	stw	r5,-8(fp)
 200d1fc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 200d200:	e0bffd17 	ldw	r2,-12(fp)
 200d204:	10800017 	ldw	r2,0(r2)
 200d208:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 200d20c:	e0bffc17 	ldw	r2,-16(fp)
 200d210:	10800a04 	addi	r2,r2,40
 200d214:	1009883a 	mov	r4,r2
 200d218:	e17ffe17 	ldw	r5,-8(fp)
 200d21c:	e1bfff17 	ldw	r6,-4(fp)
 200d220:	200d6100 	call	200d610 <altera_avalon_jtag_uart_ioctl>
}
 200d224:	e037883a 	mov	sp,fp
 200d228:	dfc00117 	ldw	ra,4(sp)
 200d22c:	df000017 	ldw	fp,0(sp)
 200d230:	dec00204 	addi	sp,sp,8
 200d234:	f800283a 	ret

0200d238 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 200d238:	defffa04 	addi	sp,sp,-24
 200d23c:	dfc00515 	stw	ra,20(sp)
 200d240:	df000415 	stw	fp,16(sp)
 200d244:	df000404 	addi	fp,sp,16
 200d248:	e13ffd15 	stw	r4,-12(fp)
 200d24c:	e17ffe15 	stw	r5,-8(fp)
 200d250:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 200d254:	e0bffd17 	ldw	r2,-12(fp)
 200d258:	00c00044 	movi	r3,1
 200d25c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 200d260:	e0bffd17 	ldw	r2,-12(fp)
 200d264:	10800017 	ldw	r2,0(r2)
 200d268:	10800104 	addi	r2,r2,4
 200d26c:	1007883a 	mov	r3,r2
 200d270:	e0bffd17 	ldw	r2,-12(fp)
 200d274:	10800817 	ldw	r2,32(r2)
 200d278:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 200d27c:	e0fffe17 	ldw	r3,-8(fp)
 200d280:	e0bfff17 	ldw	r2,-4(fp)
 200d284:	d8000015 	stw	zero,0(sp)
 200d288:	1809883a 	mov	r4,r3
 200d28c:	100b883a 	mov	r5,r2
 200d290:	01808074 	movhi	r6,513
 200d294:	31b4bf04 	addi	r6,r6,-11524
 200d298:	e1fffd17 	ldw	r7,-12(fp)
 200d29c:	200e0d40 	call	200e0d4 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 200d2a0:	e0bffd17 	ldw	r2,-12(fp)
 200d2a4:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 200d2a8:	e0bffd17 	ldw	r2,-12(fp)
 200d2ac:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 200d2b0:	00808074 	movhi	r2,513
 200d2b4:	108a2c04 	addi	r2,r2,10416
 200d2b8:	10800017 	ldw	r2,0(r2)
 200d2bc:	1809883a 	mov	r4,r3
 200d2c0:	100b883a 	mov	r5,r2
 200d2c4:	01808074 	movhi	r6,513
 200d2c8:	31b54004 	addi	r6,r6,-11008
 200d2cc:	e1fffd17 	ldw	r7,-12(fp)
 200d2d0:	200dc1c0 	call	200dc1c <alt_alarm_start>
 200d2d4:	1000040e 	bge	r2,zero,200d2e8 <altera_avalon_jtag_uart_init+0xb0>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 200d2d8:	e0fffd17 	ldw	r3,-12(fp)
 200d2dc:	00a00034 	movhi	r2,32768
 200d2e0:	10bfffc4 	addi	r2,r2,-1
 200d2e4:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 200d2e8:	e037883a 	mov	sp,fp
 200d2ec:	dfc00117 	ldw	ra,4(sp)
 200d2f0:	df000017 	ldw	fp,0(sp)
 200d2f4:	dec00204 	addi	sp,sp,8
 200d2f8:	f800283a 	ret

0200d2fc <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 200d2fc:	defff804 	addi	sp,sp,-32
 200d300:	df000715 	stw	fp,28(sp)
 200d304:	df000704 	addi	fp,sp,28
 200d308:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 200d30c:	e0bfff17 	ldw	r2,-4(fp)
 200d310:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 200d314:	e0bffb17 	ldw	r2,-20(fp)
 200d318:	10800017 	ldw	r2,0(r2)
 200d31c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 200d320:	e0bffc17 	ldw	r2,-16(fp)
 200d324:	10800104 	addi	r2,r2,4
 200d328:	10800037 	ldwio	r2,0(r2)
 200d32c:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 200d330:	e0bffd17 	ldw	r2,-12(fp)
 200d334:	1080c00c 	andi	r2,r2,768
 200d338:	1000011e 	bne	r2,zero,200d340 <altera_avalon_jtag_uart_irq+0x44>
      break;
 200d33c:	00006c06 	br	200d4f0 <altera_avalon_jtag_uart_irq+0x1f4>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 200d340:	e0bffd17 	ldw	r2,-12(fp)
 200d344:	1080400c 	andi	r2,r2,256
 200d348:	10003426 	beq	r2,zero,200d41c <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 200d34c:	00800074 	movhi	r2,1
 200d350:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 200d354:	e0bffb17 	ldw	r2,-20(fp)
 200d358:	10800a17 	ldw	r2,40(r2)
 200d35c:	10800044 	addi	r2,r2,1
 200d360:	1081ffcc 	andi	r2,r2,2047
 200d364:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 200d368:	e0bffb17 	ldw	r2,-20(fp)
 200d36c:	10c00b17 	ldw	r3,44(r2)
 200d370:	e0bffe17 	ldw	r2,-8(fp)
 200d374:	1880011e 	bne	r3,r2,200d37c <altera_avalon_jtag_uart_irq+0x80>
          break;
 200d378:	00001606 	br	200d3d4 <altera_avalon_jtag_uart_irq+0xd8>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 200d37c:	e0bffc17 	ldw	r2,-16(fp)
 200d380:	10800037 	ldwio	r2,0(r2)
 200d384:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 200d388:	e0bff917 	ldw	r2,-28(fp)
 200d38c:	10a0000c 	andi	r2,r2,32768
 200d390:	1000011e 	bne	r2,zero,200d398 <altera_avalon_jtag_uart_irq+0x9c>
          break;
 200d394:	00000f06 	br	200d3d4 <altera_avalon_jtag_uart_irq+0xd8>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 200d398:	e0bffb17 	ldw	r2,-20(fp)
 200d39c:	10800a17 	ldw	r2,40(r2)
 200d3a0:	e0fff917 	ldw	r3,-28(fp)
 200d3a4:	1809883a 	mov	r4,r3
 200d3a8:	e0fffb17 	ldw	r3,-20(fp)
 200d3ac:	1885883a 	add	r2,r3,r2
 200d3b0:	10800e04 	addi	r2,r2,56
 200d3b4:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 200d3b8:	e0bffb17 	ldw	r2,-20(fp)
 200d3bc:	10800a17 	ldw	r2,40(r2)
 200d3c0:	10800044 	addi	r2,r2,1
 200d3c4:	10c1ffcc 	andi	r3,r2,2047
 200d3c8:	e0bffb17 	ldw	r2,-20(fp)
 200d3cc:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 200d3d0:	003fe006 	br	200d354 <altera_avalon_jtag_uart_irq+0x58>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 200d3d4:	e0bff917 	ldw	r2,-28(fp)
 200d3d8:	10bfffec 	andhi	r2,r2,65535
 200d3dc:	10000f26 	beq	r2,zero,200d41c <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 200d3e0:	e0bffb17 	ldw	r2,-20(fp)
 200d3e4:	10c00817 	ldw	r3,32(r2)
 200d3e8:	00bfff84 	movi	r2,-2
 200d3ec:	1886703a 	and	r3,r3,r2
 200d3f0:	e0bffb17 	ldw	r2,-20(fp)
 200d3f4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 200d3f8:	e0bffc17 	ldw	r2,-16(fp)
 200d3fc:	10800104 	addi	r2,r2,4
 200d400:	1007883a 	mov	r3,r2
 200d404:	e0bffb17 	ldw	r2,-20(fp)
 200d408:	10800817 	ldw	r2,32(r2)
 200d40c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 200d410:	e0bffc17 	ldw	r2,-16(fp)
 200d414:	10800104 	addi	r2,r2,4
 200d418:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 200d41c:	e0bffd17 	ldw	r2,-12(fp)
 200d420:	1080800c 	andi	r2,r2,512
 200d424:	10003126 	beq	r2,zero,200d4ec <altera_avalon_jtag_uart_irq+0x1f0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 200d428:	e0bffd17 	ldw	r2,-12(fp)
 200d42c:	1004d43a 	srli	r2,r2,16
 200d430:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 200d434:	00001406 	br	200d488 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 200d438:	e0bffc17 	ldw	r2,-16(fp)
 200d43c:	e0fffb17 	ldw	r3,-20(fp)
 200d440:	18c00d17 	ldw	r3,52(r3)
 200d444:	e13ffb17 	ldw	r4,-20(fp)
 200d448:	20c7883a 	add	r3,r4,r3
 200d44c:	18c20e04 	addi	r3,r3,2104
 200d450:	18c00003 	ldbu	r3,0(r3)
 200d454:	18c03fcc 	andi	r3,r3,255
 200d458:	18c0201c 	xori	r3,r3,128
 200d45c:	18ffe004 	addi	r3,r3,-128
 200d460:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 200d464:	e0bffb17 	ldw	r2,-20(fp)
 200d468:	10800d17 	ldw	r2,52(r2)
 200d46c:	10800044 	addi	r2,r2,1
 200d470:	10c1ffcc 	andi	r3,r2,2047
 200d474:	e0bffb17 	ldw	r2,-20(fp)
 200d478:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 200d47c:	e0bffa17 	ldw	r2,-24(fp)
 200d480:	10bfffc4 	addi	r2,r2,-1
 200d484:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 200d488:	e0bffa17 	ldw	r2,-24(fp)
 200d48c:	10000526 	beq	r2,zero,200d4a4 <altera_avalon_jtag_uart_irq+0x1a8>
 200d490:	e0bffb17 	ldw	r2,-20(fp)
 200d494:	10c00d17 	ldw	r3,52(r2)
 200d498:	e0bffb17 	ldw	r2,-20(fp)
 200d49c:	10800c17 	ldw	r2,48(r2)
 200d4a0:	18bfe51e 	bne	r3,r2,200d438 <altera_avalon_jtag_uart_irq+0x13c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 200d4a4:	e0bffa17 	ldw	r2,-24(fp)
 200d4a8:	10001026 	beq	r2,zero,200d4ec <altera_avalon_jtag_uart_irq+0x1f0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 200d4ac:	e0bffb17 	ldw	r2,-20(fp)
 200d4b0:	10c00817 	ldw	r3,32(r2)
 200d4b4:	00bfff44 	movi	r2,-3
 200d4b8:	1886703a 	and	r3,r3,r2
 200d4bc:	e0bffb17 	ldw	r2,-20(fp)
 200d4c0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 200d4c4:	e0bffb17 	ldw	r2,-20(fp)
 200d4c8:	10800017 	ldw	r2,0(r2)
 200d4cc:	10800104 	addi	r2,r2,4
 200d4d0:	1007883a 	mov	r3,r2
 200d4d4:	e0bffb17 	ldw	r2,-20(fp)
 200d4d8:	10800817 	ldw	r2,32(r2)
 200d4dc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 200d4e0:	e0bffc17 	ldw	r2,-16(fp)
 200d4e4:	10800104 	addi	r2,r2,4
 200d4e8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 200d4ec:	003f8c06 	br	200d320 <altera_avalon_jtag_uart_irq+0x24>
}
 200d4f0:	e037883a 	mov	sp,fp
 200d4f4:	df000017 	ldw	fp,0(sp)
 200d4f8:	dec00104 	addi	sp,sp,4
 200d4fc:	f800283a 	ret

0200d500 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 200d500:	defff804 	addi	sp,sp,-32
 200d504:	df000715 	stw	fp,28(sp)
 200d508:	df000704 	addi	fp,sp,28
 200d50c:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 200d510:	e0bffb17 	ldw	r2,-20(fp)
 200d514:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 200d518:	e0bff917 	ldw	r2,-28(fp)
 200d51c:	10800017 	ldw	r2,0(r2)
 200d520:	10800104 	addi	r2,r2,4
 200d524:	10800037 	ldwio	r2,0(r2)
 200d528:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 200d52c:	e0bffa17 	ldw	r2,-24(fp)
 200d530:	1081000c 	andi	r2,r2,1024
 200d534:	10000b26 	beq	r2,zero,200d564 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 200d538:	e0bff917 	ldw	r2,-28(fp)
 200d53c:	10800017 	ldw	r2,0(r2)
 200d540:	10800104 	addi	r2,r2,4
 200d544:	1007883a 	mov	r3,r2
 200d548:	e0bff917 	ldw	r2,-28(fp)
 200d54c:	10800817 	ldw	r2,32(r2)
 200d550:	10810014 	ori	r2,r2,1024
 200d554:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 200d558:	e0bff917 	ldw	r2,-28(fp)
 200d55c:	10000915 	stw	zero,36(r2)
 200d560:	00000a06 	br	200d58c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 200d564:	e0bff917 	ldw	r2,-28(fp)
 200d568:	10c00917 	ldw	r3,36(r2)
 200d56c:	00a00034 	movhi	r2,32768
 200d570:	10bfff04 	addi	r2,r2,-4
 200d574:	10c00536 	bltu	r2,r3,200d58c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 200d578:	e0bff917 	ldw	r2,-28(fp)
 200d57c:	10800917 	ldw	r2,36(r2)
 200d580:	10c00044 	addi	r3,r2,1
 200d584:	e0bff917 	ldw	r2,-28(fp)
 200d588:	10c00915 	stw	r3,36(r2)
 200d58c:	00808074 	movhi	r2,513
 200d590:	108a2c04 	addi	r2,r2,10416
 200d594:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 200d598:	e037883a 	mov	sp,fp
 200d59c:	df000017 	ldw	fp,0(sp)
 200d5a0:	dec00104 	addi	sp,sp,4
 200d5a4:	f800283a 	ret

0200d5a8 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 200d5a8:	defffd04 	addi	sp,sp,-12
 200d5ac:	df000215 	stw	fp,8(sp)
 200d5b0:	df000204 	addi	fp,sp,8
 200d5b4:	e13ffe15 	stw	r4,-8(fp)
 200d5b8:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 200d5bc:	00000506 	br	200d5d4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 200d5c0:	e0bfff17 	ldw	r2,-4(fp)
 200d5c4:	1090000c 	andi	r2,r2,16384
 200d5c8:	10000226 	beq	r2,zero,200d5d4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 200d5cc:	00bffd44 	movi	r2,-11
 200d5d0:	00000b06 	br	200d600 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 200d5d4:	e0bffe17 	ldw	r2,-8(fp)
 200d5d8:	10c00d17 	ldw	r3,52(r2)
 200d5dc:	e0bffe17 	ldw	r2,-8(fp)
 200d5e0:	10800c17 	ldw	r2,48(r2)
 200d5e4:	18800526 	beq	r3,r2,200d5fc <altera_avalon_jtag_uart_close+0x54>
 200d5e8:	e0bffe17 	ldw	r2,-8(fp)
 200d5ec:	10c00917 	ldw	r3,36(r2)
 200d5f0:	e0bffe17 	ldw	r2,-8(fp)
 200d5f4:	10800117 	ldw	r2,4(r2)
 200d5f8:	18bff136 	bltu	r3,r2,200d5c0 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 200d5fc:	0005883a 	mov	r2,zero
}
 200d600:	e037883a 	mov	sp,fp
 200d604:	df000017 	ldw	fp,0(sp)
 200d608:	dec00104 	addi	sp,sp,4
 200d60c:	f800283a 	ret

0200d610 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 200d610:	defffa04 	addi	sp,sp,-24
 200d614:	df000515 	stw	fp,20(sp)
 200d618:	df000504 	addi	fp,sp,20
 200d61c:	e13ffd15 	stw	r4,-12(fp)
 200d620:	e17ffe15 	stw	r5,-8(fp)
 200d624:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 200d628:	00bff9c4 	movi	r2,-25
 200d62c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 200d630:	e0bffe17 	ldw	r2,-8(fp)
 200d634:	10da8060 	cmpeqi	r3,r2,27137
 200d638:	1800031e 	bne	r3,zero,200d648 <altera_avalon_jtag_uart_ioctl+0x38>
 200d63c:	109a80a0 	cmpeqi	r2,r2,27138
 200d640:	1000191e 	bne	r2,zero,200d6a8 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
 200d644:	00002806 	br	200d6e8 <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 200d648:	e0bffd17 	ldw	r2,-12(fp)
 200d64c:	10c00117 	ldw	r3,4(r2)
 200d650:	00a00034 	movhi	r2,32768
 200d654:	10bfffc4 	addi	r2,r2,-1
 200d658:	18801226 	beq	r3,r2,200d6a4 <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
 200d65c:	e0bfff17 	ldw	r2,-4(fp)
 200d660:	10800017 	ldw	r2,0(r2)
 200d664:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 200d668:	e0bffc17 	ldw	r2,-16(fp)
 200d66c:	10800090 	cmplti	r2,r2,2
 200d670:	1000061e 	bne	r2,zero,200d68c <altera_avalon_jtag_uart_ioctl+0x7c>
 200d674:	e0fffc17 	ldw	r3,-16(fp)
 200d678:	00a00034 	movhi	r2,32768
 200d67c:	10bfffc4 	addi	r2,r2,-1
 200d680:	18800226 	beq	r3,r2,200d68c <altera_avalon_jtag_uart_ioctl+0x7c>
 200d684:	e0bffc17 	ldw	r2,-16(fp)
 200d688:	00000206 	br	200d694 <altera_avalon_jtag_uart_ioctl+0x84>
 200d68c:	00a00034 	movhi	r2,32768
 200d690:	10bfff84 	addi	r2,r2,-2
 200d694:	e0fffd17 	ldw	r3,-12(fp)
 200d698:	18800115 	stw	r2,4(r3)
      rc = 0;
 200d69c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 200d6a0:	00001106 	br	200d6e8 <altera_avalon_jtag_uart_ioctl+0xd8>
 200d6a4:	00001006 	br	200d6e8 <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 200d6a8:	e0bffd17 	ldw	r2,-12(fp)
 200d6ac:	10c00117 	ldw	r3,4(r2)
 200d6b0:	00a00034 	movhi	r2,32768
 200d6b4:	10bfffc4 	addi	r2,r2,-1
 200d6b8:	18800a26 	beq	r3,r2,200d6e4 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 200d6bc:	e0bffd17 	ldw	r2,-12(fp)
 200d6c0:	10c00917 	ldw	r3,36(r2)
 200d6c4:	e0bffd17 	ldw	r2,-12(fp)
 200d6c8:	10800117 	ldw	r2,4(r2)
 200d6cc:	1885803a 	cmpltu	r2,r3,r2
 200d6d0:	10c03fcc 	andi	r3,r2,255
 200d6d4:	e0bfff17 	ldw	r2,-4(fp)
 200d6d8:	10c00015 	stw	r3,0(r2)
      rc = 0;
 200d6dc:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 200d6e0:	00000006 	br	200d6e4 <altera_avalon_jtag_uart_ioctl+0xd4>
 200d6e4:	0001883a 	nop

  default:
    break;
  }

  return rc;
 200d6e8:	e0bffb17 	ldw	r2,-20(fp)
}
 200d6ec:	e037883a 	mov	sp,fp
 200d6f0:	df000017 	ldw	fp,0(sp)
 200d6f4:	dec00104 	addi	sp,sp,4
 200d6f8:	f800283a 	ret

0200d6fc <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 200d6fc:	defff304 	addi	sp,sp,-52
 200d700:	dfc00c15 	stw	ra,48(sp)
 200d704:	df000b15 	stw	fp,44(sp)
 200d708:	df000b04 	addi	fp,sp,44
 200d70c:	e13ffc15 	stw	r4,-16(fp)
 200d710:	e17ffd15 	stw	r5,-12(fp)
 200d714:	e1bffe15 	stw	r6,-8(fp)
 200d718:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 200d71c:	e0bffd17 	ldw	r2,-12(fp)
 200d720:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 200d724:	00004906 	br	200d84c <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 200d728:	e0bffc17 	ldw	r2,-16(fp)
 200d72c:	10800a17 	ldw	r2,40(r2)
 200d730:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 200d734:	e0bffc17 	ldw	r2,-16(fp)
 200d738:	10800b17 	ldw	r2,44(r2)
 200d73c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 200d740:	e0fff717 	ldw	r3,-36(fp)
 200d744:	e0bff817 	ldw	r2,-32(fp)
 200d748:	18800536 	bltu	r3,r2,200d760 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 200d74c:	e0fff717 	ldw	r3,-36(fp)
 200d750:	e0bff817 	ldw	r2,-32(fp)
 200d754:	1885c83a 	sub	r2,r3,r2
 200d758:	e0bff615 	stw	r2,-40(fp)
 200d75c:	00000406 	br	200d770 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 200d760:	00c20004 	movi	r3,2048
 200d764:	e0bff817 	ldw	r2,-32(fp)
 200d768:	1885c83a 	sub	r2,r3,r2
 200d76c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 200d770:	e0bff617 	ldw	r2,-40(fp)
 200d774:	1000011e 	bne	r2,zero,200d77c <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
 200d778:	00001d06 	br	200d7f0 <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
 200d77c:	e0fffe17 	ldw	r3,-8(fp)
 200d780:	e0bff617 	ldw	r2,-40(fp)
 200d784:	1880022e 	bgeu	r3,r2,200d790 <altera_avalon_jtag_uart_read+0x94>
        n = space;
 200d788:	e0bffe17 	ldw	r2,-8(fp)
 200d78c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 200d790:	e0bff817 	ldw	r2,-32(fp)
 200d794:	10800e04 	addi	r2,r2,56
 200d798:	e0fffc17 	ldw	r3,-16(fp)
 200d79c:	1885883a 	add	r2,r3,r2
 200d7a0:	e13ff517 	ldw	r4,-44(fp)
 200d7a4:	100b883a 	mov	r5,r2
 200d7a8:	e1bff617 	ldw	r6,-40(fp)
 200d7ac:	2005a940 	call	2005a94 <memcpy>
      ptr   += n;
 200d7b0:	e0fff517 	ldw	r3,-44(fp)
 200d7b4:	e0bff617 	ldw	r2,-40(fp)
 200d7b8:	1885883a 	add	r2,r3,r2
 200d7bc:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 200d7c0:	e0fffe17 	ldw	r3,-8(fp)
 200d7c4:	e0bff617 	ldw	r2,-40(fp)
 200d7c8:	1885c83a 	sub	r2,r3,r2
 200d7cc:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 200d7d0:	e0fff817 	ldw	r3,-32(fp)
 200d7d4:	e0bff617 	ldw	r2,-40(fp)
 200d7d8:	1885883a 	add	r2,r3,r2
 200d7dc:	10c1ffcc 	andi	r3,r2,2047
 200d7e0:	e0bffc17 	ldw	r2,-16(fp)
 200d7e4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 200d7e8:	e0bffe17 	ldw	r2,-8(fp)
 200d7ec:	00bfce16 	blt	zero,r2,200d728 <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
 200d7f0:	e0fff517 	ldw	r3,-44(fp)
 200d7f4:	e0bffd17 	ldw	r2,-12(fp)
 200d7f8:	18800126 	beq	r3,r2,200d800 <altera_avalon_jtag_uart_read+0x104>
      break;
 200d7fc:	00001506 	br	200d854 <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 200d800:	e0bfff17 	ldw	r2,-4(fp)
 200d804:	1090000c 	andi	r2,r2,16384
 200d808:	10000126 	beq	r2,zero,200d810 <altera_avalon_jtag_uart_read+0x114>
      break;
 200d80c:	00001106 	br	200d854 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 200d810:	0001883a 	nop
 200d814:	e0bffc17 	ldw	r2,-16(fp)
 200d818:	10c00a17 	ldw	r3,40(r2)
 200d81c:	e0bff717 	ldw	r2,-36(fp)
 200d820:	1880051e 	bne	r3,r2,200d838 <altera_avalon_jtag_uart_read+0x13c>
 200d824:	e0bffc17 	ldw	r2,-16(fp)
 200d828:	10c00917 	ldw	r3,36(r2)
 200d82c:	e0bffc17 	ldw	r2,-16(fp)
 200d830:	10800117 	ldw	r2,4(r2)
 200d834:	18bff736 	bltu	r3,r2,200d814 <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 200d838:	e0bffc17 	ldw	r2,-16(fp)
 200d83c:	10c00a17 	ldw	r3,40(r2)
 200d840:	e0bff717 	ldw	r2,-36(fp)
 200d844:	1880011e 	bne	r3,r2,200d84c <altera_avalon_jtag_uart_read+0x150>
      break;
 200d848:	00000206 	br	200d854 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 200d84c:	e0bffe17 	ldw	r2,-8(fp)
 200d850:	00bfb516 	blt	zero,r2,200d728 <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 200d854:	e0fff517 	ldw	r3,-44(fp)
 200d858:	e0bffd17 	ldw	r2,-12(fp)
 200d85c:	18801826 	beq	r3,r2,200d8c0 <altera_avalon_jtag_uart_read+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 200d860:	0005303a 	rdctl	r2,status
 200d864:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 200d868:	e0fffa17 	ldw	r3,-24(fp)
 200d86c:	00bfff84 	movi	r2,-2
 200d870:	1884703a 	and	r2,r3,r2
 200d874:	1001703a 	wrctl	status,r2
  
  return context;
 200d878:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 200d87c:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 200d880:	e0bffc17 	ldw	r2,-16(fp)
 200d884:	10800817 	ldw	r2,32(r2)
 200d888:	10c00054 	ori	r3,r2,1
 200d88c:	e0bffc17 	ldw	r2,-16(fp)
 200d890:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 200d894:	e0bffc17 	ldw	r2,-16(fp)
 200d898:	10800017 	ldw	r2,0(r2)
 200d89c:	10800104 	addi	r2,r2,4
 200d8a0:	1007883a 	mov	r3,r2
 200d8a4:	e0bffc17 	ldw	r2,-16(fp)
 200d8a8:	10800817 	ldw	r2,32(r2)
 200d8ac:	18800035 	stwio	r2,0(r3)
 200d8b0:	e0bff917 	ldw	r2,-28(fp)
 200d8b4:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 200d8b8:	e0bffb17 	ldw	r2,-20(fp)
 200d8bc:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 200d8c0:	e0fff517 	ldw	r3,-44(fp)
 200d8c4:	e0bffd17 	ldw	r2,-12(fp)
 200d8c8:	18800426 	beq	r3,r2,200d8dc <altera_avalon_jtag_uart_read+0x1e0>
    return ptr - buffer;
 200d8cc:	e0fff517 	ldw	r3,-44(fp)
 200d8d0:	e0bffd17 	ldw	r2,-12(fp)
 200d8d4:	1885c83a 	sub	r2,r3,r2
 200d8d8:	00000606 	br	200d8f4 <altera_avalon_jtag_uart_read+0x1f8>
  else if (flags & O_NONBLOCK)
 200d8dc:	e0bfff17 	ldw	r2,-4(fp)
 200d8e0:	1090000c 	andi	r2,r2,16384
 200d8e4:	10000226 	beq	r2,zero,200d8f0 <altera_avalon_jtag_uart_read+0x1f4>
    return -EWOULDBLOCK;
 200d8e8:	00bffd44 	movi	r2,-11
 200d8ec:	00000106 	br	200d8f4 <altera_avalon_jtag_uart_read+0x1f8>
  else
    return -EIO;
 200d8f0:	00bffec4 	movi	r2,-5
}
 200d8f4:	e037883a 	mov	sp,fp
 200d8f8:	dfc00117 	ldw	ra,4(sp)
 200d8fc:	df000017 	ldw	fp,0(sp)
 200d900:	dec00204 	addi	sp,sp,8
 200d904:	f800283a 	ret

0200d908 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 200d908:	defff304 	addi	sp,sp,-52
 200d90c:	dfc00c15 	stw	ra,48(sp)
 200d910:	df000b15 	stw	fp,44(sp)
 200d914:	df000b04 	addi	fp,sp,44
 200d918:	e13ffc15 	stw	r4,-16(fp)
 200d91c:	e17ffd15 	stw	r5,-12(fp)
 200d920:	e1bffe15 	stw	r6,-8(fp)
 200d924:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 200d928:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 200d92c:	e0bffd17 	ldw	r2,-12(fp)
 200d930:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 200d934:	00003806 	br	200da18 <altera_avalon_jtag_uart_write+0x110>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 200d938:	e0bffc17 	ldw	r2,-16(fp)
 200d93c:	10800c17 	ldw	r2,48(r2)
 200d940:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
 200d944:	e0bffc17 	ldw	r2,-16(fp)
 200d948:	10800d17 	ldw	r2,52(r2)
 200d94c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 200d950:	e0fff817 	ldw	r3,-32(fp)
 200d954:	e0bff517 	ldw	r2,-44(fp)
 200d958:	1880062e 	bgeu	r3,r2,200d974 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 200d95c:	e0fff517 	ldw	r3,-44(fp)
 200d960:	e0bff817 	ldw	r2,-32(fp)
 200d964:	1885c83a 	sub	r2,r3,r2
 200d968:	10bfffc4 	addi	r2,r2,-1
 200d96c:	e0bff615 	stw	r2,-40(fp)
 200d970:	00000b06 	br	200d9a0 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 200d974:	e0bff517 	ldw	r2,-44(fp)
 200d978:	10000526 	beq	r2,zero,200d990 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 200d97c:	00c20004 	movi	r3,2048
 200d980:	e0bff817 	ldw	r2,-32(fp)
 200d984:	1885c83a 	sub	r2,r3,r2
 200d988:	e0bff615 	stw	r2,-40(fp)
 200d98c:	00000406 	br	200d9a0 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 200d990:	00c1ffc4 	movi	r3,2047
 200d994:	e0bff817 	ldw	r2,-32(fp)
 200d998:	1885c83a 	sub	r2,r3,r2
 200d99c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 200d9a0:	e0bff617 	ldw	r2,-40(fp)
 200d9a4:	1000011e 	bne	r2,zero,200d9ac <altera_avalon_jtag_uart_write+0xa4>
        break;
 200d9a8:	00001d06 	br	200da20 <altera_avalon_jtag_uart_write+0x118>

      if (n > count)
 200d9ac:	e0fffe17 	ldw	r3,-8(fp)
 200d9b0:	e0bff617 	ldw	r2,-40(fp)
 200d9b4:	1880022e 	bgeu	r3,r2,200d9c0 <altera_avalon_jtag_uart_write+0xb8>
        n = count;
 200d9b8:	e0bffe17 	ldw	r2,-8(fp)
 200d9bc:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 200d9c0:	e0bff817 	ldw	r2,-32(fp)
 200d9c4:	10820e04 	addi	r2,r2,2104
 200d9c8:	e0fffc17 	ldw	r3,-16(fp)
 200d9cc:	1885883a 	add	r2,r3,r2
 200d9d0:	1009883a 	mov	r4,r2
 200d9d4:	e17ffd17 	ldw	r5,-12(fp)
 200d9d8:	e1bff617 	ldw	r6,-40(fp)
 200d9dc:	2005a940 	call	2005a94 <memcpy>
      ptr   += n;
 200d9e0:	e0fffd17 	ldw	r3,-12(fp)
 200d9e4:	e0bff617 	ldw	r2,-40(fp)
 200d9e8:	1885883a 	add	r2,r3,r2
 200d9ec:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 200d9f0:	e0fffe17 	ldw	r3,-8(fp)
 200d9f4:	e0bff617 	ldw	r2,-40(fp)
 200d9f8:	1885c83a 	sub	r2,r3,r2
 200d9fc:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 200da00:	e0fff817 	ldw	r3,-32(fp)
 200da04:	e0bff617 	ldw	r2,-40(fp)
 200da08:	1885883a 	add	r2,r3,r2
 200da0c:	10c1ffcc 	andi	r3,r2,2047
 200da10:	e0bffc17 	ldw	r2,-16(fp)
 200da14:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 200da18:	e0bffe17 	ldw	r2,-8(fp)
 200da1c:	00bfc616 	blt	zero,r2,200d938 <altera_avalon_jtag_uart_write+0x30>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 200da20:	0005303a 	rdctl	r2,status
 200da24:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 200da28:	e0fffa17 	ldw	r3,-24(fp)
 200da2c:	00bfff84 	movi	r2,-2
 200da30:	1884703a 	and	r2,r3,r2
 200da34:	1001703a 	wrctl	status,r2
  
  return context;
 200da38:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 200da3c:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 200da40:	e0bffc17 	ldw	r2,-16(fp)
 200da44:	10800817 	ldw	r2,32(r2)
 200da48:	10c00094 	ori	r3,r2,2
 200da4c:	e0bffc17 	ldw	r2,-16(fp)
 200da50:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 200da54:	e0bffc17 	ldw	r2,-16(fp)
 200da58:	10800017 	ldw	r2,0(r2)
 200da5c:	10800104 	addi	r2,r2,4
 200da60:	1007883a 	mov	r3,r2
 200da64:	e0bffc17 	ldw	r2,-16(fp)
 200da68:	10800817 	ldw	r2,32(r2)
 200da6c:	18800035 	stwio	r2,0(r3)
 200da70:	e0bff917 	ldw	r2,-28(fp)
 200da74:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 200da78:	e0bffb17 	ldw	r2,-20(fp)
 200da7c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 200da80:	e0bffe17 	ldw	r2,-8(fp)
 200da84:	0080120e 	bge	zero,r2,200dad0 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
 200da88:	e0bfff17 	ldw	r2,-4(fp)
 200da8c:	1090000c 	andi	r2,r2,16384
 200da90:	10000126 	beq	r2,zero,200da98 <altera_avalon_jtag_uart_write+0x190>
        break;
 200da94:	00001006 	br	200dad8 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 200da98:	0001883a 	nop
 200da9c:	e0bffc17 	ldw	r2,-16(fp)
 200daa0:	10c00d17 	ldw	r3,52(r2)
 200daa4:	e0bff517 	ldw	r2,-44(fp)
 200daa8:	1880051e 	bne	r3,r2,200dac0 <altera_avalon_jtag_uart_write+0x1b8>
 200daac:	e0bffc17 	ldw	r2,-16(fp)
 200dab0:	10c00917 	ldw	r3,36(r2)
 200dab4:	e0bffc17 	ldw	r2,-16(fp)
 200dab8:	10800117 	ldw	r2,4(r2)
 200dabc:	18bff736 	bltu	r3,r2,200da9c <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 200dac0:	e0bffc17 	ldw	r2,-16(fp)
 200dac4:	10800917 	ldw	r2,36(r2)
 200dac8:	10000126 	beq	r2,zero,200dad0 <altera_avalon_jtag_uart_write+0x1c8>
         break;
 200dacc:	00000206 	br	200dad8 <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
 200dad0:	e0bffe17 	ldw	r2,-8(fp)
 200dad4:	00bf9716 	blt	zero,r2,200d934 <altera_avalon_jtag_uart_write+0x2c>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 200dad8:	e0fffd17 	ldw	r3,-12(fp)
 200dadc:	e0bff717 	ldw	r2,-36(fp)
 200dae0:	18800426 	beq	r3,r2,200daf4 <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
 200dae4:	e0fffd17 	ldw	r3,-12(fp)
 200dae8:	e0bff717 	ldw	r2,-36(fp)
 200daec:	1885c83a 	sub	r2,r3,r2
 200daf0:	00000606 	br	200db0c <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
 200daf4:	e0bfff17 	ldw	r2,-4(fp)
 200daf8:	1090000c 	andi	r2,r2,16384
 200dafc:	10000226 	beq	r2,zero,200db08 <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
 200db00:	00bffd44 	movi	r2,-11
 200db04:	00000106 	br	200db0c <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 200db08:	00bffec4 	movi	r2,-5
}
 200db0c:	e037883a 	mov	sp,fp
 200db10:	dfc00117 	ldw	ra,4(sp)
 200db14:	df000017 	ldw	fp,0(sp)
 200db18:	dec00204 	addi	sp,sp,8
 200db1c:	f800283a 	ret

0200db20 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 200db20:	defffa04 	addi	sp,sp,-24
 200db24:	dfc00515 	stw	ra,20(sp)
 200db28:	df000415 	stw	fp,16(sp)
 200db2c:	df000404 	addi	fp,sp,16
 200db30:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 200db34:	0007883a 	mov	r3,zero
 200db38:	e0bfff17 	ldw	r2,-4(fp)
 200db3c:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 200db40:	e0bfff17 	ldw	r2,-4(fp)
 200db44:	10800104 	addi	r2,r2,4
 200db48:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 200db4c:	0005303a 	rdctl	r2,status
 200db50:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 200db54:	e0fffd17 	ldw	r3,-12(fp)
 200db58:	00bfff84 	movi	r2,-2
 200db5c:	1884703a 	and	r2,r3,r2
 200db60:	1001703a 	wrctl	status,r2
  
  return context;
 200db64:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 200db68:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
 200db6c:	200e7e80 	call	200e7e8 <alt_tick>
 200db70:	e0bffc17 	ldw	r2,-16(fp)
 200db74:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 200db78:	e0bffe17 	ldw	r2,-8(fp)
 200db7c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 200db80:	e037883a 	mov	sp,fp
 200db84:	dfc00117 	ldw	ra,4(sp)
 200db88:	df000017 	ldw	fp,0(sp)
 200db8c:	dec00204 	addi	sp,sp,8
 200db90:	f800283a 	ret

0200db94 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 200db94:	defff804 	addi	sp,sp,-32
 200db98:	dfc00715 	stw	ra,28(sp)
 200db9c:	df000615 	stw	fp,24(sp)
 200dba0:	df000604 	addi	fp,sp,24
 200dba4:	e13ffc15 	stw	r4,-16(fp)
 200dba8:	e17ffd15 	stw	r5,-12(fp)
 200dbac:	e1bffe15 	stw	r6,-8(fp)
 200dbb0:	e1ffff15 	stw	r7,-4(fp)
 200dbb4:	e0bfff17 	ldw	r2,-4(fp)
 200dbb8:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 200dbbc:	00808074 	movhi	r2,513
 200dbc0:	108a2c04 	addi	r2,r2,10416
 200dbc4:	10800017 	ldw	r2,0(r2)
 200dbc8:	1000041e 	bne	r2,zero,200dbdc <alt_avalon_timer_sc_init+0x48>
  {
    _alt_tick_rate = nticks;
 200dbcc:	00808074 	movhi	r2,513
 200dbd0:	108a2c04 	addi	r2,r2,10416
 200dbd4:	e0fffb17 	ldw	r3,-20(fp)
 200dbd8:	10c00015 	stw	r3,0(r2)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 200dbdc:	e0bffc17 	ldw	r2,-16(fp)
 200dbe0:	10800104 	addi	r2,r2,4
 200dbe4:	00c001c4 	movi	r3,7
 200dbe8:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 200dbec:	d8000015 	stw	zero,0(sp)
 200dbf0:	e13ffd17 	ldw	r4,-12(fp)
 200dbf4:	e17ffe17 	ldw	r5,-8(fp)
 200dbf8:	01808074 	movhi	r6,513
 200dbfc:	31b6c804 	addi	r6,r6,-9440
 200dc00:	e1fffc17 	ldw	r7,-16(fp)
 200dc04:	200e0d40 	call	200e0d4 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 200dc08:	e037883a 	mov	sp,fp
 200dc0c:	dfc00117 	ldw	ra,4(sp)
 200dc10:	df000017 	ldw	fp,0(sp)
 200dc14:	dec00204 	addi	sp,sp,8
 200dc18:	f800283a 	ret

0200dc1c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 200dc1c:	defff504 	addi	sp,sp,-44
 200dc20:	df000a15 	stw	fp,40(sp)
 200dc24:	df000a04 	addi	fp,sp,40
 200dc28:	e13ffc15 	stw	r4,-16(fp)
 200dc2c:	e17ffd15 	stw	r5,-12(fp)
 200dc30:	e1bffe15 	stw	r6,-8(fp)
 200dc34:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 200dc38:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 200dc3c:	00808074 	movhi	r2,513
 200dc40:	108a2c04 	addi	r2,r2,10416
 200dc44:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
 200dc48:	10003f26 	beq	r2,zero,200dd48 <alt_alarm_start+0x12c>
  {
    if (alarm)
 200dc4c:	e0bffc17 	ldw	r2,-16(fp)
 200dc50:	10003b26 	beq	r2,zero,200dd40 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
 200dc54:	e0bffc17 	ldw	r2,-16(fp)
 200dc58:	e0fffe17 	ldw	r3,-8(fp)
 200dc5c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 200dc60:	e0bffc17 	ldw	r2,-16(fp)
 200dc64:	e0ffff17 	ldw	r3,-4(fp)
 200dc68:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 200dc6c:	0005303a 	rdctl	r2,status
 200dc70:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 200dc74:	e0fff817 	ldw	r3,-32(fp)
 200dc78:	00bfff84 	movi	r2,-2
 200dc7c:	1884703a 	and	r2,r3,r2
 200dc80:	1001703a 	wrctl	status,r2
  
  return context;
 200dc84:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
 200dc88:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 200dc8c:	00808074 	movhi	r2,513
 200dc90:	108a2d04 	addi	r2,r2,10420
 200dc94:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
 200dc98:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 200dc9c:	e0fffd17 	ldw	r3,-12(fp)
 200dca0:	e0bff617 	ldw	r2,-40(fp)
 200dca4:	1885883a 	add	r2,r3,r2
 200dca8:	10c00044 	addi	r3,r2,1
 200dcac:	e0bffc17 	ldw	r2,-16(fp)
 200dcb0:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 200dcb4:	e0bffc17 	ldw	r2,-16(fp)
 200dcb8:	10c00217 	ldw	r3,8(r2)
 200dcbc:	e0bff617 	ldw	r2,-40(fp)
 200dcc0:	1880042e 	bgeu	r3,r2,200dcd4 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
 200dcc4:	e0bffc17 	ldw	r2,-16(fp)
 200dcc8:	00c00044 	movi	r3,1
 200dccc:	10c00405 	stb	r3,16(r2)
 200dcd0:	00000206 	br	200dcdc <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
 200dcd4:	e0bffc17 	ldw	r2,-16(fp)
 200dcd8:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 200dcdc:	e0fffc17 	ldw	r3,-16(fp)
 200dce0:	00808074 	movhi	r2,513
 200dce4:	10836404 	addi	r2,r2,3472
 200dce8:	e0bff915 	stw	r2,-28(fp)
 200dcec:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 200dcf0:	e0bffa17 	ldw	r2,-24(fp)
 200dcf4:	e0fff917 	ldw	r3,-28(fp)
 200dcf8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 200dcfc:	e0bff917 	ldw	r2,-28(fp)
 200dd00:	10c00017 	ldw	r3,0(r2)
 200dd04:	e0bffa17 	ldw	r2,-24(fp)
 200dd08:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 200dd0c:	e0bff917 	ldw	r2,-28(fp)
 200dd10:	10800017 	ldw	r2,0(r2)
 200dd14:	e0fffa17 	ldw	r3,-24(fp)
 200dd18:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 200dd1c:	e0bff917 	ldw	r2,-28(fp)
 200dd20:	e0fffa17 	ldw	r3,-24(fp)
 200dd24:	10c00015 	stw	r3,0(r2)
 200dd28:	e0bff717 	ldw	r2,-36(fp)
 200dd2c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 200dd30:	e0bffb17 	ldw	r2,-20(fp)
 200dd34:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 200dd38:	0005883a 	mov	r2,zero
 200dd3c:	00000306 	br	200dd4c <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
 200dd40:	00bffa84 	movi	r2,-22
 200dd44:	00000106 	br	200dd4c <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
 200dd48:	00bfde84 	movi	r2,-134
  }
}
 200dd4c:	e037883a 	mov	sp,fp
 200dd50:	df000017 	ldw	fp,0(sp)
 200dd54:	dec00104 	addi	sp,sp,4
 200dd58:	f800283a 	ret

0200dd5c <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 200dd5c:	defffa04 	addi	sp,sp,-24
 200dd60:	dfc00515 	stw	ra,20(sp)
 200dd64:	df000415 	stw	fp,16(sp)
 200dd68:	df000404 	addi	fp,sp,16
 200dd6c:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
 200dd70:	008000c4 	movi	r2,3
 200dd74:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 200dd78:	e0fffd17 	ldw	r3,-12(fp)
 200dd7c:	008003f4 	movhi	r2,15
 200dd80:	10909004 	addi	r2,r2,16960
 200dd84:	1885383a 	mul	r2,r3,r2
 200dd88:	0100bef4 	movhi	r4,763
 200dd8c:	213c2004 	addi	r4,r4,-3968
 200dd90:	100b883a 	mov	r5,r2
 200dd94:	200a0240 	call	200a024 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
 200dd98:	01200034 	movhi	r4,32768
 200dd9c:	213fffc4 	addi	r4,r4,-1
 200dda0:	100b883a 	mov	r5,r2
 200dda4:	200a0240 	call	200a024 <__udivsi3>
 200dda8:	e13fff17 	ldw	r4,-4(fp)
 200ddac:	100b883a 	mov	r5,r2
 200ddb0:	200a0240 	call	200a024 <__udivsi3>
 200ddb4:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
 200ddb8:	e0bffe17 	ldw	r2,-8(fp)
 200ddbc:	10002a26 	beq	r2,zero,200de68 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
 200ddc0:	e03ffc15 	stw	zero,-16(fp)
 200ddc4:	00001706 	br	200de24 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 200ddc8:	00a00034 	movhi	r2,32768
 200ddcc:	10bfffc4 	addi	r2,r2,-1
 200ddd0:	10bfffc4 	addi	r2,r2,-1
 200ddd4:	103ffe1e 	bne	r2,zero,200ddd0 <alt_busy_sleep+0x74>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 200ddd8:	e0fffd17 	ldw	r3,-12(fp)
 200dddc:	008003f4 	movhi	r2,15
 200dde0:	10909004 	addi	r2,r2,16960
 200dde4:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
 200dde8:	0100bef4 	movhi	r4,763
 200ddec:	213c2004 	addi	r4,r4,-3968
 200ddf0:	100b883a 	mov	r5,r2
 200ddf4:	200a0240 	call	200a024 <__udivsi3>
 200ddf8:	01200034 	movhi	r4,32768
 200ddfc:	213fffc4 	addi	r4,r4,-1
 200de00:	100b883a 	mov	r5,r2
 200de04:	200a0240 	call	200a024 <__udivsi3>
 200de08:	1007883a 	mov	r3,r2
 200de0c:	e0bfff17 	ldw	r2,-4(fp)
 200de10:	10c5c83a 	sub	r2,r2,r3
 200de14:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
 200de18:	e0bffc17 	ldw	r2,-16(fp)
 200de1c:	10800044 	addi	r2,r2,1
 200de20:	e0bffc15 	stw	r2,-16(fp)
 200de24:	e0fffc17 	ldw	r3,-16(fp)
 200de28:	e0bffe17 	ldw	r2,-8(fp)
 200de2c:	18bfe616 	blt	r3,r2,200ddc8 <alt_busy_sleep+0x6c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 200de30:	e0fffd17 	ldw	r3,-12(fp)
 200de34:	008003f4 	movhi	r2,15
 200de38:	10909004 	addi	r2,r2,16960
 200de3c:	1885383a 	mul	r2,r3,r2
 200de40:	0100bef4 	movhi	r4,763
 200de44:	213c2004 	addi	r4,r4,-3968
 200de48:	100b883a 	mov	r5,r2
 200de4c:	200a0240 	call	200a024 <__udivsi3>
 200de50:	1007883a 	mov	r3,r2
 200de54:	e0bfff17 	ldw	r2,-4(fp)
 200de58:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 200de5c:	10bfffc4 	addi	r2,r2,-1
 200de60:	103ffe1e 	bne	r2,zero,200de5c <alt_busy_sleep+0x100>
 200de64:	00000d06 	br	200de9c <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 200de68:	e0fffd17 	ldw	r3,-12(fp)
 200de6c:	008003f4 	movhi	r2,15
 200de70:	10909004 	addi	r2,r2,16960
 200de74:	1885383a 	mul	r2,r3,r2
 200de78:	0100bef4 	movhi	r4,763
 200de7c:	213c2004 	addi	r4,r4,-3968
 200de80:	100b883a 	mov	r5,r2
 200de84:	200a0240 	call	200a024 <__udivsi3>
 200de88:	1007883a 	mov	r3,r2
 200de8c:	e0bfff17 	ldw	r2,-4(fp)
 200de90:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 200de94:	10bfffc4 	addi	r2,r2,-1
 200de98:	00bffe16 	blt	zero,r2,200de94 <alt_busy_sleep+0x138>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 200de9c:	0005883a 	mov	r2,zero
}
 200dea0:	e037883a 	mov	sp,fp
 200dea4:	dfc00117 	ldw	ra,4(sp)
 200dea8:	df000017 	ldw	fp,0(sp)
 200deac:	dec00204 	addi	sp,sp,8
 200deb0:	f800283a 	ret

0200deb4 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 200deb4:	defffe04 	addi	sp,sp,-8
 200deb8:	df000115 	stw	fp,4(sp)
 200debc:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 200dec0:	e03fff15 	stw	zero,-4(fp)
 200dec4:	00000506 	br	200dedc <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
 200dec8:	e0bfff17 	ldw	r2,-4(fp)
 200decc:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 200ded0:	e0bfff17 	ldw	r2,-4(fp)
 200ded4:	10800804 	addi	r2,r2,32
 200ded8:	e0bfff15 	stw	r2,-4(fp)
 200dedc:	e0bfff17 	ldw	r2,-4(fp)
 200dee0:	10820030 	cmpltui	r2,r2,2048
 200dee4:	103ff81e 	bne	r2,zero,200dec8 <alt_dcache_flush_all+0x14>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 200dee8:	e037883a 	mov	sp,fp
 200deec:	df000017 	ldw	fp,0(sp)
 200def0:	dec00104 	addi	sp,sp,4
 200def4:	f800283a 	ret

0200def8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 200def8:	defffe04 	addi	sp,sp,-8
 200defc:	dfc00115 	stw	ra,4(sp)
 200df00:	df000015 	stw	fp,0(sp)
 200df04:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 200df08:	00808074 	movhi	r2,513
 200df0c:	10836104 	addi	r2,r2,3460
 200df10:	10800017 	ldw	r2,0(r2)
 200df14:	10000526 	beq	r2,zero,200df2c <alt_get_errno+0x34>
 200df18:	00808074 	movhi	r2,513
 200df1c:	10836104 	addi	r2,r2,3460
 200df20:	10800017 	ldw	r2,0(r2)
 200df24:	103ee83a 	callr	r2
 200df28:	00000206 	br	200df34 <alt_get_errno+0x3c>
 200df2c:	00808074 	movhi	r2,513
 200df30:	108a2704 	addi	r2,r2,10396
}
 200df34:	e037883a 	mov	sp,fp
 200df38:	dfc00117 	ldw	ra,4(sp)
 200df3c:	df000017 	ldw	fp,0(sp)
 200df40:	dec00204 	addi	sp,sp,8
 200df44:	f800283a 	ret

0200df48 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 200df48:	defffa04 	addi	sp,sp,-24
 200df4c:	dfc00515 	stw	ra,20(sp)
 200df50:	df000415 	stw	fp,16(sp)
 200df54:	df000404 	addi	fp,sp,16
 200df58:	e13ffe15 	stw	r4,-8(fp)
 200df5c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 200df60:	e0bffe17 	ldw	r2,-8(fp)
 200df64:	10000326 	beq	r2,zero,200df74 <alt_dev_llist_insert+0x2c>
 200df68:	e0bffe17 	ldw	r2,-8(fp)
 200df6c:	10800217 	ldw	r2,8(r2)
 200df70:	1000061e 	bne	r2,zero,200df8c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 200df74:	200def80 	call	200def8 <alt_get_errno>
 200df78:	1007883a 	mov	r3,r2
 200df7c:	00800584 	movi	r2,22
 200df80:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 200df84:	00bffa84 	movi	r2,-22
 200df88:	00001306 	br	200dfd8 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 200df8c:	e0bffe17 	ldw	r2,-8(fp)
 200df90:	e0ffff17 	ldw	r3,-4(fp)
 200df94:	e0fffc15 	stw	r3,-16(fp)
 200df98:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 200df9c:	e0bffd17 	ldw	r2,-12(fp)
 200dfa0:	e0fffc17 	ldw	r3,-16(fp)
 200dfa4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 200dfa8:	e0bffc17 	ldw	r2,-16(fp)
 200dfac:	10c00017 	ldw	r3,0(r2)
 200dfb0:	e0bffd17 	ldw	r2,-12(fp)
 200dfb4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 200dfb8:	e0bffc17 	ldw	r2,-16(fp)
 200dfbc:	10800017 	ldw	r2,0(r2)
 200dfc0:	e0fffd17 	ldw	r3,-12(fp)
 200dfc4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 200dfc8:	e0bffc17 	ldw	r2,-16(fp)
 200dfcc:	e0fffd17 	ldw	r3,-12(fp)
 200dfd0:	10c00015 	stw	r3,0(r2)

  return 0;  
 200dfd4:	0005883a 	mov	r2,zero
}
 200dfd8:	e037883a 	mov	sp,fp
 200dfdc:	dfc00117 	ldw	ra,4(sp)
 200dfe0:	df000017 	ldw	fp,0(sp)
 200dfe4:	dec00204 	addi	sp,sp,8
 200dfe8:	f800283a 	ret

0200dfec <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 200dfec:	defffd04 	addi	sp,sp,-12
 200dff0:	dfc00215 	stw	ra,8(sp)
 200dff4:	df000115 	stw	fp,4(sp)
 200dff8:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 200dffc:	00808074 	movhi	r2,513
 200e000:	10bbe404 	addi	r2,r2,-4208
 200e004:	e0bfff15 	stw	r2,-4(fp)
 200e008:	00000606 	br	200e024 <_do_ctors+0x38>
        (*ctor) (); 
 200e00c:	e0bfff17 	ldw	r2,-4(fp)
 200e010:	10800017 	ldw	r2,0(r2)
 200e014:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 200e018:	e0bfff17 	ldw	r2,-4(fp)
 200e01c:	10bfff04 	addi	r2,r2,-4
 200e020:	e0bfff15 	stw	r2,-4(fp)
 200e024:	e0ffff17 	ldw	r3,-4(fp)
 200e028:	00808074 	movhi	r2,513
 200e02c:	10bbe504 	addi	r2,r2,-4204
 200e030:	18bff62e 	bgeu	r3,r2,200e00c <_do_ctors+0x20>
        (*ctor) (); 
}
 200e034:	e037883a 	mov	sp,fp
 200e038:	dfc00117 	ldw	ra,4(sp)
 200e03c:	df000017 	ldw	fp,0(sp)
 200e040:	dec00204 	addi	sp,sp,8
 200e044:	f800283a 	ret

0200e048 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 200e048:	defffd04 	addi	sp,sp,-12
 200e04c:	dfc00215 	stw	ra,8(sp)
 200e050:	df000115 	stw	fp,4(sp)
 200e054:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 200e058:	00808074 	movhi	r2,513
 200e05c:	10bbe404 	addi	r2,r2,-4208
 200e060:	e0bfff15 	stw	r2,-4(fp)
 200e064:	00000606 	br	200e080 <_do_dtors+0x38>
        (*dtor) (); 
 200e068:	e0bfff17 	ldw	r2,-4(fp)
 200e06c:	10800017 	ldw	r2,0(r2)
 200e070:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 200e074:	e0bfff17 	ldw	r2,-4(fp)
 200e078:	10bfff04 	addi	r2,r2,-4
 200e07c:	e0bfff15 	stw	r2,-4(fp)
 200e080:	e0ffff17 	ldw	r3,-4(fp)
 200e084:	00808074 	movhi	r2,513
 200e088:	10bbe504 	addi	r2,r2,-4204
 200e08c:	18bff62e 	bgeu	r3,r2,200e068 <_do_dtors+0x20>
        (*dtor) (); 
}
 200e090:	e037883a 	mov	sp,fp
 200e094:	dfc00117 	ldw	ra,4(sp)
 200e098:	df000017 	ldw	fp,0(sp)
 200e09c:	dec00204 	addi	sp,sp,8
 200e0a0:	f800283a 	ret

0200e0a4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 200e0a4:	defffe04 	addi	sp,sp,-8
 200e0a8:	dfc00115 	stw	ra,4(sp)
 200e0ac:	df000015 	stw	fp,0(sp)
 200e0b0:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 200e0b4:	0009883a 	mov	r4,zero
 200e0b8:	01440004 	movi	r5,4096
 200e0bc:	200eb640 	call	200eb64 <alt_icache_flush>
#endif
}
 200e0c0:	e037883a 	mov	sp,fp
 200e0c4:	dfc00117 	ldw	ra,4(sp)
 200e0c8:	df000017 	ldw	fp,0(sp)
 200e0cc:	dec00204 	addi	sp,sp,8
 200e0d0:	f800283a 	ret

0200e0d4 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 200e0d4:	defff904 	addi	sp,sp,-28
 200e0d8:	dfc00615 	stw	ra,24(sp)
 200e0dc:	df000515 	stw	fp,20(sp)
 200e0e0:	df000504 	addi	fp,sp,20
 200e0e4:	e13ffc15 	stw	r4,-16(fp)
 200e0e8:	e17ffd15 	stw	r5,-12(fp)
 200e0ec:	e1bffe15 	stw	r6,-8(fp)
 200e0f0:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 200e0f4:	e0800217 	ldw	r2,8(fp)
 200e0f8:	d8800015 	stw	r2,0(sp)
 200e0fc:	e13ffc17 	ldw	r4,-16(fp)
 200e100:	e17ffd17 	ldw	r5,-12(fp)
 200e104:	e1bffe17 	ldw	r6,-8(fp)
 200e108:	e1ffff17 	ldw	r7,-4(fp)
 200e10c:	200e2b40 	call	200e2b4 <alt_iic_isr_register>
}  
 200e110:	e037883a 	mov	sp,fp
 200e114:	dfc00117 	ldw	ra,4(sp)
 200e118:	df000017 	ldw	fp,0(sp)
 200e11c:	dec00204 	addi	sp,sp,8
 200e120:	f800283a 	ret

0200e124 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 200e124:	defff904 	addi	sp,sp,-28
 200e128:	df000615 	stw	fp,24(sp)
 200e12c:	df000604 	addi	fp,sp,24
 200e130:	e13ffe15 	stw	r4,-8(fp)
 200e134:	e17fff15 	stw	r5,-4(fp)
 200e138:	e0bfff17 	ldw	r2,-4(fp)
 200e13c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 200e140:	0005303a 	rdctl	r2,status
 200e144:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 200e148:	e0fffb17 	ldw	r3,-20(fp)
 200e14c:	00bfff84 	movi	r2,-2
 200e150:	1884703a 	and	r2,r3,r2
 200e154:	1001703a 	wrctl	status,r2
  
  return context;
 200e158:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 200e15c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 200e160:	e0bffa17 	ldw	r2,-24(fp)
 200e164:	00c00044 	movi	r3,1
 200e168:	1884983a 	sll	r2,r3,r2
 200e16c:	1007883a 	mov	r3,r2
 200e170:	00808074 	movhi	r2,513
 200e174:	108a2b04 	addi	r2,r2,10412
 200e178:	10800017 	ldw	r2,0(r2)
 200e17c:	1886b03a 	or	r3,r3,r2
 200e180:	00808074 	movhi	r2,513
 200e184:	108a2b04 	addi	r2,r2,10412
 200e188:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 200e18c:	00808074 	movhi	r2,513
 200e190:	108a2b04 	addi	r2,r2,10412
 200e194:	10800017 	ldw	r2,0(r2)
 200e198:	100170fa 	wrctl	ienable,r2
 200e19c:	e0bffc17 	ldw	r2,-16(fp)
 200e1a0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 200e1a4:	e0bffd17 	ldw	r2,-12(fp)
 200e1a8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 200e1ac:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 200e1b0:	0001883a 	nop
}
 200e1b4:	e037883a 	mov	sp,fp
 200e1b8:	df000017 	ldw	fp,0(sp)
 200e1bc:	dec00104 	addi	sp,sp,4
 200e1c0:	f800283a 	ret

0200e1c4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 200e1c4:	defff904 	addi	sp,sp,-28
 200e1c8:	df000615 	stw	fp,24(sp)
 200e1cc:	df000604 	addi	fp,sp,24
 200e1d0:	e13ffe15 	stw	r4,-8(fp)
 200e1d4:	e17fff15 	stw	r5,-4(fp)
 200e1d8:	e0bfff17 	ldw	r2,-4(fp)
 200e1dc:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 200e1e0:	0005303a 	rdctl	r2,status
 200e1e4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 200e1e8:	e0fffb17 	ldw	r3,-20(fp)
 200e1ec:	00bfff84 	movi	r2,-2
 200e1f0:	1884703a 	and	r2,r3,r2
 200e1f4:	1001703a 	wrctl	status,r2
  
  return context;
 200e1f8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 200e1fc:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 200e200:	e0bffa17 	ldw	r2,-24(fp)
 200e204:	00c00044 	movi	r3,1
 200e208:	1884983a 	sll	r2,r3,r2
 200e20c:	0084303a 	nor	r2,zero,r2
 200e210:	1007883a 	mov	r3,r2
 200e214:	00808074 	movhi	r2,513
 200e218:	108a2b04 	addi	r2,r2,10412
 200e21c:	10800017 	ldw	r2,0(r2)
 200e220:	1886703a 	and	r3,r3,r2
 200e224:	00808074 	movhi	r2,513
 200e228:	108a2b04 	addi	r2,r2,10412
 200e22c:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 200e230:	00808074 	movhi	r2,513
 200e234:	108a2b04 	addi	r2,r2,10412
 200e238:	10800017 	ldw	r2,0(r2)
 200e23c:	100170fa 	wrctl	ienable,r2
 200e240:	e0bffc17 	ldw	r2,-16(fp)
 200e244:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 200e248:	e0bffd17 	ldw	r2,-12(fp)
 200e24c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 200e250:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 200e254:	0001883a 	nop
}
 200e258:	e037883a 	mov	sp,fp
 200e25c:	df000017 	ldw	fp,0(sp)
 200e260:	dec00104 	addi	sp,sp,4
 200e264:	f800283a 	ret

0200e268 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 200e268:	defffc04 	addi	sp,sp,-16
 200e26c:	df000315 	stw	fp,12(sp)
 200e270:	df000304 	addi	fp,sp,12
 200e274:	e13ffe15 	stw	r4,-8(fp)
 200e278:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 200e27c:	000530fa 	rdctl	r2,ienable
 200e280:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 200e284:	e0bfff17 	ldw	r2,-4(fp)
 200e288:	00c00044 	movi	r3,1
 200e28c:	1884983a 	sll	r2,r3,r2
 200e290:	1007883a 	mov	r3,r2
 200e294:	e0bffd17 	ldw	r2,-12(fp)
 200e298:	1884703a 	and	r2,r3,r2
 200e29c:	1004c03a 	cmpne	r2,r2,zero
 200e2a0:	10803fcc 	andi	r2,r2,255
}
 200e2a4:	e037883a 	mov	sp,fp
 200e2a8:	df000017 	ldw	fp,0(sp)
 200e2ac:	dec00104 	addi	sp,sp,4
 200e2b0:	f800283a 	ret

0200e2b4 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 200e2b4:	defff504 	addi	sp,sp,-44
 200e2b8:	dfc00a15 	stw	ra,40(sp)
 200e2bc:	df000915 	stw	fp,36(sp)
 200e2c0:	df000904 	addi	fp,sp,36
 200e2c4:	e13ffc15 	stw	r4,-16(fp)
 200e2c8:	e17ffd15 	stw	r5,-12(fp)
 200e2cc:	e1bffe15 	stw	r6,-8(fp)
 200e2d0:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 200e2d4:	00bffa84 	movi	r2,-22
 200e2d8:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 200e2dc:	e0bffd17 	ldw	r2,-12(fp)
 200e2e0:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 200e2e4:	e0bff817 	ldw	r2,-32(fp)
 200e2e8:	10800808 	cmpgei	r2,r2,32
 200e2ec:	1000271e 	bne	r2,zero,200e38c <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 200e2f0:	0005303a 	rdctl	r2,status
 200e2f4:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 200e2f8:	e0fffa17 	ldw	r3,-24(fp)
 200e2fc:	00bfff84 	movi	r2,-2
 200e300:	1884703a 	and	r2,r3,r2
 200e304:	1001703a 	wrctl	status,r2
  
  return context;
 200e308:	e0bffa17 	ldw	r2,-24(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 200e30c:	e0bff915 	stw	r2,-28(fp)

    alt_irq[id].handler = isr;
 200e310:	00808074 	movhi	r2,513
 200e314:	108a3804 	addi	r2,r2,10464
 200e318:	e0fff817 	ldw	r3,-32(fp)
 200e31c:	180690fa 	slli	r3,r3,3
 200e320:	10c5883a 	add	r2,r2,r3
 200e324:	e0fffe17 	ldw	r3,-8(fp)
 200e328:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 200e32c:	00808074 	movhi	r2,513
 200e330:	108a3804 	addi	r2,r2,10464
 200e334:	e0fff817 	ldw	r3,-32(fp)
 200e338:	180690fa 	slli	r3,r3,3
 200e33c:	18c00104 	addi	r3,r3,4
 200e340:	10c5883a 	add	r2,r2,r3
 200e344:	e0ffff17 	ldw	r3,-4(fp)
 200e348:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 200e34c:	e0bffe17 	ldw	r2,-8(fp)
 200e350:	10000526 	beq	r2,zero,200e368 <alt_iic_isr_register+0xb4>
 200e354:	e0bff817 	ldw	r2,-32(fp)
 200e358:	e13ffc17 	ldw	r4,-16(fp)
 200e35c:	100b883a 	mov	r5,r2
 200e360:	200e1240 	call	200e124 <alt_ic_irq_enable>
 200e364:	00000406 	br	200e378 <alt_iic_isr_register+0xc4>
 200e368:	e0bff817 	ldw	r2,-32(fp)
 200e36c:	e13ffc17 	ldw	r4,-16(fp)
 200e370:	100b883a 	mov	r5,r2
 200e374:	200e1c40 	call	200e1c4 <alt_ic_irq_disable>
 200e378:	e0bff715 	stw	r2,-36(fp)
 200e37c:	e0bff917 	ldw	r2,-28(fp)
 200e380:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 200e384:	e0bffb17 	ldw	r2,-20(fp)
 200e388:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 200e38c:	e0bff717 	ldw	r2,-36(fp)
}
 200e390:	e037883a 	mov	sp,fp
 200e394:	dfc00117 	ldw	ra,4(sp)
 200e398:	df000017 	ldw	fp,0(sp)
 200e39c:	dec00204 	addi	sp,sp,8
 200e3a0:	f800283a 	ret

0200e3a4 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 200e3a4:	defff904 	addi	sp,sp,-28
 200e3a8:	dfc00615 	stw	ra,24(sp)
 200e3ac:	df000515 	stw	fp,20(sp)
 200e3b0:	df000504 	addi	fp,sp,20
 200e3b4:	e13ffc15 	stw	r4,-16(fp)
 200e3b8:	e17ffd15 	stw	r5,-12(fp)
 200e3bc:	e1bffe15 	stw	r6,-8(fp)
 200e3c0:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 200e3c4:	e13ffd17 	ldw	r4,-12(fp)
 200e3c8:	e17ffe17 	ldw	r5,-8(fp)
 200e3cc:	e1bfff17 	ldw	r6,-4(fp)
 200e3d0:	200e5f80 	call	200e5f8 <open>
 200e3d4:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 200e3d8:	e0bffb17 	ldw	r2,-20(fp)
 200e3dc:	10001c16 	blt	r2,zero,200e450 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
 200e3e0:	00808074 	movhi	r2,513
 200e3e4:	10bede04 	addi	r2,r2,-1160
 200e3e8:	e0fffb17 	ldw	r3,-20(fp)
 200e3ec:	18c00324 	muli	r3,r3,12
 200e3f0:	10c5883a 	add	r2,r2,r3
 200e3f4:	10c00017 	ldw	r3,0(r2)
 200e3f8:	e0bffc17 	ldw	r2,-16(fp)
 200e3fc:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 200e400:	00808074 	movhi	r2,513
 200e404:	10bede04 	addi	r2,r2,-1160
 200e408:	e0fffb17 	ldw	r3,-20(fp)
 200e40c:	18c00324 	muli	r3,r3,12
 200e410:	18c00104 	addi	r3,r3,4
 200e414:	10c5883a 	add	r2,r2,r3
 200e418:	10c00017 	ldw	r3,0(r2)
 200e41c:	e0bffc17 	ldw	r2,-16(fp)
 200e420:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 200e424:	00808074 	movhi	r2,513
 200e428:	10bede04 	addi	r2,r2,-1160
 200e42c:	e0fffb17 	ldw	r3,-20(fp)
 200e430:	18c00324 	muli	r3,r3,12
 200e434:	18c00204 	addi	r3,r3,8
 200e438:	10c5883a 	add	r2,r2,r3
 200e43c:	10c00017 	ldw	r3,0(r2)
 200e440:	e0bffc17 	ldw	r2,-16(fp)
 200e444:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 200e448:	e13ffb17 	ldw	r4,-20(fp)
 200e44c:	200cd800 	call	200cd80 <alt_release_fd>
  }
} 
 200e450:	e037883a 	mov	sp,fp
 200e454:	dfc00117 	ldw	ra,4(sp)
 200e458:	df000017 	ldw	fp,0(sp)
 200e45c:	dec00204 	addi	sp,sp,8
 200e460:	f800283a 	ret

0200e464 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 200e464:	defffb04 	addi	sp,sp,-20
 200e468:	dfc00415 	stw	ra,16(sp)
 200e46c:	df000315 	stw	fp,12(sp)
 200e470:	df000304 	addi	fp,sp,12
 200e474:	e13ffd15 	stw	r4,-12(fp)
 200e478:	e17ffe15 	stw	r5,-8(fp)
 200e47c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 200e480:	01008074 	movhi	r4,513
 200e484:	213ee104 	addi	r4,r4,-1148
 200e488:	e17ffd17 	ldw	r5,-12(fp)
 200e48c:	01800044 	movi	r6,1
 200e490:	01c07fc4 	movi	r7,511
 200e494:	200e3a40 	call	200e3a4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 200e498:	01008074 	movhi	r4,513
 200e49c:	213ede04 	addi	r4,r4,-1160
 200e4a0:	e17ffe17 	ldw	r5,-8(fp)
 200e4a4:	000d883a 	mov	r6,zero
 200e4a8:	01c07fc4 	movi	r7,511
 200e4ac:	200e3a40 	call	200e3a4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 200e4b0:	01008074 	movhi	r4,513
 200e4b4:	213ee404 	addi	r4,r4,-1136
 200e4b8:	e17fff17 	ldw	r5,-4(fp)
 200e4bc:	01800044 	movi	r6,1
 200e4c0:	01c07fc4 	movi	r7,511
 200e4c4:	200e3a40 	call	200e3a4 <alt_open_fd>
}  
 200e4c8:	e037883a 	mov	sp,fp
 200e4cc:	dfc00117 	ldw	ra,4(sp)
 200e4d0:	df000017 	ldw	fp,0(sp)
 200e4d4:	dec00204 	addi	sp,sp,8
 200e4d8:	f800283a 	ret

0200e4dc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 200e4dc:	defffe04 	addi	sp,sp,-8
 200e4e0:	dfc00115 	stw	ra,4(sp)
 200e4e4:	df000015 	stw	fp,0(sp)
 200e4e8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 200e4ec:	00808074 	movhi	r2,513
 200e4f0:	10836104 	addi	r2,r2,3460
 200e4f4:	10800017 	ldw	r2,0(r2)
 200e4f8:	10000526 	beq	r2,zero,200e510 <alt_get_errno+0x34>
 200e4fc:	00808074 	movhi	r2,513
 200e500:	10836104 	addi	r2,r2,3460
 200e504:	10800017 	ldw	r2,0(r2)
 200e508:	103ee83a 	callr	r2
 200e50c:	00000206 	br	200e518 <alt_get_errno+0x3c>
 200e510:	00808074 	movhi	r2,513
 200e514:	108a2704 	addi	r2,r2,10396
}
 200e518:	e037883a 	mov	sp,fp
 200e51c:	dfc00117 	ldw	ra,4(sp)
 200e520:	df000017 	ldw	fp,0(sp)
 200e524:	dec00204 	addi	sp,sp,8
 200e528:	f800283a 	ret

0200e52c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 200e52c:	defffd04 	addi	sp,sp,-12
 200e530:	df000215 	stw	fp,8(sp)
 200e534:	df000204 	addi	fp,sp,8
 200e538:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 200e53c:	e0bfff17 	ldw	r2,-4(fp)
 200e540:	10800217 	ldw	r2,8(r2)
 200e544:	10d00034 	orhi	r3,r2,16384
 200e548:	e0bfff17 	ldw	r2,-4(fp)
 200e54c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 200e550:	e03ffe15 	stw	zero,-8(fp)
 200e554:	00001d06 	br	200e5cc <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 200e558:	00808074 	movhi	r2,513
 200e55c:	10bede04 	addi	r2,r2,-1160
 200e560:	e0fffe17 	ldw	r3,-8(fp)
 200e564:	18c00324 	muli	r3,r3,12
 200e568:	10c5883a 	add	r2,r2,r3
 200e56c:	10c00017 	ldw	r3,0(r2)
 200e570:	e0bfff17 	ldw	r2,-4(fp)
 200e574:	10800017 	ldw	r2,0(r2)
 200e578:	1880111e 	bne	r3,r2,200e5c0 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 200e57c:	00808074 	movhi	r2,513
 200e580:	10bede04 	addi	r2,r2,-1160
 200e584:	e0fffe17 	ldw	r3,-8(fp)
 200e588:	18c00324 	muli	r3,r3,12
 200e58c:	18c00204 	addi	r3,r3,8
 200e590:	10c5883a 	add	r2,r2,r3
 200e594:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 200e598:	1000090e 	bge	r2,zero,200e5c0 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 200e59c:	e0bffe17 	ldw	r2,-8(fp)
 200e5a0:	10c00324 	muli	r3,r2,12
 200e5a4:	00808074 	movhi	r2,513
 200e5a8:	10bede04 	addi	r2,r2,-1160
 200e5ac:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 200e5b0:	e0bfff17 	ldw	r2,-4(fp)
 200e5b4:	18800226 	beq	r3,r2,200e5c0 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 200e5b8:	00bffcc4 	movi	r2,-13
 200e5bc:	00000a06 	br	200e5e8 <alt_file_locked+0xbc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 200e5c0:	e0bffe17 	ldw	r2,-8(fp)
 200e5c4:	10800044 	addi	r2,r2,1
 200e5c8:	e0bffe15 	stw	r2,-8(fp)
 200e5cc:	00808074 	movhi	r2,513
 200e5d0:	10836004 	addi	r2,r2,3456
 200e5d4:	10800017 	ldw	r2,0(r2)
 200e5d8:	1007883a 	mov	r3,r2
 200e5dc:	e0bffe17 	ldw	r2,-8(fp)
 200e5e0:	18bfdd2e 	bgeu	r3,r2,200e558 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 200e5e4:	0005883a 	mov	r2,zero
}
 200e5e8:	e037883a 	mov	sp,fp
 200e5ec:	df000017 	ldw	fp,0(sp)
 200e5f0:	dec00104 	addi	sp,sp,4
 200e5f4:	f800283a 	ret

0200e5f8 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 200e5f8:	defff604 	addi	sp,sp,-40
 200e5fc:	dfc00915 	stw	ra,36(sp)
 200e600:	df000815 	stw	fp,32(sp)
 200e604:	df000804 	addi	fp,sp,32
 200e608:	e13ffd15 	stw	r4,-12(fp)
 200e60c:	e17ffe15 	stw	r5,-8(fp)
 200e610:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 200e614:	00bfffc4 	movi	r2,-1
 200e618:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 200e61c:	00bffb44 	movi	r2,-19
 200e620:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 200e624:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 200e628:	e13ffd17 	ldw	r4,-12(fp)
 200e62c:	01408074 	movhi	r5,513
 200e630:	29435e04 	addi	r5,r5,3448
 200e634:	200e90c0 	call	200e90c <alt_find_dev>
 200e638:	e0bff815 	stw	r2,-32(fp)
 200e63c:	e0bff817 	ldw	r2,-32(fp)
 200e640:	1000051e 	bne	r2,zero,200e658 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 200e644:	e13ffd17 	ldw	r4,-12(fp)
 200e648:	200e99c0 	call	200e99c <alt_find_file>
 200e64c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 200e650:	00800044 	movi	r2,1
 200e654:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 200e658:	e0bff817 	ldw	r2,-32(fp)
 200e65c:	10002926 	beq	r2,zero,200e704 <open+0x10c>
  {
    if ((index = alt_get_fd (dev)) < 0)
 200e660:	e13ff817 	ldw	r4,-32(fp)
 200e664:	200eab00 	call	200eab0 <alt_get_fd>
 200e668:	e0bff915 	stw	r2,-28(fp)
 200e66c:	e0bff917 	ldw	r2,-28(fp)
 200e670:	1000030e 	bge	r2,zero,200e680 <open+0x88>
    {
      status = index;
 200e674:	e0bff917 	ldw	r2,-28(fp)
 200e678:	e0bffa15 	stw	r2,-24(fp)
 200e67c:	00002306 	br	200e70c <open+0x114>
    }
    else
    {
      fd = &alt_fd_list[index];
 200e680:	e0bff917 	ldw	r2,-28(fp)
 200e684:	10c00324 	muli	r3,r2,12
 200e688:	00808074 	movhi	r2,513
 200e68c:	10bede04 	addi	r2,r2,-1160
 200e690:	1885883a 	add	r2,r3,r2
 200e694:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 200e698:	e0fffe17 	ldw	r3,-8(fp)
 200e69c:	00900034 	movhi	r2,16384
 200e6a0:	10bfffc4 	addi	r2,r2,-1
 200e6a4:	1886703a 	and	r3,r3,r2
 200e6a8:	e0bffc17 	ldw	r2,-16(fp)
 200e6ac:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 200e6b0:	e0bffb17 	ldw	r2,-20(fp)
 200e6b4:	1000051e 	bne	r2,zero,200e6cc <open+0xd4>
 200e6b8:	e13ffc17 	ldw	r4,-16(fp)
 200e6bc:	200e52c0 	call	200e52c <alt_file_locked>
 200e6c0:	e0bffa15 	stw	r2,-24(fp)
 200e6c4:	e0bffa17 	ldw	r2,-24(fp)
 200e6c8:	10001016 	blt	r2,zero,200e70c <open+0x114>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 200e6cc:	e0bff817 	ldw	r2,-32(fp)
 200e6d0:	10800317 	ldw	r2,12(r2)
 200e6d4:	10000826 	beq	r2,zero,200e6f8 <open+0x100>
 200e6d8:	e0bff817 	ldw	r2,-32(fp)
 200e6dc:	10800317 	ldw	r2,12(r2)
 200e6e0:	e13ffc17 	ldw	r4,-16(fp)
 200e6e4:	e17ffd17 	ldw	r5,-12(fp)
 200e6e8:	e1bffe17 	ldw	r6,-8(fp)
 200e6ec:	e1ffff17 	ldw	r7,-4(fp)
 200e6f0:	103ee83a 	callr	r2
 200e6f4:	00000106 	br	200e6fc <open+0x104>
 200e6f8:	0005883a 	mov	r2,zero
 200e6fc:	e0bffa15 	stw	r2,-24(fp)
 200e700:	00000206 	br	200e70c <open+0x114>
      }
    }
  }
  else
  {
    status = -ENODEV;
 200e704:	00bffb44 	movi	r2,-19
 200e708:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 200e70c:	e0bffa17 	ldw	r2,-24(fp)
 200e710:	1000090e 	bge	r2,zero,200e738 <open+0x140>
  {
    alt_release_fd (index);  
 200e714:	e13ff917 	ldw	r4,-28(fp)
 200e718:	200cd800 	call	200cd80 <alt_release_fd>
    ALT_ERRNO = -status;
 200e71c:	200e4dc0 	call	200e4dc <alt_get_errno>
 200e720:	1007883a 	mov	r3,r2
 200e724:	e0bffa17 	ldw	r2,-24(fp)
 200e728:	0085c83a 	sub	r2,zero,r2
 200e72c:	18800015 	stw	r2,0(r3)
    return -1;
 200e730:	00bfffc4 	movi	r2,-1
 200e734:	00000106 	br	200e73c <open+0x144>
  }
  
  /* return the reference upon success */

  return index;
 200e738:	e0bff917 	ldw	r2,-28(fp)
}
 200e73c:	e037883a 	mov	sp,fp
 200e740:	dfc00117 	ldw	ra,4(sp)
 200e744:	df000017 	ldw	fp,0(sp)
 200e748:	dec00204 	addi	sp,sp,8
 200e74c:	f800283a 	ret

0200e750 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 200e750:	defffa04 	addi	sp,sp,-24
 200e754:	df000515 	stw	fp,20(sp)
 200e758:	df000504 	addi	fp,sp,20
 200e75c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 200e760:	0005303a 	rdctl	r2,status
 200e764:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 200e768:	e0fffc17 	ldw	r3,-16(fp)
 200e76c:	00bfff84 	movi	r2,-2
 200e770:	1884703a 	and	r2,r3,r2
 200e774:	1001703a 	wrctl	status,r2
  
  return context;
 200e778:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 200e77c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 200e780:	e0bfff17 	ldw	r2,-4(fp)
 200e784:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 200e788:	e0bffd17 	ldw	r2,-12(fp)
 200e78c:	10800017 	ldw	r2,0(r2)
 200e790:	e0fffd17 	ldw	r3,-12(fp)
 200e794:	18c00117 	ldw	r3,4(r3)
 200e798:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 200e79c:	e0bffd17 	ldw	r2,-12(fp)
 200e7a0:	10800117 	ldw	r2,4(r2)
 200e7a4:	e0fffd17 	ldw	r3,-12(fp)
 200e7a8:	18c00017 	ldw	r3,0(r3)
 200e7ac:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 200e7b0:	e0bffd17 	ldw	r2,-12(fp)
 200e7b4:	e0fffd17 	ldw	r3,-12(fp)
 200e7b8:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 200e7bc:	e0bffd17 	ldw	r2,-12(fp)
 200e7c0:	e0fffd17 	ldw	r3,-12(fp)
 200e7c4:	10c00015 	stw	r3,0(r2)
 200e7c8:	e0bffb17 	ldw	r2,-20(fp)
 200e7cc:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 200e7d0:	e0bffe17 	ldw	r2,-8(fp)
 200e7d4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 200e7d8:	e037883a 	mov	sp,fp
 200e7dc:	df000017 	ldw	fp,0(sp)
 200e7e0:	dec00104 	addi	sp,sp,4
 200e7e4:	f800283a 	ret

0200e7e8 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 200e7e8:	defffb04 	addi	sp,sp,-20
 200e7ec:	dfc00415 	stw	ra,16(sp)
 200e7f0:	df000315 	stw	fp,12(sp)
 200e7f4:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 200e7f8:	d0a00e17 	ldw	r2,-32712(gp)
 200e7fc:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 200e800:	d0a6d717 	ldw	r2,-25764(gp)
 200e804:	10800044 	addi	r2,r2,1
 200e808:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 200e80c:	00002e06 	br	200e8c8 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 200e810:	e0bffd17 	ldw	r2,-12(fp)
 200e814:	10800017 	ldw	r2,0(r2)
 200e818:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 200e81c:	e0bffd17 	ldw	r2,-12(fp)
 200e820:	10800403 	ldbu	r2,16(r2)
 200e824:	10803fcc 	andi	r2,r2,255
 200e828:	10000426 	beq	r2,zero,200e83c <alt_tick+0x54>
 200e82c:	d0a6d717 	ldw	r2,-25764(gp)
 200e830:	1000021e 	bne	r2,zero,200e83c <alt_tick+0x54>
    {
      alarm->rollover = 0;
 200e834:	e0bffd17 	ldw	r2,-12(fp)
 200e838:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 200e83c:	e0bffd17 	ldw	r2,-12(fp)
 200e840:	10800217 	ldw	r2,8(r2)
 200e844:	d0e6d717 	ldw	r3,-25764(gp)
 200e848:	18801d36 	bltu	r3,r2,200e8c0 <alt_tick+0xd8>
 200e84c:	e0bffd17 	ldw	r2,-12(fp)
 200e850:	10800403 	ldbu	r2,16(r2)
 200e854:	10803fcc 	andi	r2,r2,255
 200e858:	1000191e 	bne	r2,zero,200e8c0 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 200e85c:	e0bffd17 	ldw	r2,-12(fp)
 200e860:	10800317 	ldw	r2,12(r2)
 200e864:	e0fffd17 	ldw	r3,-12(fp)
 200e868:	18c00517 	ldw	r3,20(r3)
 200e86c:	1809883a 	mov	r4,r3
 200e870:	103ee83a 	callr	r2
 200e874:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 200e878:	e0bfff17 	ldw	r2,-4(fp)
 200e87c:	1000031e 	bne	r2,zero,200e88c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 200e880:	e13ffd17 	ldw	r4,-12(fp)
 200e884:	200e7500 	call	200e750 <alt_alarm_stop>
 200e888:	00000d06 	br	200e8c0 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 200e88c:	e0bffd17 	ldw	r2,-12(fp)
 200e890:	10c00217 	ldw	r3,8(r2)
 200e894:	e0bfff17 	ldw	r2,-4(fp)
 200e898:	1887883a 	add	r3,r3,r2
 200e89c:	e0bffd17 	ldw	r2,-12(fp)
 200e8a0:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 200e8a4:	e0bffd17 	ldw	r2,-12(fp)
 200e8a8:	10c00217 	ldw	r3,8(r2)
 200e8ac:	d0a6d717 	ldw	r2,-25764(gp)
 200e8b0:	1880032e 	bgeu	r3,r2,200e8c0 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 200e8b4:	e0bffd17 	ldw	r2,-12(fp)
 200e8b8:	00c00044 	movi	r3,1
 200e8bc:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 200e8c0:	e0bffe17 	ldw	r2,-8(fp)
 200e8c4:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 200e8c8:	e0fffd17 	ldw	r3,-12(fp)
 200e8cc:	d0a00e04 	addi	r2,gp,-32712
 200e8d0:	18bfcf1e 	bne	r3,r2,200e810 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 200e8d4:	0001883a 	nop
}
 200e8d8:	e037883a 	mov	sp,fp
 200e8dc:	dfc00117 	ldw	ra,4(sp)
 200e8e0:	df000017 	ldw	fp,0(sp)
 200e8e4:	dec00204 	addi	sp,sp,8
 200e8e8:	f800283a 	ret

0200e8ec <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
 200e8ec:	deffff04 	addi	sp,sp,-4
 200e8f0:	df000015 	stw	fp,0(sp)
 200e8f4:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 200e8f8:	000170fa 	wrctl	ienable,zero
}
 200e8fc:	e037883a 	mov	sp,fp
 200e900:	df000017 	ldw	fp,0(sp)
 200e904:	dec00104 	addi	sp,sp,4
 200e908:	f800283a 	ret

0200e90c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 200e90c:	defffa04 	addi	sp,sp,-24
 200e910:	dfc00515 	stw	ra,20(sp)
 200e914:	df000415 	stw	fp,16(sp)
 200e918:	df000404 	addi	fp,sp,16
 200e91c:	e13ffe15 	stw	r4,-8(fp)
 200e920:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 200e924:	e0bfff17 	ldw	r2,-4(fp)
 200e928:	10800017 	ldw	r2,0(r2)
 200e92c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 200e930:	e13ffe17 	ldw	r4,-8(fp)
 200e934:	20003980 	call	2000398 <strlen>
 200e938:	10800044 	addi	r2,r2,1
 200e93c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 200e940:	00000d06 	br	200e978 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 200e944:	e0bffc17 	ldw	r2,-16(fp)
 200e948:	10c00217 	ldw	r3,8(r2)
 200e94c:	e0bffd17 	ldw	r2,-12(fp)
 200e950:	1809883a 	mov	r4,r3
 200e954:	e17ffe17 	ldw	r5,-8(fp)
 200e958:	100d883a 	mov	r6,r2
 200e95c:	200ec3c0 	call	200ec3c <memcmp>
 200e960:	1000021e 	bne	r2,zero,200e96c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 200e964:	e0bffc17 	ldw	r2,-16(fp)
 200e968:	00000706 	br	200e988 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 200e96c:	e0bffc17 	ldw	r2,-16(fp)
 200e970:	10800017 	ldw	r2,0(r2)
 200e974:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 200e978:	e0fffc17 	ldw	r3,-16(fp)
 200e97c:	e0bfff17 	ldw	r2,-4(fp)
 200e980:	18bff01e 	bne	r3,r2,200e944 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 200e984:	0005883a 	mov	r2,zero
}
 200e988:	e037883a 	mov	sp,fp
 200e98c:	dfc00117 	ldw	ra,4(sp)
 200e990:	df000017 	ldw	fp,0(sp)
 200e994:	dec00204 	addi	sp,sp,8
 200e998:	f800283a 	ret

0200e99c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 200e99c:	defffb04 	addi	sp,sp,-20
 200e9a0:	dfc00415 	stw	ra,16(sp)
 200e9a4:	df000315 	stw	fp,12(sp)
 200e9a8:	df000304 	addi	fp,sp,12
 200e9ac:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 200e9b0:	00808074 	movhi	r2,513
 200e9b4:	10835c04 	addi	r2,r2,3440
 200e9b8:	10800017 	ldw	r2,0(r2)
 200e9bc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 200e9c0:	00003106 	br	200ea88 <alt_find_file+0xec>
  {
    len = strlen(next->name);
 200e9c4:	e0bffd17 	ldw	r2,-12(fp)
 200e9c8:	10800217 	ldw	r2,8(r2)
 200e9cc:	1009883a 	mov	r4,r2
 200e9d0:	20003980 	call	2000398 <strlen>
 200e9d4:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 200e9d8:	e0bffd17 	ldw	r2,-12(fp)
 200e9dc:	10c00217 	ldw	r3,8(r2)
 200e9e0:	e0bffe17 	ldw	r2,-8(fp)
 200e9e4:	10bfffc4 	addi	r2,r2,-1
 200e9e8:	1885883a 	add	r2,r3,r2
 200e9ec:	10800003 	ldbu	r2,0(r2)
 200e9f0:	10803fcc 	andi	r2,r2,255
 200e9f4:	1080201c 	xori	r2,r2,128
 200e9f8:	10bfe004 	addi	r2,r2,-128
 200e9fc:	10800bd8 	cmpnei	r2,r2,47
 200ea00:	1000031e 	bne	r2,zero,200ea10 <alt_find_file+0x74>
    {
      len -= 1;
 200ea04:	e0bffe17 	ldw	r2,-8(fp)
 200ea08:	10bfffc4 	addi	r2,r2,-1
 200ea0c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 200ea10:	e0bffe17 	ldw	r2,-8(fp)
 200ea14:	e0ffff17 	ldw	r3,-4(fp)
 200ea18:	1885883a 	add	r2,r3,r2
 200ea1c:	10800003 	ldbu	r2,0(r2)
 200ea20:	10803fcc 	andi	r2,r2,255
 200ea24:	1080201c 	xori	r2,r2,128
 200ea28:	10bfe004 	addi	r2,r2,-128
 200ea2c:	10800be0 	cmpeqi	r2,r2,47
 200ea30:	1000081e 	bne	r2,zero,200ea54 <alt_find_file+0xb8>
 200ea34:	e0bffe17 	ldw	r2,-8(fp)
 200ea38:	e0ffff17 	ldw	r3,-4(fp)
 200ea3c:	1885883a 	add	r2,r3,r2
 200ea40:	10800003 	ldbu	r2,0(r2)
 200ea44:	10803fcc 	andi	r2,r2,255
 200ea48:	1080201c 	xori	r2,r2,128
 200ea4c:	10bfe004 	addi	r2,r2,-128
 200ea50:	10000a1e 	bne	r2,zero,200ea7c <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
 200ea54:	e0bffd17 	ldw	r2,-12(fp)
 200ea58:	10c00217 	ldw	r3,8(r2)
 200ea5c:	e0bffe17 	ldw	r2,-8(fp)
 200ea60:	1809883a 	mov	r4,r3
 200ea64:	e17fff17 	ldw	r5,-4(fp)
 200ea68:	100d883a 	mov	r6,r2
 200ea6c:	200ec3c0 	call	200ec3c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 200ea70:	1000021e 	bne	r2,zero,200ea7c <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 200ea74:	e0bffd17 	ldw	r2,-12(fp)
 200ea78:	00000806 	br	200ea9c <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
 200ea7c:	e0bffd17 	ldw	r2,-12(fp)
 200ea80:	10800017 	ldw	r2,0(r2)
 200ea84:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 200ea88:	e0fffd17 	ldw	r3,-12(fp)
 200ea8c:	00808074 	movhi	r2,513
 200ea90:	10835c04 	addi	r2,r2,3440
 200ea94:	18bfcb1e 	bne	r3,r2,200e9c4 <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 200ea98:	0005883a 	mov	r2,zero
}
 200ea9c:	e037883a 	mov	sp,fp
 200eaa0:	dfc00117 	ldw	ra,4(sp)
 200eaa4:	df000017 	ldw	fp,0(sp)
 200eaa8:	dec00204 	addi	sp,sp,8
 200eaac:	f800283a 	ret

0200eab0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 200eab0:	defffc04 	addi	sp,sp,-16
 200eab4:	df000315 	stw	fp,12(sp)
 200eab8:	df000304 	addi	fp,sp,12
 200eabc:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 200eac0:	00bffa04 	movi	r2,-24
 200eac4:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 200eac8:	e03ffd15 	stw	zero,-12(fp)
 200eacc:	00001d06 	br	200eb44 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
 200ead0:	00808074 	movhi	r2,513
 200ead4:	10bede04 	addi	r2,r2,-1160
 200ead8:	e0fffd17 	ldw	r3,-12(fp)
 200eadc:	18c00324 	muli	r3,r3,12
 200eae0:	10c5883a 	add	r2,r2,r3
 200eae4:	10800017 	ldw	r2,0(r2)
 200eae8:	1000131e 	bne	r2,zero,200eb38 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
 200eaec:	00808074 	movhi	r2,513
 200eaf0:	10bede04 	addi	r2,r2,-1160
 200eaf4:	e0fffd17 	ldw	r3,-12(fp)
 200eaf8:	18c00324 	muli	r3,r3,12
 200eafc:	10c5883a 	add	r2,r2,r3
 200eb00:	e0ffff17 	ldw	r3,-4(fp)
 200eb04:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 200eb08:	00808074 	movhi	r2,513
 200eb0c:	10836004 	addi	r2,r2,3456
 200eb10:	10c00017 	ldw	r3,0(r2)
 200eb14:	e0bffd17 	ldw	r2,-12(fp)
 200eb18:	1880040e 	bge	r3,r2,200eb2c <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
 200eb1c:	00808074 	movhi	r2,513
 200eb20:	10836004 	addi	r2,r2,3456
 200eb24:	e0fffd17 	ldw	r3,-12(fp)
 200eb28:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
 200eb2c:	e0bffd17 	ldw	r2,-12(fp)
 200eb30:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 200eb34:	00000606 	br	200eb50 <alt_get_fd+0xa0>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 200eb38:	e0bffd17 	ldw	r2,-12(fp)
 200eb3c:	10800044 	addi	r2,r2,1
 200eb40:	e0bffd15 	stw	r2,-12(fp)
 200eb44:	e0bffd17 	ldw	r2,-12(fp)
 200eb48:	10800810 	cmplti	r2,r2,32
 200eb4c:	103fe01e 	bne	r2,zero,200ead0 <alt_get_fd+0x20>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 200eb50:	e0bffe17 	ldw	r2,-8(fp)
}
 200eb54:	e037883a 	mov	sp,fp
 200eb58:	df000017 	ldw	fp,0(sp)
 200eb5c:	dec00104 	addi	sp,sp,4
 200eb60:	f800283a 	ret

0200eb64 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 200eb64:	defffb04 	addi	sp,sp,-20
 200eb68:	df000415 	stw	fp,16(sp)
 200eb6c:	df000404 	addi	fp,sp,16
 200eb70:	e13ffe15 	stw	r4,-8(fp)
 200eb74:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 200eb78:	e0bfff17 	ldw	r2,-4(fp)
 200eb7c:	10840070 	cmpltui	r2,r2,4097
 200eb80:	1000021e 	bne	r2,zero,200eb8c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 200eb84:	00840004 	movi	r2,4096
 200eb88:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 200eb8c:	e0fffe17 	ldw	r3,-8(fp)
 200eb90:	e0bfff17 	ldw	r2,-4(fp)
 200eb94:	1885883a 	add	r2,r3,r2
 200eb98:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 200eb9c:	e0bffe17 	ldw	r2,-8(fp)
 200eba0:	e0bffc15 	stw	r2,-16(fp)
 200eba4:	00000506 	br	200ebbc <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 200eba8:	e0bffc17 	ldw	r2,-16(fp)
 200ebac:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 200ebb0:	e0bffc17 	ldw	r2,-16(fp)
 200ebb4:	10800804 	addi	r2,r2,32
 200ebb8:	e0bffc15 	stw	r2,-16(fp)
 200ebbc:	e0fffc17 	ldw	r3,-16(fp)
 200ebc0:	e0bffd17 	ldw	r2,-12(fp)
 200ebc4:	18bff836 	bltu	r3,r2,200eba8 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 200ebc8:	e0bffe17 	ldw	r2,-8(fp)
 200ebcc:	108007cc 	andi	r2,r2,31
 200ebd0:	10000226 	beq	r2,zero,200ebdc <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 200ebd4:	e0bffc17 	ldw	r2,-16(fp)
 200ebd8:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 200ebdc:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 200ebe0:	e037883a 	mov	sp,fp
 200ebe4:	df000017 	ldw	fp,0(sp)
 200ebe8:	dec00104 	addi	sp,sp,4
 200ebec:	f800283a 	ret

0200ebf0 <atexit>:
 200ebf0:	200b883a 	mov	r5,r4
 200ebf4:	000d883a 	mov	r6,zero
 200ebf8:	0009883a 	mov	r4,zero
 200ebfc:	000f883a 	mov	r7,zero
 200ec00:	200ecb81 	jmpi	200ecb8 <__register_exitproc>

0200ec04 <exit>:
 200ec04:	defffe04 	addi	sp,sp,-8
 200ec08:	000b883a 	mov	r5,zero
 200ec0c:	dc000015 	stw	r16,0(sp)
 200ec10:	dfc00115 	stw	ra,4(sp)
 200ec14:	2021883a 	mov	r16,r4
 200ec18:	200edcc0 	call	200edcc <__call_exitprocs>
 200ec1c:	00808074 	movhi	r2,513
 200ec20:	10835604 	addi	r2,r2,3416
 200ec24:	11000017 	ldw	r4,0(r2)
 200ec28:	20800f17 	ldw	r2,60(r4)
 200ec2c:	10000126 	beq	r2,zero,200ec34 <exit+0x30>
 200ec30:	103ee83a 	callr	r2
 200ec34:	8009883a 	mov	r4,r16
 200ec38:	200ef600 	call	200ef60 <_exit>

0200ec3c <memcmp>:
 200ec3c:	01c000c4 	movi	r7,3
 200ec40:	3980192e 	bgeu	r7,r6,200eca8 <memcmp+0x6c>
 200ec44:	2144b03a 	or	r2,r4,r5
 200ec48:	11c4703a 	and	r2,r2,r7
 200ec4c:	10000f26 	beq	r2,zero,200ec8c <memcmp+0x50>
 200ec50:	20800003 	ldbu	r2,0(r4)
 200ec54:	28c00003 	ldbu	r3,0(r5)
 200ec58:	10c0151e 	bne	r2,r3,200ecb0 <memcmp+0x74>
 200ec5c:	31bfff84 	addi	r6,r6,-2
 200ec60:	01ffffc4 	movi	r7,-1
 200ec64:	00000406 	br	200ec78 <memcmp+0x3c>
 200ec68:	20800003 	ldbu	r2,0(r4)
 200ec6c:	28c00003 	ldbu	r3,0(r5)
 200ec70:	31bfffc4 	addi	r6,r6,-1
 200ec74:	10c00e1e 	bne	r2,r3,200ecb0 <memcmp+0x74>
 200ec78:	21000044 	addi	r4,r4,1
 200ec7c:	29400044 	addi	r5,r5,1
 200ec80:	31fff91e 	bne	r6,r7,200ec68 <memcmp+0x2c>
 200ec84:	0005883a 	mov	r2,zero
 200ec88:	f800283a 	ret
 200ec8c:	20c00017 	ldw	r3,0(r4)
 200ec90:	28800017 	ldw	r2,0(r5)
 200ec94:	1880041e 	bne	r3,r2,200eca8 <memcmp+0x6c>
 200ec98:	31bfff04 	addi	r6,r6,-4
 200ec9c:	21000104 	addi	r4,r4,4
 200eca0:	29400104 	addi	r5,r5,4
 200eca4:	39bff936 	bltu	r7,r6,200ec8c <memcmp+0x50>
 200eca8:	303fe91e 	bne	r6,zero,200ec50 <memcmp+0x14>
 200ecac:	003ff506 	br	200ec84 <memcmp+0x48>
 200ecb0:	10c5c83a 	sub	r2,r2,r3
 200ecb4:	f800283a 	ret

0200ecb8 <__register_exitproc>:
 200ecb8:	00808074 	movhi	r2,513
 200ecbc:	defffa04 	addi	sp,sp,-24
 200ecc0:	10835604 	addi	r2,r2,3416
 200ecc4:	dc000315 	stw	r16,12(sp)
 200ecc8:	14000017 	ldw	r16,0(r2)
 200eccc:	dc400415 	stw	r17,16(sp)
 200ecd0:	dfc00515 	stw	ra,20(sp)
 200ecd4:	80805217 	ldw	r2,328(r16)
 200ecd8:	2023883a 	mov	r17,r4
 200ecdc:	10003626 	beq	r2,zero,200edb8 <__register_exitproc+0x100>
 200ece0:	10c00117 	ldw	r3,4(r2)
 200ece4:	010007c4 	movi	r4,31
 200ece8:	20c00e16 	blt	r4,r3,200ed24 <__register_exitproc+0x6c>
 200ecec:	1a400044 	addi	r9,r3,1
 200ecf0:	8800211e 	bne	r17,zero,200ed78 <__register_exitproc+0xc0>
 200ecf4:	18c00084 	addi	r3,r3,2
 200ecf8:	18c7883a 	add	r3,r3,r3
 200ecfc:	18c7883a 	add	r3,r3,r3
 200ed00:	12400115 	stw	r9,4(r2)
 200ed04:	10c7883a 	add	r3,r2,r3
 200ed08:	19400015 	stw	r5,0(r3)
 200ed0c:	0005883a 	mov	r2,zero
 200ed10:	dfc00517 	ldw	ra,20(sp)
 200ed14:	dc400417 	ldw	r17,16(sp)
 200ed18:	dc000317 	ldw	r16,12(sp)
 200ed1c:	dec00604 	addi	sp,sp,24
 200ed20:	f800283a 	ret
 200ed24:	00800034 	movhi	r2,0
 200ed28:	10800004 	addi	r2,r2,0
 200ed2c:	10002526 	beq	r2,zero,200edc4 <__register_exitproc+0x10c>
 200ed30:	01006404 	movi	r4,400
 200ed34:	d9400015 	stw	r5,0(sp)
 200ed38:	d9800115 	stw	r6,4(sp)
 200ed3c:	d9c00215 	stw	r7,8(sp)
 200ed40:	00000000 	call	0 <__alt_mem_background_mem>
 200ed44:	d9400017 	ldw	r5,0(sp)
 200ed48:	d9800117 	ldw	r6,4(sp)
 200ed4c:	d9c00217 	ldw	r7,8(sp)
 200ed50:	10001c26 	beq	r2,zero,200edc4 <__register_exitproc+0x10c>
 200ed54:	80c05217 	ldw	r3,328(r16)
 200ed58:	10000115 	stw	zero,4(r2)
 200ed5c:	02400044 	movi	r9,1
 200ed60:	10c00015 	stw	r3,0(r2)
 200ed64:	80805215 	stw	r2,328(r16)
 200ed68:	10006215 	stw	zero,392(r2)
 200ed6c:	10006315 	stw	zero,396(r2)
 200ed70:	0007883a 	mov	r3,zero
 200ed74:	883fdf26 	beq	r17,zero,200ecf4 <__register_exitproc+0x3c>
 200ed78:	18d1883a 	add	r8,r3,r3
 200ed7c:	4211883a 	add	r8,r8,r8
 200ed80:	1211883a 	add	r8,r2,r8
 200ed84:	41802215 	stw	r6,136(r8)
 200ed88:	01000044 	movi	r4,1
 200ed8c:	11806217 	ldw	r6,392(r2)
 200ed90:	20c8983a 	sll	r4,r4,r3
 200ed94:	310cb03a 	or	r6,r6,r4
 200ed98:	11806215 	stw	r6,392(r2)
 200ed9c:	41c04215 	stw	r7,264(r8)
 200eda0:	01800084 	movi	r6,2
 200eda4:	89bfd31e 	bne	r17,r6,200ecf4 <__register_exitproc+0x3c>
 200eda8:	11806317 	ldw	r6,396(r2)
 200edac:	3108b03a 	or	r4,r6,r4
 200edb0:	11006315 	stw	r4,396(r2)
 200edb4:	003fcf06 	br	200ecf4 <__register_exitproc+0x3c>
 200edb8:	80805304 	addi	r2,r16,332
 200edbc:	80805215 	stw	r2,328(r16)
 200edc0:	003fc706 	br	200ece0 <__register_exitproc+0x28>
 200edc4:	00bfffc4 	movi	r2,-1
 200edc8:	003fd106 	br	200ed10 <__register_exitproc+0x58>

0200edcc <__call_exitprocs>:
 200edcc:	00808074 	movhi	r2,513
 200edd0:	10835604 	addi	r2,r2,3416
 200edd4:	10800017 	ldw	r2,0(r2)
 200edd8:	defff404 	addi	sp,sp,-48
 200eddc:	dd800815 	stw	r22,32(sp)
 200ede0:	d8800015 	stw	r2,0(sp)
 200ede4:	10805204 	addi	r2,r2,328
 200ede8:	dd000615 	stw	r20,24(sp)
 200edec:	dc800415 	stw	r18,16(sp)
 200edf0:	dfc00b15 	stw	ra,44(sp)
 200edf4:	df000a15 	stw	fp,40(sp)
 200edf8:	ddc00915 	stw	r23,36(sp)
 200edfc:	dd400715 	stw	r21,28(sp)
 200ee00:	dcc00515 	stw	r19,20(sp)
 200ee04:	dc400315 	stw	r17,12(sp)
 200ee08:	dc000215 	stw	r16,8(sp)
 200ee0c:	2025883a 	mov	r18,r4
 200ee10:	2829883a 	mov	r20,r5
 200ee14:	d8800115 	stw	r2,4(sp)
 200ee18:	05bfffc4 	movi	r22,-1
 200ee1c:	d8800017 	ldw	r2,0(sp)
 200ee20:	14c05217 	ldw	r19,328(r2)
 200ee24:	98001d26 	beq	r19,zero,200ee9c <__call_exitprocs+0xd0>
 200ee28:	dd400117 	ldw	r21,4(sp)
 200ee2c:	98800117 	ldw	r2,4(r19)
 200ee30:	173fffc4 	addi	fp,r2,-1
 200ee34:	e0000d16 	blt	fp,zero,200ee6c <__call_exitprocs+0xa0>
 200ee38:	14000044 	addi	r16,r2,1
 200ee3c:	8421883a 	add	r16,r16,r16
 200ee40:	8421883a 	add	r16,r16,r16
 200ee44:	84402004 	addi	r17,r16,128
 200ee48:	9c63883a 	add	r17,r19,r17
 200ee4c:	9c21883a 	add	r16,r19,r16
 200ee50:	a0001e26 	beq	r20,zero,200eecc <__call_exitprocs+0x100>
 200ee54:	80804017 	ldw	r2,256(r16)
 200ee58:	15001c26 	beq	r2,r20,200eecc <__call_exitprocs+0x100>
 200ee5c:	e73fffc4 	addi	fp,fp,-1
 200ee60:	843fff04 	addi	r16,r16,-4
 200ee64:	8c7fff04 	addi	r17,r17,-4
 200ee68:	e5bff91e 	bne	fp,r22,200ee50 <__call_exitprocs+0x84>
 200ee6c:	00800034 	movhi	r2,0
 200ee70:	10800004 	addi	r2,r2,0
 200ee74:	10000926 	beq	r2,zero,200ee9c <__call_exitprocs+0xd0>
 200ee78:	98800117 	ldw	r2,4(r19)
 200ee7c:	1000311e 	bne	r2,zero,200ef44 <__call_exitprocs+0x178>
 200ee80:	98800017 	ldw	r2,0(r19)
 200ee84:	10003426 	beq	r2,zero,200ef58 <__call_exitprocs+0x18c>
 200ee88:	9809883a 	mov	r4,r19
 200ee8c:	a8800015 	stw	r2,0(r21)
 200ee90:	00000000 	call	0 <__alt_mem_background_mem>
 200ee94:	acc00017 	ldw	r19,0(r21)
 200ee98:	983fe41e 	bne	r19,zero,200ee2c <__call_exitprocs+0x60>
 200ee9c:	dfc00b17 	ldw	ra,44(sp)
 200eea0:	df000a17 	ldw	fp,40(sp)
 200eea4:	ddc00917 	ldw	r23,36(sp)
 200eea8:	dd800817 	ldw	r22,32(sp)
 200eeac:	dd400717 	ldw	r21,28(sp)
 200eeb0:	dd000617 	ldw	r20,24(sp)
 200eeb4:	dcc00517 	ldw	r19,20(sp)
 200eeb8:	dc800417 	ldw	r18,16(sp)
 200eebc:	dc400317 	ldw	r17,12(sp)
 200eec0:	dc000217 	ldw	r16,8(sp)
 200eec4:	dec00c04 	addi	sp,sp,48
 200eec8:	f800283a 	ret
 200eecc:	98800117 	ldw	r2,4(r19)
 200eed0:	80c00017 	ldw	r3,0(r16)
 200eed4:	10bfffc4 	addi	r2,r2,-1
 200eed8:	17001526 	beq	r2,fp,200ef30 <__call_exitprocs+0x164>
 200eedc:	80000015 	stw	zero,0(r16)
 200eee0:	183fde26 	beq	r3,zero,200ee5c <__call_exitprocs+0x90>
 200eee4:	00800044 	movi	r2,1
 200eee8:	1708983a 	sll	r4,r2,fp
 200eeec:	98806217 	ldw	r2,392(r19)
 200eef0:	9dc00117 	ldw	r23,4(r19)
 200eef4:	2084703a 	and	r2,r4,r2
 200eef8:	1000061e 	bne	r2,zero,200ef14 <__call_exitprocs+0x148>
 200eefc:	183ee83a 	callr	r3
 200ef00:	98800117 	ldw	r2,4(r19)
 200ef04:	15ffc51e 	bne	r2,r23,200ee1c <__call_exitprocs+0x50>
 200ef08:	a8800017 	ldw	r2,0(r21)
 200ef0c:	14ffd326 	beq	r2,r19,200ee5c <__call_exitprocs+0x90>
 200ef10:	003fc206 	br	200ee1c <__call_exitprocs+0x50>
 200ef14:	98806317 	ldw	r2,396(r19)
 200ef18:	2084703a 	and	r2,r4,r2
 200ef1c:	1000061e 	bne	r2,zero,200ef38 <__call_exitprocs+0x16c>
 200ef20:	89400017 	ldw	r5,0(r17)
 200ef24:	9009883a 	mov	r4,r18
 200ef28:	183ee83a 	callr	r3
 200ef2c:	003ff406 	br	200ef00 <__call_exitprocs+0x134>
 200ef30:	9f000115 	stw	fp,4(r19)
 200ef34:	003fea06 	br	200eee0 <__call_exitprocs+0x114>
 200ef38:	89000017 	ldw	r4,0(r17)
 200ef3c:	183ee83a 	callr	r3
 200ef40:	003fef06 	br	200ef00 <__call_exitprocs+0x134>
 200ef44:	98800017 	ldw	r2,0(r19)
 200ef48:	982b883a 	mov	r21,r19
 200ef4c:	1027883a 	mov	r19,r2
 200ef50:	983fb61e 	bne	r19,zero,200ee2c <__call_exitprocs+0x60>
 200ef54:	003fd106 	br	200ee9c <__call_exitprocs+0xd0>
 200ef58:	0005883a 	mov	r2,zero
 200ef5c:	003ffa06 	br	200ef48 <__call_exitprocs+0x17c>

0200ef60 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 200ef60:	defffd04 	addi	sp,sp,-12
 200ef64:	df000215 	stw	fp,8(sp)
 200ef68:	df000204 	addi	fp,sp,8
 200ef6c:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 200ef70:	0001883a 	nop
 200ef74:	e0bfff17 	ldw	r2,-4(fp)
 200ef78:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 200ef7c:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 200ef80:	10000226 	beq	r2,zero,200ef8c <_exit+0x2c>
    ALT_SIM_FAIL();
 200ef84:	002af070 	cmpltui	zero,zero,43969
 200ef88:	00000106 	br	200ef90 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 200ef8c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 200ef90:	003fff06 	br	200ef90 <_exit+0x30>
